2018-11-30 07:47:03 - Starting GtbankApiApplication on SOLDEV28 with PID 14260 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 07:47:03 - No active profile set, falling back to default profiles: default
2018-11-30 07:47:04 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@357670d7: startup date [Fri Nov 30 07:47:04 WAT 2018]; root of context hierarchy
2018-11-30 07:47:04 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 07:47:07 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 07:47:07 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 07:47:07 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 07:47:07 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$83f4bb25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 07:47:07 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 07:47:07 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$df5cf626] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 07:47:08 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 07:47:08 - Starting service Tomcat
2018-11-30 07:47:08 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 07:47:09 - Initializing Spring embedded WebApplicationContext
2018-11-30 07:47:09 - Root WebApplicationContext: initialization completed in 5006 ms
2018-11-30 07:47:09 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 07:47:09 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 07:47:09 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 07:47:09 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 07:47:09 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 07:47:09 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 07:47:09 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 07:47:09 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 07:47:09 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 07:47:09 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 07:47:10 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 07:47:10 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 07:47:10 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 07:47:10 - HHH000206: hibernate.properties not found
2018-11-30 07:47:10 - HHH000021: Bytecode provider name : javassist
2018-11-30 07:47:10 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 07:47:11 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 07:47:11 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 07:47:13 - 

Using default security password: 1d56ee1a-a9dd-4b02-ab55-75341b37114e

2018-11-30 07:47:13 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5539151e, org.springframework.security.web.context.SecurityContextPersistenceFilter@30af7d8b, org.springframework.security.web.header.HeaderWriterFilter@61ce642b, org.springframework.security.web.authentication.logout.LogoutFilter@3e23d992, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@403c4d70, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4fbf8418, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@479ef785, org.springframework.security.web.session.SessionManagementFilter@217e6477, org.springframework.security.web.access.ExceptionTranslationFilter@2873c1d4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6c037137]
2018-11-30 07:47:13 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@1192acd4, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@df3a2ab, org.springframework.security.web.context.SecurityContextPersistenceFilter@7599433e, org.springframework.security.web.header.HeaderWriterFilter@40524b39, org.springframework.security.web.authentication.logout.LogoutFilter@4b6c00ea, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1c7011bc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4bad7c02, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19f4fdcd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64595540, org.springframework.security.web.session.SessionManagementFilter@4a20e4e1, org.springframework.security.web.access.ExceptionTranslationFilter@22d38b24, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6835ff02]
2018-11-30 07:47:13 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@357670d7: startup date [Fri Nov 30 07:47:04 WAT 2018]; root of context hierarchy
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 07:47:13 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 07:47:13 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 07:47:13 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 07:47:13 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 07:47:13 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 07:47:13 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 07:47:14 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 07:47:14 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 07:47:14 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 07:47:14 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 07:47:14 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 07:47:14 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 07:47:14 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 07:47:14 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 07:47:14 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 07:47:14 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 07:47:14 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 07:47:14 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 07:47:14 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 07:47:14 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 07:47:14 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 07:47:14 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 07:47:14 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 07:47:14 - LiveReload server is running on port 35729
2018-11-30 07:47:14 - Registering beans for JMX exposure on startup
2018-11-30 07:47:14 - Registering beans for JMX exposure on startup
2018-11-30 07:47:14 - Starting beans in phase 0
2018-11-30 07:47:14 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 07:47:14 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 07:47:14 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 07:47:14 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 07:47:14 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 07:47:14 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 07:47:14 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 07:47:14 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 07:47:14 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 07:47:14 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 07:47:14 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 07:47:14 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 07:47:14 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 07:47:14 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 07:47:14 - Using a shared selector for servlet write/read
2018-11-30 07:47:14 - Tomcat started on port(s): 8094 (http)
2018-11-30 07:47:14 - Started GtbankApiApplication in 11.079 seconds (JVM running for 19.578)
2018-11-30 07:47:24 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 07:47:24 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 07:47:24 - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2018-11-30 07:47:24 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:47:24 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222226, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:47:24 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"DwQsHbntJOFnPeOf91uKUItYn92qTw7fnp8kKDkaHAtizUkNAKdqtcQEa++nnJUfUAihRqAWXug0ZT5JckaQpjifAxKCanYcx9y/ylhrJ+dDbfQkPbJrDvCrhmEPzLqQwmftGguUPibYAU+5EJqrQv4zJul99ptxm0yGvgieqTc\u003d","channel":"TP-XPAGENT","userId":"GtoHMWda2DSsPTQuB3SHKghqLJBJ7LsnQL0V6j7vnWsBgCDVPW9FJ06H7wqNUCkXkdpsPMPhpTrMk2C7qB3AkYA7goMUPSR0crQzu2ygg6pyUM+UeFi1FhFz3eruPWWECcw3P1nU/Eiqe8L9WKtxjNlpPL4axi7VlcHhwCjzbH8\u003d"}
2018-11-30 07:47:26 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791608507942473","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Ranaerbenjamin@teleworm.us","gender":"Female","phoneNumber2":"07020602869","levelOfAccount":"Level 3 - High Level Accounts","lgaOfOrigin":"Esan South-east","lgaOfResidence":"Kanam","maritalStatus":"Widow","nin":"352-923-1835","nameOnCard":"Ranae Benjamin","nationality":"Nigeria","residentialAddress":"425 Chardonnay Drive","stateOfOrigin":"edo state","stateOfResidence":"plateau state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222226","firstName":"Ranae","middleName":"R","lastName":"Benjamin","dateOfBirth":"03-Oct-1993","registrationDate":"20-Dec-2016","enrollmentBank":"068","enrollmentBranch":"NULL","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:47:31 GMT], Content-Length=[20300]}>
2018-11-30 07:53:36 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:53:36 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222223, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:53:36 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"AYJxsOXt3uLU5dSMsgs+0xRuu11VuWKmz0ibUMDwu8hqn9amhU/9jS+G0dTC3cwipAtkNOhwNtRq+/ZkCdahCcdUJqaMOHTzpjxteu0VmZxExYsxskoND5k4BXrZBYfbdeWF5/Ti2rSkGqNTW80Eosw5CX0NXboSVjozUg5HgkM\u003d","channel":"TP-XPAGENT","userId":"Y3UIqyqN6pH6Cd6iA2oohVSQf6kyrmL76TTgjKryjvL1QU3sSo9ryHpB3jbfqpJqvAcDDtMKez37Ra8Qr8DAnBml1VSF/Rt+QnI/iTUfxpfX2TQcV2Kc/fPi/S5zwq6P+ic/9PuO869mUlq3w3iCVd0/nXkNxo93iVQ3Ts5NKFQ\u003d"}
2018-11-30 07:53:36 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791612216754881","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:53:41 GMT], Content-Length=[20340]}>
2018-11-30 07:53:59 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:53:59 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222224, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:53:59 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"V8SOOy0tN0CKyCShpX5w6Vu/aLxuOl5Y5enEcLSQMetQPQRPsEehZfsh0qMSSPz3UIcxZLlSsCldRL4s473Wr2y3vN3i9dVLDPDI/rVG9ZOjShvny999PyJugYiX5WGX7oMNSGXDh9HEUM0IvHZlT21xPA3ZfwCDXf3yoCdumn4\u003d","channel":"TP-XPAGENT","userId":"Vji6YxeBO4FBkB0Cnbj9I+Ojf3XCp/cZ+a0Txb3DDgTolKzAV69ChtW7AFOtpn23jgvgD3ZoljMpBto75tNa+fuWdP2lvgtu4tysMk0GJJ999BiLz2L6RLEbdCHrazXOP8mp5/kPEp89on09/c+TSmfVLYUIEnIFi2PI9A+huPA\u003d"}
2018-11-30 07:53:59 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791612448688143","responseCode":"01","responseDescription":"The searched BVN does not exist","responseObject":null},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:54:05 GMT], Content-Length=[132]}>
2018-11-30 07:54:12 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:54:13 - :::::::::: REQUEST SingleBVNRequest(bvn=32222222224, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:54:13 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"WAViBm8OucWQWzlsg4isBy5wQVlrmCYDknuRq6aKg3mAMILuJeqXn0FIMqhVxBMrl7Jwqw3k1OJMKAZshETuk/OKkkQ5FSXgnKxl/crnca0/ZFDGABOHcX+AFR5CC7rstxfIyjPwaKg4vRTYU4pr2KxzMnZr5RiTe3rol02wU5M\u003d","channel":"TP-XPAGENT","userId":"FYCvaSuu5UdcTyArqP43WKLA3VNKRtJUQlQXDrLYI+05T0wpFAO5kppR3vYEPI14hpHOun5h39GVM7jvplO/DG3ogfVocRZdpf5Z+fCMo+V1jMM7gJqz4ZNJZKtUvrtNaJYcNpArB22Ptk0EemUwL3yHYEwqi/+xeYOvyx8flfM\u003d"}
2018-11-30 07:54:13 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791612585585970","responseCode":"01","responseDescription":"The searched BVN does not exist","responseObject":null},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:54:18 GMT], Content-Length=[132]}>
2018-11-30 07:54:27 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:54:27 - :::::::::: REQUEST SingleBVNRequest(bvn=55555555555555, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:54:27 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"KiyH/CqmVGQEO2uYMsB0/3X7glh6hrG+88IJZvuMZfSdm+sTqs+nsYybnH5vsWEGUMJeD5GQUT6Pku+NzSAoH/pbnVAfL/TsW5PYG07qMVbfjvlS1mtqCUwSy62fSKWTKW9DnSRmqW3mwOgoil53u3LYRsVFxgxIAo390g016u8\u003d","channel":"TP-XPAGENT","userId":"A4UXNmn/8Ox/Vrku6ZkT1ZoHjkrdtf4C6NmU6qVYA/u/wKm2MLjnqiEEpXa+s7NETvEA6tSWQOGCM9Jd51d+L6tqsFEsoKX2uDZ5BL8snnbdu3Am5UOAj4riDAKVi9Cc72Qkn6zToEkTtaTegjf7kzmhqGAjy1MwFwqtSZUc9/Y\u003d"}
2018-11-30 07:54:29 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791612742324941","responseCode":"02","responseDescription":"","responseObject":null},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:54:34 GMT], Content-Length=[101]}>
2018-11-30 07:54:38 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:54:38 - :::::::::: REQUEST SingleBVNRequest(bvn=555555555555, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:54:38 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"O5gdpt82iKK1e2vtzX+MgmnJpS+AHfPpv5uH7D3HKUVPRymHW00fj4K4mwkK6u3AUth6pITWkfuFuUgiCJmvkeFEiQq+7HVRn8BOs3XkbEYzrLB1xEvCN9GbOKBIgVeV8BR8uSq6w1E+RhNmjG5OSZUHU3EsjDK8DpvyzoHOVtc\u003d","channel":"TP-XPAGENT","userId":"YD0iUcANzeBaMorkOWEd889pswOv2roGNJf8ypAITtUGUs4NbpeGRCGaVaUizVq/sJ4pMbdE/Zd4Plvn/9On8i/J0XZUfhBl77eNW/JAqOOO1YUOx08LvL5rg+b/WRMSLsl7PFeR3T9oxjoD6nCENGwE4/7YpH1ECHaOHC+eCzw\u003d"}
2018-11-30 07:54:39 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791612848001020","responseCode":"02","responseDescription":"","responseObject":null},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:54:44 GMT], Content-Length=[101]}>
2018-11-30 07:54:46 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:54:46 - :::::::::: REQUEST SingleBVNRequest(bvn=55555555, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:54:46 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"UUeDPhXrafZiuCFsA6KkRpezcZ7BeT8Y67lBIouRrtq2+ClQo1HHHLTaNIfgwFlmblIVb4rJ5hRzr3qCvwapIuQfc8yHh93tiFvArqMiIwAGOaB4TPPWDSE7y6a47LczvuqTuHulyNq4D/BONMQbRKmbmE+7THoOkWpr3TFBOaE\u003d","channel":"TP-XPAGENT","userId":"BMH4BzezPp2QfxtLoejecVJSyD/A+YipbiJY7rwZ2wpB4kJ4cATY9sA78Tm8TANGXU0QiYH7ppL/dL9Ja74ipwgx6NAu908pWuLBU3xdTCaYxwtQTMOenzReQqCJrKhCk0Fo0VNfozkL4lFHbmrvRWlfUGn4buYh1BE4Inmb97I\u003d"}
2018-11-30 07:54:47 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791612922845285","responseCode":"02","responseDescription":"","responseObject":null},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:54:52 GMT], Content-Length=[101]}>
2018-11-30 07:55:03 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:55:03 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222225, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:55:03 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"WNlCAFT6p/whtK0lwkiGPMwgr43qCf2SZnVSMFo6qOyhVkrenUgyXZXQkTj0DddnVlsZ+GspEJhCR21/A0X4DA6i3iLL7xa2pPi2zDewipNyAkNeoESTu+M/KSqgQH0I4efA+uOFrvcQVIiFofAJntGcye3XD89ix90SsrYwk5Q\u003d","channel":"TP-XPAGENT","userId":"KcN0cQbwi89DO/qFDveMmqcLODVI+YLpKyCMlnoF6BBtdjGF4NYph/aWCaa1YirCs0LiWOC027v8Qhn6igk/8AAqinOkIQn6czNUc4ciiEVsKSU9h1xWKNRNkn6DIPlcAuSjyRxg2cdc/5H1duWBw7Qgf65LLgy2RIcIarg91p8\u003d"}
2018-11-30 07:55:04 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791613092304992","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Amyljonas@gustr.com","gender":"Female","phoneNumber2":"07021067432","levelOfAccount":"Level 3 - High Level Accounts","lgaOfOrigin":"Mokwa","lgaOfResidence":"Olorunda","maritalStatus":"Married","nin":"320-367-2648","nameOnCard":"Amy Jonas","nationality":"Nigeria","residentialAddress":"3279 Newton Street","stateOfOrigin":"niger state","stateOfResidence":"osun state","title":"Prof","base64Image":"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","responseCode":"00","bvn":"22222222225","firstName":"Amy","middleName":"L","lastName":"Jonas","dateOfBirth":"31-Jan-1986","registrationDate":"20-Dec-2016","enrollmentBank":"076","enrollmentBranch":"NULL","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:55:09 GMT], Content-Length=[20277]}>
2018-11-30 07:55:24 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:55:24 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222226, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:55:24 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"LIBuQqf5s8vx0xCCDEE5wa+xckkajkNpDblus+z0JmZCdU7csUxzL6GQGAh3ZsXv+JhFK5J8hM325wz5Td6rtt+Uwc/c7NXl5TGHq/NX/721mcJjgcPWuFLMgKcaNiGprg+ATYgJfNgIaBaFEBvwVYUylvsixmGpcGSbMQLi5ts\u003d","channel":"TP-XPAGENT","userId":"ILCMqUkDiXPRt5vszsvDwNJS315haTy6b9IADYNIZS6fjjlEeID3p9nMk3dhIbzWRr0TL9d8FD8I0KnQnz9u62zSdHgcO+NUne7cOq+7e9c4cmEK5JTiVlsUU7nhwB6gMmYESkxvCvgd+Tsev0sLDc/RMPEFFgTIipSd+I2dgdk\u003d"}
2018-11-30 07:55:25 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791613299996889","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Ranaerbenjamin@teleworm.us","gender":"Female","phoneNumber2":"07020602869","levelOfAccount":"Level 3 - High Level Accounts","lgaOfOrigin":"Esan South-east","lgaOfResidence":"Kanam","maritalStatus":"Widow","nin":"352-923-1835","nameOnCard":"Ranae Benjamin","nationality":"Nigeria","residentialAddress":"425 Chardonnay Drive","stateOfOrigin":"edo state","stateOfResidence":"plateau state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222226","firstName":"Ranae","middleName":"R","lastName":"Benjamin","dateOfBirth":"03-Oct-1993","registrationDate":"20-Dec-2016","enrollmentBank":"068","enrollmentBranch":"NULL","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:55:30 GMT], Content-Length=[20300]}>
2018-11-30 07:55:48 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:55:48 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222227, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:55:48 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"CtP0soGHvSi8ufrsoxyxtuxO2zrEcsXvGsa8g4a3TPJb3tQkbXPhWeGhgK+Htpbnq7Pvf1QrBmq9zQYHMAibr5/KuiQ7mvf/3Dx7vsKLvvI4DZ8CAz52ljoEsLchlfJTJ6J49rjm3HNQwZ2g4ShLGnFboz09fM2pTjkqJXIv/JA\u003d","channel":"TP-XPAGENT","userId":"Er6R6HFW99YJ1bN+JDn0PpCsmDD6Oe5HVEp86mdwJFfSq2pdO0GOFj4Lif4qvJlwm0GYcO2MXoJrYd5W1gM9htd1e4DDUJureEN0OgJWKNf8DJT50heWxq6tK9Z3QLy++TMCpAggugYeNO2JDuX545ngLwp2EQ1tF+jSnUaw+BI\u003d"}
2018-11-30 07:55:50 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791613550681231","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Debbieastjohn@armyspy.com","gender":"Female","phoneNumber2":"07012128871","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Gezawa","lgaOfResidence":"Sanga","maritalStatus":"Divorcee","nin":"734-752-7554","nameOnCard":"Debbie Stjohn","nationality":"Nigeria","residentialAddress":"2133 Eagle Drive","stateOfOrigin":"kano state","stateOfResidence":"kaduna state","title":"Mrs","base64Image":"","responseCode":"00","bvn":"22222222227","firstName":"Debbie","middleName":"A","lastName":"Stjohn","dateOfBirth":"15-Jun-1980","registrationDate":"20-Dec-2016","enrollmentBank":"030","enrollmentBranch":"NULL","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:55:55 GMT], Content-Length=[20290]}>
2018-11-30 07:56:04 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:56:04 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222228, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:56:04 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"WUVWQ+BM3JWiKnw6JDwc/6pHWeqUd1CP3yoTUNiORphxxsuxYatOTylY7aOR7/0fe+aAhhnPU6tG/PE5kzWzEy6YHp+2BNYc31dRZr59u4KSpWpQsDWFhhdp+lLjXGTgvs9Q3JpEDUjyykQJdPXP2AOajeQ7Rt8E6TKRQ5zFRMA\u003d","channel":"TP-XPAGENT","userId":"SSUFbHuS0sJdTtVtpKEc9PHVDCWAglxJVvr4tHlFnvrhSZDUShd4PImYi7SUolAa+40eFeudOk/rnqjQiT7bUAjaUAMfiJ1xDt9c3eYySjPDjKj2mxJDcaCZofgHsN7fXf+a6YpaCtTjKCQKnO9kUaFoN4n9Pi6NxJKseNLrduE\u003d"}
2018-11-30 07:56:05 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791613710930432","responseCode":"01","responseDescription":"The searched BVN does not exist","responseObject":null},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:56:11 GMT], Content-Length=[132]}>
2018-11-30 07:56:22 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 07:56:22 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222229, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 07:56:22 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"E2dQB+qJvsapecaYGE09XYpYwylZ8M7Mwlu+lDD6VqQKMcrFhhWCik1rvk9YDMPF2HBDwF9G/13i1Kx0n4pfUGC9ag9I4sIawRlOdpu6nvjEBoWkbq+R8CRbjilDKWEvW7zRAo46/z+ePHBv+Ft/OUwp2fBrkCkINecSc9AHr5s\u003d","channel":"TP-XPAGENT","userId":"BitwRvGFu4tF/aaINQkDeI6BkeJlfThFSXkqTZA6hWN8yf5nwW64iG0QwsSnm+XBc0nsXSeMjlhaRNxGVdRa4VDGzkfrBNa/5+obVcIuzQThBOxv8tz3/r+xbcPqQhyAGPF5Uw9fPdMUVBASn6z4qCkwqWYJaJ2/xtVqKqUhNAU\u003d"}
2018-11-30 07:56:25 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791613908231732","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Patricklharrison@einrot.com","gender":"Male","phoneNumber2":"07012838885","levelOfAccount":"Level 3 - High Level Accounts","lgaOfOrigin":"Lere","lgaOfResidence":"Jada","maritalStatus":"Married","nin":"815-284-8825","nameOnCard":"Patrick Harrison","nationality":"Nigeria","residentialAddress":"4028 Emeral Dreams Drive","stateOfOrigin":"kaduna state","stateOfResidence":"adamawa state","title":"Miss","base64Image":"","responseCode":"00","bvn":"22222222229","firstName":"Patrick","middleName":"L","lastName":"Harrison","dateOfBirth":"08-Oct-1969","registrationDate":"20-Dec-2016","enrollmentBank":"050","enrollmentBranch":"NULL","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 06:56:30 GMT], Content-Length=[20302]}>
2018-11-30 08:22:16 - Starting GtbankApiApplication on SOLDEV28 with PID 29268 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 08:22:16 - No active profile set, falling back to default profiles: default
2018-11-30 08:22:16 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6faf4571: startup date [Fri Nov 30 08:22:16 WAT 2018]; root of context hierarchy
2018-11-30 08:22:17 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 08:22:19 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 08:22:19 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:22:20 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:22:20 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$1ef51c75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:22:20 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 08:22:20 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7a5d5776] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:22:21 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 08:22:21 - Starting service Tomcat
2018-11-30 08:22:21 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 08:22:21 - Initializing Spring embedded WebApplicationContext
2018-11-30 08:22:21 - Root WebApplicationContext: initialization completed in 4579 ms
2018-11-30 08:22:21 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 08:22:21 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 08:22:21 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 08:22:21 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 08:22:21 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 08:22:21 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 08:22:21 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 08:22:21 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 08:22:21 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 08:22:21 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 08:22:23 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 08:22:23 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 08:22:23 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 08:22:23 - HHH000206: hibernate.properties not found
2018-11-30 08:22:23 - HHH000021: Bytecode provider name : javassist
2018-11-30 08:22:23 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 08:22:23 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 08:22:24 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 08:22:25 - 

Using default security password: 41160c7e-b48f-40d1-bc4d-a1382fbea31b

2018-11-30 08:22:25 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e79ffec, org.springframework.security.web.context.SecurityContextPersistenceFilter@59e7e1e, org.springframework.security.web.header.HeaderWriterFilter@5f18475d, org.springframework.security.web.authentication.logout.LogoutFilter@a320da2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39756bd6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44bb6a3c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@377f4a28, org.springframework.security.web.session.SessionManagementFilter@1d7ffc5c, org.springframework.security.web.access.ExceptionTranslationFilter@6e6e1b4e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@322deb5c]
2018-11-30 08:22:26 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@9465fe4, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@528a3146, org.springframework.security.web.context.SecurityContextPersistenceFilter@4036b132, org.springframework.security.web.header.HeaderWriterFilter@7b992079, org.springframework.security.web.authentication.logout.LogoutFilter@32070f1d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@efab814, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b539533, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@297bf4c8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e5db1a3, org.springframework.security.web.session.SessionManagementFilter@7431780, org.springframework.security.web.access.ExceptionTranslationFilter@2a6e2a05, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6b8871f6]
2018-11-30 08:22:26 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6faf4571: startup date [Fri Nov 30 08:22:16 WAT 2018]; root of context hierarchy
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 08:22:26 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 08:22:26 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 08:22:26 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:22:26 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:22:26 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 08:22:26 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:22:27 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 08:22:27 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 08:22:27 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:22:27 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 08:22:27 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:22:27 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:22:27 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 08:22:27 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:22:27 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:22:27 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:22:27 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 08:22:27 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:22:27 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:22:27 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 08:22:27 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 08:22:27 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:22:27 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:22:27 - LiveReload server is running on port 35729
2018-11-30 08:22:28 - Registering beans for JMX exposure on startup
2018-11-30 08:22:28 - Registering beans for JMX exposure on startup
2018-11-30 08:22:28 - Starting beans in phase 0
2018-11-30 08:22:28 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 08:22:28 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 08:22:28 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 08:22:28 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 08:22:28 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 08:22:28 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 08:22:28 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 08:22:28 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 08:22:28 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 08:22:28 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 08:22:28 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 08:22:28 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 08:22:28 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 08:22:28 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 08:22:28 - Using a shared selector for servlet write/read
2018-11-30 08:22:28 - Tomcat started on port(s): 8094 (http)
2018-11-30 08:22:28 - Started GtbankApiApplication in 12.373 seconds (JVM running for 14.062)
2018-11-30 08:25:11 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 08:25:11 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 08:25:11 - FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-11-30 08:25:29 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 08:25:29 - Error: null
java.lang.NullPointerException: null
	at com.xpresspayments.ZenithBank.util.RSAUtil.encrypt(RSAUtil.java:41)
	at com.xpresspayments.ZenithBank.util.RSAUtil.getStringEncrypt(RSAUtil.java:32)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.OpenAccount(AccountOpeningService.java:100)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(AccountOpeningController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 08:25:29 - Resolved exception caused by Handler execution: java.lang.NullPointerException
2018-11-30 08:36:21 - Starting GtbankApiApplication on SOLDEV28 with PID 8484 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 08:36:21 - No active profile set, falling back to default profiles: default
2018-11-30 08:36:21 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d87d0f6: startup date [Fri Nov 30 08:36:21 WAT 2018]; root of context hierarchy
2018-11-30 08:36:22 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 08:36:24 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 08:36:24 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:36:25 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:36:25 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$2f18dcc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:36:25 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 08:36:25 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a8117c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:36:25 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 08:36:26 - Starting service Tomcat
2018-11-30 08:36:26 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 08:36:26 - Initializing Spring embedded WebApplicationContext
2018-11-30 08:36:26 - Root WebApplicationContext: initialization completed in 4426 ms
2018-11-30 08:36:26 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 08:36:26 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 08:36:26 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 08:36:26 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 08:36:26 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 08:36:26 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 08:36:26 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 08:36:26 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 08:36:26 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 08:36:26 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 08:36:28 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 08:36:28 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 08:36:28 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 08:36:28 - HHH000206: hibernate.properties not found
2018-11-30 08:36:28 - HHH000021: Bytecode provider name : javassist
2018-11-30 08:36:28 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 08:36:28 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 08:36:29 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 08:36:30 - 

Using default security password: 24572226-4d97-4dd2-a153-5ed84c5842b9

2018-11-30 08:36:30 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24ea3806, org.springframework.security.web.context.SecurityContextPersistenceFilter@2681c95e, org.springframework.security.web.header.HeaderWriterFilter@1e30b611, org.springframework.security.web.authentication.logout.LogoutFilter@1d4c0b4c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e65cdd7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@244f5901, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70ade406, org.springframework.security.web.session.SessionManagementFilter@35b703f5, org.springframework.security.web.access.ExceptionTranslationFilter@2dddb171, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f77036d]
2018-11-30 08:36:30 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@4f3e9ecc, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7342afd5, org.springframework.security.web.context.SecurityContextPersistenceFilter@19408064, org.springframework.security.web.header.HeaderWriterFilter@57a315da, org.springframework.security.web.authentication.logout.LogoutFilter@37dea0c7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@70f85680, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a681637, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@152ac565, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@612c4f7b, org.springframework.security.web.session.SessionManagementFilter@4174f725, org.springframework.security.web.access.ExceptionTranslationFilter@195b5605, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6cb133b6]
2018-11-30 08:36:31 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d87d0f6: startup date [Fri Nov 30 08:36:21 WAT 2018]; root of context hierarchy
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 08:36:31 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 08:36:31 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 08:36:31 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:36:31 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:36:31 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 08:36:31 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:36:32 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:36:32 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:36:32 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 08:36:32 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:36:32 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 08:36:32 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:36:32 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:36:32 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 08:36:32 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:36:32 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:36:32 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 08:36:32 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 08:36:32 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 08:36:32 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:36:32 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:36:32 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 08:36:32 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:36:32 - LiveReload server is running on port 35729
2018-11-30 08:36:32 - Registering beans for JMX exposure on startup
2018-11-30 08:36:32 - Registering beans for JMX exposure on startup
2018-11-30 08:36:32 - Starting beans in phase 0
2018-11-30 08:36:32 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 08:36:32 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 08:36:32 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 08:36:32 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 08:36:32 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 08:36:32 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 08:36:32 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 08:36:32 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 08:36:32 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 08:36:32 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 08:36:32 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 08:36:32 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 08:36:32 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 08:36:32 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 08:36:32 - Using a shared selector for servlet write/read
2018-11-30 08:36:32 - Tomcat started on port(s): 8094 (http)
2018-11-30 08:36:32 - Started GtbankApiApplication in 11.759 seconds (JVM running for 13.436)
2018-11-30 08:36:36 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 08:36:36 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 08:36:36 - FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-11-30 08:36:45 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 08:36:45 - Error: null
java.lang.NullPointerException: null
	at com.xpresspayments.ZenithBank.util.RSAUtil.encrypt(RSAUtil.java:41)
	at com.xpresspayments.ZenithBank.util.RSAUtil.getStringEncrypt(RSAUtil.java:32)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.OpenAccount(AccountOpeningService.java:102)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(AccountOpeningController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 08:36:45 - Resolved exception caused by Handler execution: java.lang.NullPointerException
2018-11-30 08:37:39 - Starting GtbankApiApplication on SOLDEV28 with PID 10472 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 08:37:39 - No active profile set, falling back to default profiles: default
2018-11-30 08:37:39 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a5fe756: startup date [Fri Nov 30 08:37:39 WAT 2018]; root of context hierarchy
2018-11-30 08:37:40 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 08:37:42 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 08:37:42 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:37:42 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:37:43 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$99e98b93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:37:43 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 08:37:43 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f551c694] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:37:43 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 08:37:43 - Starting service Tomcat
2018-11-30 08:37:43 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 08:37:44 - Initializing Spring embedded WebApplicationContext
2018-11-30 08:37:44 - Root WebApplicationContext: initialization completed in 4277 ms
2018-11-30 08:37:44 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 08:37:44 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 08:37:44 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 08:37:44 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 08:37:44 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 08:37:44 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 08:37:44 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 08:37:44 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 08:37:44 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 08:37:44 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 08:37:46 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 08:37:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 08:37:46 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 08:37:46 - HHH000206: hibernate.properties not found
2018-11-30 08:37:46 - HHH000021: Bytecode provider name : javassist
2018-11-30 08:37:46 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 08:37:46 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 08:37:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 08:37:48 - 

Using default security password: 72d2c31e-af46-4b55-bbf6-65e224774327

2018-11-30 08:37:48 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@287d2527, org.springframework.security.web.context.SecurityContextPersistenceFilter@534f3602, org.springframework.security.web.header.HeaderWriterFilter@e7dffcb, org.springframework.security.web.authentication.logout.LogoutFilter@6e19bfda, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e8ba638, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2c0abcd4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74e26818, org.springframework.security.web.session.SessionManagementFilter@30820d56, org.springframework.security.web.access.ExceptionTranslationFilter@21f1c5ab, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17ee7584]
2018-11-30 08:37:48 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@26f61f2f, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3df352e0, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c5d4ba1, org.springframework.security.web.header.HeaderWriterFilter@3bd3b983, org.springframework.security.web.authentication.logout.LogoutFilter@2e31e7cc, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@463c243c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76ea451f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5053f5e0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b800425, org.springframework.security.web.session.SessionManagementFilter@3fa0b10, org.springframework.security.web.access.ExceptionTranslationFilter@11b7ed3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70b0de78]
2018-11-30 08:37:48 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a5fe756: startup date [Fri Nov 30 08:37:39 WAT 2018]; root of context hierarchy
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 08:37:48 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 08:37:48 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 08:37:48 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:37:48 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:37:48 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 08:37:49 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:37:49 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 08:37:49 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:37:49 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 08:37:49 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:37:49 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:37:49 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 08:37:49 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:37:49 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 08:37:49 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:37:49 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:37:49 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:37:49 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:37:49 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 08:37:49 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:37:49 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 08:37:49 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 08:37:49 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:37:50 - LiveReload server is running on port 35729
2018-11-30 08:37:50 - Registering beans for JMX exposure on startup
2018-11-30 08:37:50 - Registering beans for JMX exposure on startup
2018-11-30 08:37:50 - Starting beans in phase 0
2018-11-30 08:37:50 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 08:37:50 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 08:37:50 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 08:37:50 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 08:37:50 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 08:37:50 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 08:37:50 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 08:37:50 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 08:37:50 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 08:37:50 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 08:37:50 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 08:37:50 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 08:37:50 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 08:37:50 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 08:37:50 - Using a shared selector for servlet write/read
2018-11-30 08:37:50 - Tomcat started on port(s): 8094 (http)
2018-11-30 08:37:50 - Started GtbankApiApplication in 11.191 seconds (JVM running for 12.856)
2018-11-30 08:38:22 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 08:38:22 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 08:38:23 - FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-11-30 08:38:48 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 08:38:48 - Error: null
java.lang.NullPointerException: null
	at com.xpresspayments.ZenithBank.util.RSAUtil.encrypt(RSAUtil.java:41)
	at com.xpresspayments.ZenithBank.util.RSAUtil.getStringEncrypt(RSAUtil.java:32)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.OpenAccount(AccountOpeningService.java:102)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(AccountOpeningController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 08:38:48 - Resolved exception caused by Handler execution: java.lang.NullPointerException
2018-11-30 08:56:10 - Starting GtbankApiApplication on SOLDEV28 with PID 24724 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 08:56:10 - No active profile set, falling back to default profiles: default
2018-11-30 08:56:10 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 08:56:10 WAT 2018]; root of context hierarchy
2018-11-30 08:56:11 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 08:56:12 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 08:56:13 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:56:13 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:56:13 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$11fba30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:56:13 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 08:56:13 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5c87f531] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 08:56:13 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 08:56:13 - Starting service Tomcat
2018-11-30 08:56:13 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 08:56:14 - Initializing Spring embedded WebApplicationContext
2018-11-30 08:56:14 - Root WebApplicationContext: initialization completed in 3863 ms
2018-11-30 08:56:14 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 08:56:14 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 08:56:14 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 08:56:14 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 08:56:14 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 08:56:14 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 08:56:14 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 08:56:14 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 08:56:14 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 08:56:14 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 08:56:16 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 08:56:16 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 08:56:16 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 08:56:16 - HHH000206: hibernate.properties not found
2018-11-30 08:56:16 - HHH000021: Bytecode provider name : javassist
2018-11-30 08:56:16 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 08:56:16 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 08:56:17 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 08:56:19 - 

Using default security password: 04ed5bf8-7461-4565-8e29-9c55a4871437

2018-11-30 08:56:19 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c6fe4c3, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d2653ec, org.springframework.security.web.header.HeaderWriterFilter@1272a193, org.springframework.security.web.authentication.logout.LogoutFilter@48a26300, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f9db9f8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69692c85, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@725bddb0, org.springframework.security.web.session.SessionManagementFilter@cea5136, org.springframework.security.web.access.ExceptionTranslationFilter@7f89e5ca, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@66f9a2e3]
2018-11-30 08:56:19 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@48bfff0e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7cd51b0e, org.springframework.security.web.context.SecurityContextPersistenceFilter@46c01fba, org.springframework.security.web.header.HeaderWriterFilter@32db8b3e, org.springframework.security.web.authentication.logout.LogoutFilter@c0df26c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2c4303b4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cd42ece, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7238c411, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a84f233, org.springframework.security.web.session.SessionManagementFilter@3c873a6a, org.springframework.security.web.access.ExceptionTranslationFilter@5bb03fcb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7bef76db]
2018-11-30 08:56:19 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 08:56:10 WAT 2018]; root of context hierarchy
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 08:56:19 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 08:56:19 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 08:56:19 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:56:19 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:56:20 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 08:56:20 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 08:56:20 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:56:20 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:56:20 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:56:20 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 08:56:20 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 08:56:20 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:56:20 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 08:56:20 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 08:56:20 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:56:20 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 08:56:20 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:56:20 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:56:20 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 08:56:20 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:56:20 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:56:20 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 08:56:20 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 08:56:21 - LiveReload server is running on port 35729
2018-11-30 08:56:21 - Registering beans for JMX exposure on startup
2018-11-30 08:56:21 - Registering beans for JMX exposure on startup
2018-11-30 08:56:21 - Starting beans in phase 0
2018-11-30 08:56:21 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 08:56:21 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 08:56:21 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 08:56:21 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 08:56:21 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 08:56:21 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 08:56:21 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 08:56:21 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 08:56:21 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 08:56:21 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 08:56:21 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 08:56:21 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 08:56:21 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 08:56:21 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 08:56:21 - Using a shared selector for servlet write/read
2018-11-30 08:56:21 - Tomcat started on port(s): 8094 (http)
2018-11-30 08:56:21 - Started GtbankApiApplication in 12.142 seconds (JVM running for 13.166)
2018-11-30 08:56:40 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 08:56:40 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 08:56:40 - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-11-30 08:56:40 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 08:56:40 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222226, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 08:56:40 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"F4a8dghXpmiceN3rWaTXk7PgX1YS7f6qvjxQN0Wsu9UorTUo7uepw0KNI5BTziqhFrGp5vN8QIAwUqScJwy81DwSYpwJZsFMbugXxo67+8ATVMVkGtr9FaahPcR6GkzpCpJHkUxnKEjGT2uSL9yQXBux4egv+B4o/JgfNPfypy8\u003d","channel":"TP-XPAGENT","userId":"PSmHg1OWVhTTC5NlsAQNRbTIdUW23NHpz+De+Jna0HXNzXxLseCTyV8XJvz+cY7cLEhYEhAV5h3rDX+M855FsTwmxr83xJR0mopjlsizMwYOGhlVHYMiADpRIIZ9OmVAbJtxL2d6SkHnwZqb71i3NqXtunErZa4dIe8nrzjcE70\u003d"}
2018-11-30 08:56:45 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791650098674329","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Ranaerbenjamin@teleworm.us","gender":"Female","phoneNumber2":"07020602869","levelOfAccount":"Level 3 - High Level Accounts","lgaOfOrigin":"Esan South-east","lgaOfResidence":"Kanam","maritalStatus":"Widow","nin":"352-923-1835","nameOnCard":"Ranae Benjamin","nationality":"Nigeria","residentialAddress":"425 Chardonnay Drive","stateOfOrigin":"edo state","stateOfResidence":"plateau state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222226","firstName":"Ranae","middleName":"R","lastName":"Benjamin","dateOfBirth":"03-Oct-1993","registrationDate":"20-Dec-2016","enrollmentBank":"068","enrollmentBranch":"NULL","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 07:56:50 GMT], Content-Length=[20300]}>
2018-11-30 11:27:30 - Starting GtbankApiApplication on SOLDEV28 with PID 18960 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 11:27:30 - No active profile set, falling back to default profiles: default
2018-11-30 11:27:30 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c4f1052: startup date [Fri Nov 30 11:27:30 WAT 2018]; root of context hierarchy
2018-11-30 11:27:31 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 11:27:33 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 11:27:33 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:27:33 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:27:33 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$40bd27b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:27:33 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 11:27:33 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c2562b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:27:34 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 11:27:34 - Starting service Tomcat
2018-11-30 11:27:34 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 11:27:34 - Initializing Spring embedded WebApplicationContext
2018-11-30 11:27:34 - Root WebApplicationContext: initialization completed in 3658 ms
2018-11-30 11:27:34 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 11:27:34 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 11:27:34 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 11:27:34 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 11:27:34 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 11:27:34 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 11:27:34 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 11:27:34 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 11:27:34 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 11:27:34 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 11:27:36 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 11:27:36 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 11:27:36 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 11:27:36 - HHH000206: hibernate.properties not found
2018-11-30 11:27:36 - HHH000021: Bytecode provider name : javassist
2018-11-30 11:27:36 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 11:27:36 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 11:27:37 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 11:27:38 - 

Using default security password: 57b978c4-caf4-48bc-acab-6a6466789019

2018-11-30 11:27:38 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6af4ca89, org.springframework.security.web.context.SecurityContextPersistenceFilter@6048adfc, org.springframework.security.web.header.HeaderWriterFilter@4241c91b, org.springframework.security.web.authentication.logout.LogoutFilter@414eda5b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37ffce4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@50278676, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@681dce2d, org.springframework.security.web.session.SessionManagementFilter@5174e95d, org.springframework.security.web.access.ExceptionTranslationFilter@5009ffc3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@34e889d]
2018-11-30 11:27:38 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@45282b24, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2a294731, org.springframework.security.web.context.SecurityContextPersistenceFilter@64b22d70, org.springframework.security.web.header.HeaderWriterFilter@78424a44, org.springframework.security.web.authentication.logout.LogoutFilter@cfb03a5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@353b4aaa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30f7937c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0def4c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@11e4b2c3, org.springframework.security.web.session.SessionManagementFilter@512fc748, org.springframework.security.web.access.ExceptionTranslationFilter@374c7ba9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@60118779]
2018-11-30 11:27:38 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c4f1052: startup date [Fri Nov 30 11:27:30 WAT 2018]; root of context hierarchy
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 11:27:38 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 11:27:38 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 11:27:38 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:27:38 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:27:38 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 11:27:38 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:27:39 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:27:39 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 11:27:39 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 11:27:39 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:27:39 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 11:27:39 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 11:27:39 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:27:39 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:27:39 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:27:39 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 11:27:39 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:27:39 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:27:39 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:27:39 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:27:39 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 11:27:39 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:27:39 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 11:27:39 - LiveReload server is running on port 35729
2018-11-30 11:27:39 - Registering beans for JMX exposure on startup
2018-11-30 11:27:39 - Registering beans for JMX exposure on startup
2018-11-30 11:27:39 - Starting beans in phase 0
2018-11-30 11:27:39 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 11:27:39 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 11:27:39 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 11:27:39 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 11:27:39 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 11:27:39 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 11:27:39 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 11:27:39 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 11:27:39 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 11:27:39 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 11:27:39 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 11:27:39 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 11:27:39 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 11:27:39 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 11:27:39 - Using a shared selector for servlet write/read
2018-11-30 11:27:39 - Tomcat started on port(s): 8094 (http)
2018-11-30 11:27:39 - Started GtbankApiApplication in 9.557 seconds (JVM running for 10.564)
2018-11-30 11:27:49 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 11:27:49 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 11:27:49 - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2018-11-30 11:27:49 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:27:49 - Error: null
java.lang.NullPointerException: null
	at com.xpresspayments.ZenithBank.util.RSAUtil.encrypt(RSAUtil.java:41)
	at com.xpresspayments.ZenithBank.util.RSAUtil.getStringEncrypt(RSAUtil.java:32)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.OpenAccount(AccountOpeningService.java:94)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(AccountOpeningController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 11:27:49 - Resolved exception caused by Handler execution: java.lang.NullPointerException
2018-11-30 11:31:16 - Starting GtbankApiApplication on SOLDEV28 with PID 8552 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 11:31:16 - No active profile set, falling back to default profiles: default
2018-11-30 11:31:16 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@660f2a81: startup date [Fri Nov 30 11:31:16 WAT 2018]; root of context hierarchy
2018-11-30 11:31:17 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 11:31:19 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 11:31:19 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:31:19 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:31:19 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$3b025db7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:31:19 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 11:31:19 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$966a98b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:31:20 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 11:31:20 - Starting service Tomcat
2018-11-30 11:31:20 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 11:31:20 - Initializing Spring embedded WebApplicationContext
2018-11-30 11:31:20 - Root WebApplicationContext: initialization completed in 3647 ms
2018-11-30 11:31:20 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 11:31:20 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 11:31:20 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 11:31:20 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 11:31:20 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 11:31:20 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 11:31:20 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 11:31:20 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 11:31:20 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 11:31:20 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 11:31:23 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 11:31:24 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 11:31:24 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 11:31:24 - HHH000206: hibernate.properties not found
2018-11-30 11:31:24 - HHH000021: Bytecode provider name : javassist
2018-11-30 11:31:24 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 11:31:24 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 11:31:25 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 11:31:27 - 

Using default security password: d07a56c1-acdd-4e06-a146-4dce4081ac31

2018-11-30 11:31:27 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@582dfb83, org.springframework.security.web.context.SecurityContextPersistenceFilter@48f9c01e, org.springframework.security.web.header.HeaderWriterFilter@5bd80490, org.springframework.security.web.authentication.logout.LogoutFilter@67301da7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b63ab8d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@51fa50ae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3b6fac11, org.springframework.security.web.session.SessionManagementFilter@77b57f30, org.springframework.security.web.access.ExceptionTranslationFilter@390232de, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f667aef]
2018-11-30 11:31:27 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@74a9437e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ecd26dc, org.springframework.security.web.context.SecurityContextPersistenceFilter@7bdf9742, org.springframework.security.web.header.HeaderWriterFilter@5d522357, org.springframework.security.web.authentication.logout.LogoutFilter@14cd6b0f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@32470522, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59675101, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15e389e1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c2bf1a2, org.springframework.security.web.session.SessionManagementFilter@52c1122, org.springframework.security.web.access.ExceptionTranslationFilter@ac51bfb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7fb9e044]
2018-11-30 11:31:27 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@660f2a81: startup date [Fri Nov 30 11:31:16 WAT 2018]; root of context hierarchy
2018-11-30 11:31:27 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 11:31:27 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 11:31:27 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 11:31:27 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 11:31:27 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:31:27 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:31:27 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 11:31:28 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 11:31:28 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 11:31:28 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 11:31:28 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 11:31:28 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 11:31:28 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 11:31:28 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:31:28 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:31:28 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 11:31:28 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:31:28 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 11:31:28 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 11:31:28 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 11:31:28 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:31:28 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:31:28 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:31:28 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:31:28 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 11:31:28 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:31:28 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 11:31:28 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:31:28 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:31:28 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 11:31:28 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 11:31:28 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:31:28 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:31:28 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:31:29 - LiveReload server is running on port 35729
2018-11-30 11:31:29 - Registering beans for JMX exposure on startup
2018-11-30 11:31:29 - Registering beans for JMX exposure on startup
2018-11-30 11:31:29 - Starting beans in phase 0
2018-11-30 11:31:29 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 11:31:29 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 11:31:29 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 11:31:29 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 11:31:29 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 11:31:29 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 11:31:29 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 11:31:29 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 11:31:29 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 11:31:29 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 11:31:29 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 11:31:29 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 11:31:29 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 11:31:29 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 11:31:29 - Using a shared selector for servlet write/read
2018-11-30 11:31:29 - Tomcat started on port(s): 8094 (http)
2018-11-30 11:31:29 - Started GtbankApiApplication in 12.98 seconds (JVM running for 13.998)
2018-11-30 11:31:39 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 11:31:39 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 11:31:39 - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2018-11-30 11:31:39 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:31:39 - Error: null
java.lang.NullPointerException: null
	at com.xpresspayments.ZenithBank.util.RSAUtil.encrypt(RSAUtil.java:41)
	at com.xpresspayments.ZenithBank.util.RSAUtil.getStringEncrypt(RSAUtil.java:32)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.OpenAccount(AccountOpeningService.java:94)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(AccountOpeningController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 11:31:39 - Resolved exception caused by Handler execution: java.lang.NullPointerException
2018-11-30 11:33:27 - Starting GtbankApiApplication on SOLDEV28 with PID 11460 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 11:33:27 - No active profile set, falling back to default profiles: default
2018-11-30 11:33:27 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2353ebaa: startup date [Fri Nov 30 11:33:27 WAT 2018]; root of context hierarchy
2018-11-30 11:33:28 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 11:33:29 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 11:33:30 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:33:30 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:33:30 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$696059e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:33:30 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 11:33:30 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c4c894e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:33:30 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 11:33:30 - Starting service Tomcat
2018-11-30 11:33:30 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 11:33:31 - Initializing Spring embedded WebApplicationContext
2018-11-30 11:33:31 - Root WebApplicationContext: initialization completed in 3424 ms
2018-11-30 11:33:31 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 11:33:31 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 11:33:31 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 11:33:31 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 11:33:31 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 11:33:31 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 11:33:31 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 11:33:31 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 11:33:31 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 11:33:31 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 11:33:32 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 11:33:32 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 11:33:32 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 11:33:32 - HHH000206: hibernate.properties not found
2018-11-30 11:33:32 - HHH000021: Bytecode provider name : javassist
2018-11-30 11:33:32 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 11:33:33 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 11:33:33 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 11:33:34 - 

Using default security password: 66eb38f7-eb06-4d3a-b505-35f9802a39ab

2018-11-30 11:33:34 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@60d334ea, org.springframework.security.web.context.SecurityContextPersistenceFilter@4e753c04, org.springframework.security.web.header.HeaderWriterFilter@7319a4d0, org.springframework.security.web.authentication.logout.LogoutFilter@29684859, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79934064, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a4b00d6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@193833d7, org.springframework.security.web.session.SessionManagementFilter@2e51f6b4, org.springframework.security.web.access.ExceptionTranslationFilter@4da3a206, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2a993bde]
2018-11-30 11:33:34 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@24f576b8, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b039c47, org.springframework.security.web.context.SecurityContextPersistenceFilter@640b4b67, org.springframework.security.web.header.HeaderWriterFilter@4b22c4ed, org.springframework.security.web.authentication.logout.LogoutFilter@f145933, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6c0467b6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28150533, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@754db970, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@8286842, org.springframework.security.web.session.SessionManagementFilter@33aeec29, org.springframework.security.web.access.ExceptionTranslationFilter@6914a8d5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@237b6769]
2018-11-30 11:33:34 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2353ebaa: startup date [Fri Nov 30 11:33:27 WAT 2018]; root of context hierarchy
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 11:33:34 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 11:33:35 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 11:33:35 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 11:33:35 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:33:35 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:33:35 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 11:33:35 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:33:35 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 11:33:35 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:33:35 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:33:35 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 11:33:35 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:33:35 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:33:35 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:33:35 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 11:33:35 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:33:35 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 11:33:35 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 11:33:35 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:33:35 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 11:33:35 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:33:35 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:33:35 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 11:33:35 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:33:35 - LiveReload server is running on port 35729
2018-11-30 11:33:35 - Registering beans for JMX exposure on startup
2018-11-30 11:33:35 - Registering beans for JMX exposure on startup
2018-11-30 11:33:35 - Starting beans in phase 0
2018-11-30 11:33:35 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 11:33:35 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 11:33:35 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 11:33:35 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 11:33:35 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 11:33:35 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 11:33:35 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 11:33:35 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 11:33:35 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 11:33:35 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 11:33:35 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 11:33:35 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 11:33:35 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 11:33:35 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 11:33:35 - Using a shared selector for servlet write/read
2018-11-30 11:33:35 - Tomcat started on port(s): 8094 (http)
2018-11-30 11:33:35 - Started GtbankApiApplication in 9.145 seconds (JVM running for 10.178)
2018-11-30 11:33:43 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 11:33:43 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 11:33:43 - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2018-11-30 11:33:43 - Error: null
java.lang.NullPointerException: null
	at com.xpresspayments.ZenithBank.util.RSAUtil.encrypt(RSAUtil.java:41)
	at com.xpresspayments.ZenithBank.util.RSAUtil.getStringEncrypt(RSAUtil.java:32)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.OpenAccount(AccountOpeningService.java:91)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(AccountOpeningController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 11:33:43 - Resolved exception caused by Handler execution: java.lang.NullPointerException
2018-11-30 11:34:07 - Error: null
java.lang.NullPointerException: null
	at com.xpresspayments.ZenithBank.util.RSAUtil.encrypt(RSAUtil.java:41)
	at com.xpresspayments.ZenithBank.util.RSAUtil.getStringEncrypt(RSAUtil.java:32)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.OpenAccount(AccountOpeningService.java:91)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(AccountOpeningController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 11:34:07 - Resolved exception caused by Handler execution: java.lang.NullPointerException
2018-11-30 11:35:28 - Starting GtbankApiApplication on SOLDEV28 with PID 464 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 11:35:28 - No active profile set, falling back to default profiles: default
2018-11-30 11:35:28 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 11:35:28 WAT 2018]; root of context hierarchy
2018-11-30 11:35:29 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 11:35:31 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 11:35:31 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:35:31 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:35:31 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$c21cc177] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:35:31 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 11:35:31 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1d84fc78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:35:32 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 11:35:32 - Starting service Tomcat
2018-11-30 11:35:32 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 11:35:32 - Initializing Spring embedded WebApplicationContext
2018-11-30 11:35:32 - Root WebApplicationContext: initialization completed in 3532 ms
2018-11-30 11:35:32 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 11:35:32 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 11:35:32 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 11:35:32 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 11:35:32 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 11:35:32 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 11:35:32 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 11:35:32 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 11:35:32 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 11:35:32 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 11:35:34 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 11:35:34 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 11:35:34 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 11:35:34 - HHH000206: hibernate.properties not found
2018-11-30 11:35:34 - HHH000021: Bytecode provider name : javassist
2018-11-30 11:35:34 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 11:35:34 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 11:35:35 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 11:35:36 - 

Using default security password: a979cff9-cb62-465e-81cf-2c495d8274c2

2018-11-30 11:35:36 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@223eb7d6, org.springframework.security.web.context.SecurityContextPersistenceFilter@232716a4, org.springframework.security.web.header.HeaderWriterFilter@3addc615, org.springframework.security.web.authentication.logout.LogoutFilter@6258b130, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@631bd69f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f4f8b75, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c6fe4c3, org.springframework.security.web.session.SessionManagementFilter@5868dee2, org.springframework.security.web.access.ExceptionTranslationFilter@cccfdc1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e75c98]
2018-11-30 11:35:36 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@6343764e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@48bfff0e, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c873a6a, org.springframework.security.web.header.HeaderWriterFilter@5bb03fcb, org.springframework.security.web.authentication.logout.LogoutFilter@319208ce, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@b44126a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46c01fba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cd42ece, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7cd51b0e, org.springframework.security.web.session.SessionManagementFilter@32db8b3e, org.springframework.security.web.access.ExceptionTranslationFilter@618367df, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6249165b]
2018-11-30 11:35:36 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 11:35:28 WAT 2018]; root of context hierarchy
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 11:35:37 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 11:35:37 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 11:35:37 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:35:37 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:35:37 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 11:35:37 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:35:37 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:35:37 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:35:37 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:35:37 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 11:35:37 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:35:37 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 11:35:37 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:35:37 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:35:37 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 11:35:37 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 11:35:37 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 11:35:37 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:35:37 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 11:35:37 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:35:37 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:35:37 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:35:37 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 11:35:38 - LiveReload server is running on port 35729
2018-11-30 11:35:38 - Registering beans for JMX exposure on startup
2018-11-30 11:35:38 - Registering beans for JMX exposure on startup
2018-11-30 11:35:38 - Starting beans in phase 0
2018-11-30 11:35:38 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 11:35:38 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 11:35:38 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 11:35:38 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 11:35:38 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 11:35:38 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 11:35:38 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 11:35:38 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 11:35:38 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 11:35:38 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 11:35:38 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 11:35:38 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 11:35:38 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 11:35:38 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 11:35:38 - Using a shared selector for servlet write/read
2018-11-30 11:35:38 - Tomcat started on port(s): 8094 (http)
2018-11-30 11:35:38 - Started GtbankApiApplication in 10.234 seconds (JVM running for 11.325)
2018-11-30 11:36:00 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 11:36:00 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 11:36:00 - FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-11-30 11:36:00 - :::::::::: REQUEST to GT BANK Account OpeningApiAccountOpeningRequest(firstName=Rose, lastName=manda, middleName=null, address=diamond street, email=roseeee@gmail.com, phoneNo=null, dob=06/09/1989, gender=1, motherMaiden=frank, bvn=244444444444, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:36:00 - Error: null
java.lang.NullPointerException: null
	at com.xpresspayments.ZenithBank.util.RSAUtil.encrypt(RSAUtil.java:41)
	at com.xpresspayments.ZenithBank.util.RSAUtil.getStringEncrypt(RSAUtil.java:32)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.OpenAccount(AccountOpeningService.java:92)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(AccountOpeningController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 11:36:01 - Resolved exception caused by Handler execution: java.lang.NullPointerException
2018-11-30 11:37:37 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 11:37:37 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222223, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 11:37:37 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"MS3SuamW02ZDIbuhIVGPYudoTr3OmqVWdbqepbnSCUQhNXXOseU+ewBnfWgByOLLz6mFyoCcv1wDBg9osvNVczc/JuhyEpAN+N1MhxLBIzs5+9y+yPh6kNCJMH5ddxYsvPWGdA8TrOUZqTCy1NNPtFIsjAEwXH6eJhwnWifM2mI\u003d","channel":"TP-XPAGENT","userId":"Y5BbQdKP5jThmLJVabv7LVei7BaZzmeQvgucagPjYL7bLng1HEr+cQJC2f5uez9ON2qZNDiGBX7VGDhIfsvrqSeEUtH8p4nrteZl8qktuU1yISKEU/rMmvouWPqMQBBtsqonvt7n/Sj/sO7R5494dG4NFWzwrxm/onNnUh+jd3I\u003d"}
2018-11-30 11:37:38 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791746637392673","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:37:44 GMT], Content-Length=[20340]}>
2018-11-30 11:40:19 - Starting GtbankApiApplication on SOLDEV28 with PID 26260 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 11:40:19 - No active profile set, falling back to default profiles: default
2018-11-30 11:40:19 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 11:40:19 WAT 2018]; root of context hierarchy
2018-11-30 11:40:20 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 11:40:22 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 11:40:22 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:40:22 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:40:22 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$87d1132c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:40:22 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 11:40:22 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e3394e2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:40:23 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 11:40:23 - Starting service Tomcat
2018-11-30 11:40:23 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 11:40:23 - Initializing Spring embedded WebApplicationContext
2018-11-30 11:40:23 - Root WebApplicationContext: initialization completed in 3748 ms
2018-11-30 11:40:23 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 11:40:23 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 11:40:23 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 11:40:23 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 11:40:23 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 11:40:23 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 11:40:23 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 11:40:23 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 11:40:23 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 11:40:23 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 11:40:25 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 11:40:25 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 11:40:25 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 11:40:25 - HHH000206: hibernate.properties not found
2018-11-30 11:40:25 - HHH000021: Bytecode provider name : javassist
2018-11-30 11:40:25 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 11:40:25 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 11:40:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 11:40:27 - 

Using default security password: d0113a4f-e755-4fef-9225-7d1fcbb5dcdf

2018-11-30 11:40:27 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ffb70c, org.springframework.security.web.context.SecurityContextPersistenceFilter@410086bd, org.springframework.security.web.header.HeaderWriterFilter@7f89e5ca, org.springframework.security.web.authentication.logout.LogoutFilter@17090d12, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@cea5136, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b2284d4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4099c8ca, org.springframework.security.web.session.SessionManagementFilter@637f51de, org.springframework.security.web.access.ExceptionTranslationFilter@59547370, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@89d5f72]
2018-11-30 11:40:27 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@2dacc73c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b44126a, org.springframework.security.web.context.SecurityContextPersistenceFilter@43f9a57a, org.springframework.security.web.header.HeaderWriterFilter@2a220569, org.springframework.security.web.authentication.logout.LogoutFilter@46c01fba, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6979f6fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@618367df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bb03fcb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c4303b4, org.springframework.security.web.session.SessionManagementFilter@37ebdd2e, org.springframework.security.web.access.ExceptionTranslationFilter@504e52c8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@d2bfb6]
2018-11-30 11:40:27 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 11:40:19 WAT 2018]; root of context hierarchy
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:40:27 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 11:40:27 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 11:40:27 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:40:27 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:40:27 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 11:40:27 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:40:28 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:40:28 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 11:40:28 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:40:28 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:40:28 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 11:40:28 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 11:40:28 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 11:40:28 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:40:28 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 11:40:28 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 11:40:28 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:40:28 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:40:28 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:40:28 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:40:28 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:40:28 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 11:40:28 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:40:28 - LiveReload server is running on port 35729
2018-11-30 11:40:28 - Registering beans for JMX exposure on startup
2018-11-30 11:40:28 - Registering beans for JMX exposure on startup
2018-11-30 11:40:28 - Starting beans in phase 0
2018-11-30 11:40:28 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 11:40:28 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 11:40:28 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 11:40:28 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 11:40:28 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 11:40:28 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 11:40:28 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 11:40:28 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 11:40:28 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 11:40:28 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 11:40:28 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 11:40:28 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 11:40:28 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 11:40:28 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 11:40:28 - Using a shared selector for servlet write/read
2018-11-30 11:40:28 - Tomcat started on port(s): 8094 (http)
2018-11-30 11:40:28 - Started GtbankApiApplication in 9.855 seconds (JVM running for 10.894)
2018-11-30 11:40:28 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 11:40:28 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 11:40:28 - FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2018-11-30 11:40:29 - :::::::::: REQUEST to GT BANK Account OpeningApiAccountOpeningRequest(firstName=Rose, lastName=manda, middleName=null, address=diamond street, email=roseeee@gmail.com, phoneNo=null, dob=06/09/1989, gender=1, motherMaiden=frank, bvn=244444444444, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:40:29 - Error: null
java.lang.NullPointerException: null
	at com.xpresspayments.ZenithBank.util.RSAUtil.encrypt(RSAUtil.java:41)
	at com.xpresspayments.ZenithBank.util.RSAUtil.getStringEncrypt(RSAUtil.java:32)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.OpenAccount(AccountOpeningService.java:92)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(AccountOpeningController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 11:40:29 - Resolved exception caused by Handler execution: java.lang.NullPointerException
2018-11-30 11:43:04 - :::::::::: REQUEST to GT BANK Account OpeningApiAccountOpeningRequest(firstName=Rose, lastName=manda, middleName=null, address=diamond street, email=roseeee@gmail.com, phoneNo=09033333333, dob=06/09/1989, gender=1, motherMaiden=frank, bvn=244444444444, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:43:04 - :::::::::: REQUEST to GT BANK Account OpeningOpenAccountRequest(firstName=Rose, lastName=manda, address=diamond street, email=RxCHMC9+qBkBzNYoPN95XNjKq4fq2tJR1csM3JEWS3AhtpD75Ql+kgAj6+0wnROaqmCg6Iu7I9f6NjSq63BMDGp6HD2ePeCB8MsWmTjVQPfNWeWI7Q+jOYwNXQc4wQ+I88jXStD4G38bpNgpiIiF+KuC/qKpwjqi8V+Z9T7cNIw=, mobileNo=OMsio6qQdeHSVaGWz3cVUgAmNTQBukKXbMZeBWBVKoeY+kdBWiLGzSImGkU1AjcP6hVNkJve6I9GR0zo70CYDZHTDWA0SoLgNzXai/JnZZREnLed3QsBkCIhRUA/61EMIrz1TJ0kubbd5uOc8cSxE7L3kd0P6NQXWhGOg9md2tM=, dob=06/09/1989, gender=1, motherMaiden=frank, bvn=OTTLCetQ3zQK4JHOX6XIIYQD2+TPZU4TS0NUsv7ZlfZm9jSgkwDvgcVb6app8qPnWkkVQsud7TZp9fasFrBEADkJz475IYLVTQ9Xh+ES5OhstY7ANnj61pdE2QyVKCMqqOAPRO9r9IrU1UrRJe/pleg/mF8csU0gPmrRdw520Cg=, teamNo=000, requestId=OgTaGrp+CHaOapFbHLjiNPbyienH+aTApmjeAMRWw91cdq5Q/eaTTM2GRU4e0urf67M4gJGM/rpQVxAYixSZApgLDssR0D9EUBuqH58d684EKEeigPWfeBi74WcFUU27VFqcRCl3NxWjRGspDy983eJbogqfLVp07X3MWE8KuRA=, channel=TP-XPAGENT, userId=null, customerNumber=DnrYr5bxV6qk5jGOtQsuKhU8W4Oj3Wt1bA3ZBAlNzu6F4OzINqnkY30Ocqlepww1R3CyaPOrNYKRqeT5mVq8LlhZs1eA0EVCozJ+0V7jRinitJCg6LV/iNk9lnbiGEGeEVL1MnsCzTwxr4PXSbNEwJxJqkJLY3ym0g9ks1hoAYg=, sessionId=CHJzIp8QY4z6LufyJae6TfkGgWASyyQDIxlU2qAQjaD6T104rSNtiDTl/bd7OMnLGh62OvxLfSwIJv93Idjh2fXswsK8JvxPhWAnXEkB4LiAm96zsOoqA3dFEdFzN3HnBdU3/ZYMMK8TLx7yACFAVu2uGeFgFHNsrLo+VepBvLU=)
2018-11-30 11:43:04 - :::::::::: JSON REQUEST to GT BANK Account OpeningOpenAccountRequest(firstName=Rose, lastName=manda, address=diamond street, email=RxCHMC9+qBkBzNYoPN95XNjKq4fq2tJR1csM3JEWS3AhtpD75Ql+kgAj6+0wnROaqmCg6Iu7I9f6NjSq63BMDGp6HD2ePeCB8MsWmTjVQPfNWeWI7Q+jOYwNXQc4wQ+I88jXStD4G38bpNgpiIiF+KuC/qKpwjqi8V+Z9T7cNIw=, mobileNo=OMsio6qQdeHSVaGWz3cVUgAmNTQBukKXbMZeBWBVKoeY+kdBWiLGzSImGkU1AjcP6hVNkJve6I9GR0zo70CYDZHTDWA0SoLgNzXai/JnZZREnLed3QsBkCIhRUA/61EMIrz1TJ0kubbd5uOc8cSxE7L3kd0P6NQXWhGOg9md2tM=, dob=06/09/1989, gender=1, motherMaiden=frank, bvn=OTTLCetQ3zQK4JHOX6XIIYQD2+TPZU4TS0NUsv7ZlfZm9jSgkwDvgcVb6app8qPnWkkVQsud7TZp9fasFrBEADkJz475IYLVTQ9Xh+ES5OhstY7ANnj61pdE2QyVKCMqqOAPRO9r9IrU1UrRJe/pleg/mF8csU0gPmrRdw520Cg=, teamNo=000, requestId=OgTaGrp+CHaOapFbHLjiNPbyienH+aTApmjeAMRWw91cdq5Q/eaTTM2GRU4e0urf67M4gJGM/rpQVxAYixSZApgLDssR0D9EUBuqH58d684EKEeigPWfeBi74WcFUU27VFqcRCl3NxWjRGspDy983eJbogqfLVp07X3MWE8KuRA=, channel=TP-XPAGENT, userId=null, customerNumber=DnrYr5bxV6qk5jGOtQsuKhU8W4Oj3Wt1bA3ZBAlNzu6F4OzINqnkY30Ocqlepww1R3CyaPOrNYKRqeT5mVq8LlhZs1eA0EVCozJ+0V7jRinitJCg6LV/iNk9lnbiGEGeEVL1MnsCzTwxr4PXSbNEwJxJqkJLY3ym0g9ks1hoAYg=, sessionId=CHJzIp8QY4z6LufyJae6TfkGgWASyyQDIxlU2qAQjaD6T104rSNtiDTl/bd7OMnLGh62OvxLfSwIJv93Idjh2fXswsK8JvxPhWAnXEkB4LiAm96zsOoqA3dFEdFzN3HnBdU3/ZYMMK8TLx7yACFAVu2uGeFgFHNsrLo+VepBvLU=)
2018-11-30 11:43:04 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:43:04 - :::::::::: REQUEST OpenAccountRequest(firstName=Rose, lastName=manda, address=diamond street, email=RxCHMC9+qBkBzNYoPN95XNjKq4fq2tJR1csM3JEWS3AhtpD75Ql+kgAj6+0wnROaqmCg6Iu7I9f6NjSq63BMDGp6HD2ePeCB8MsWmTjVQPfNWeWI7Q+jOYwNXQc4wQ+I88jXStD4G38bpNgpiIiF+KuC/qKpwjqi8V+Z9T7cNIw=, mobileNo=OMsio6qQdeHSVaGWz3cVUgAmNTQBukKXbMZeBWBVKoeY+kdBWiLGzSImGkU1AjcP6hVNkJve6I9GR0zo70CYDZHTDWA0SoLgNzXai/JnZZREnLed3QsBkCIhRUA/61EMIrz1TJ0kubbd5uOc8cSxE7L3kd0P6NQXWhGOg9md2tM=, dob=06/09/1989, gender=1, motherMaiden=frank, bvn=OTTLCetQ3zQK4JHOX6XIIYQD2+TPZU4TS0NUsv7ZlfZm9jSgkwDvgcVb6app8qPnWkkVQsud7TZp9fasFrBEADkJz475IYLVTQ9Xh+ES5OhstY7ANnj61pdE2QyVKCMqqOAPRO9r9IrU1UrRJe/pleg/mF8csU0gPmrRdw520Cg=, teamNo=000, requestId=OgTaGrp+CHaOapFbHLjiNPbyienH+aTApmjeAMRWw91cdq5Q/eaTTM2GRU4e0urf67M4gJGM/rpQVxAYixSZApgLDssR0D9EUBuqH58d684EKEeigPWfeBi74WcFUU27VFqcRCl3NxWjRGspDy983eJbogqfLVp07X3MWE8KuRA=, channel=TP-XPAGENT, userId=null, customerNumber=DnrYr5bxV6qk5jGOtQsuKhU8W4Oj3Wt1bA3ZBAlNzu6F4OzINqnkY30Ocqlepww1R3CyaPOrNYKRqeT5mVq8LlhZs1eA0EVCozJ+0V7jRinitJCg6LV/iNk9lnbiGEGeEVL1MnsCzTwxr4PXSbNEwJxJqkJLY3ym0g9ks1hoAYg=, sessionId=CHJzIp8QY4z6LufyJae6TfkGgWASyyQDIxlU2qAQjaD6T104rSNtiDTl/bd7OMnLGh62OvxLfSwIJv93Idjh2fXswsK8JvxPhWAnXEkB4LiAm96zsOoqA3dFEdFzN3HnBdU3/ZYMMK8TLx7yACFAVu2uGeFgFHNsrLo+VepBvLU=)
2018-11-30 11:43:04 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Rose","lastName":"manda","address":"diamond street","email":"RxCHMC9+qBkBzNYoPN95XNjKq4fq2tJR1csM3JEWS3AhtpD75Ql+kgAj6+0wnROaqmCg6Iu7I9f6NjSq63BMDGp6HD2ePeCB8MsWmTjVQPfNWeWI7Q+jOYwNXQc4wQ+I88jXStD4G38bpNgpiIiF+KuC/qKpwjqi8V+Z9T7cNIw\u003d","mobileNo":"OMsio6qQdeHSVaGWz3cVUgAmNTQBukKXbMZeBWBVKoeY+kdBWiLGzSImGkU1AjcP6hVNkJve6I9GR0zo70CYDZHTDWA0SoLgNzXai/JnZZREnLed3QsBkCIhRUA/61EMIrz1TJ0kubbd5uOc8cSxE7L3kd0P6NQXWhGOg9md2tM\u003d","dob":"06/09/1989","gender":"1","motherMaiden":"frank","bvn":"OTTLCetQ3zQK4JHOX6XIIYQD2+TPZU4TS0NUsv7ZlfZm9jSgkwDvgcVb6app8qPnWkkVQsud7TZp9fasFrBEADkJz475IYLVTQ9Xh+ES5OhstY7ANnj61pdE2QyVKCMqqOAPRO9r9IrU1UrRJe/pleg/mF8csU0gPmrRdw520Cg\u003d","teamNo":"000","requestId":"OgTaGrp+CHaOapFbHLjiNPbyienH+aTApmjeAMRWw91cdq5Q/eaTTM2GRU4e0urf67M4gJGM/rpQVxAYixSZApgLDssR0D9EUBuqH58d684EKEeigPWfeBi74WcFUU27VFqcRCl3NxWjRGspDy983eJbogqfLVp07X3MWE8KuRA\u003d","channel":"TP-XPAGENT","customerNumber":"DnrYr5bxV6qk5jGOtQsuKhU8W4Oj3Wt1bA3ZBAlNzu6F4OzINqnkY30Ocqlepww1R3CyaPOrNYKRqeT5mVq8LlhZs1eA0EVCozJ+0V7jRinitJCg6LV/iNk9lnbiGEGeEVL1MnsCzTwxr4PXSbNEwJxJqkJLY3ym0g9ks1hoAYg\u003d","sessionId":"CHJzIp8QY4z6LufyJae6TfkGgWASyyQDIxlU2qAQjaD6T104rSNtiDTl/bd7OMnLGh62OvxLfSwIJv93Idjh2fXswsK8JvxPhWAnXEkB4LiAm96zsOoqA3dFEdFzN3HnBdU3/ZYMMK8TLx7yACFAVu2uGeFgFHNsrLo+VepBvLU\u003d"}
2018-11-30 11:43:08 - :::: ERROR 400 Bad Request
2018-11-30 11:43:27 - Starting GtbankApiApplication on SOLDEV28 with PID 20700 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 11:43:27 - No active profile set, falling back to default profiles: default
2018-11-30 11:43:28 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19e67433: startup date [Fri Nov 30 11:43:28 WAT 2018]; root of context hierarchy
2018-11-30 11:43:28 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 11:43:30 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 11:43:30 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:43:30 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:43:30 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$dfee3b1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:43:30 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 11:43:30 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3b567620] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:43:31 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 11:43:31 - Starting service Tomcat
2018-11-30 11:43:31 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 11:43:31 - Initializing Spring embedded WebApplicationContext
2018-11-30 11:43:31 - Root WebApplicationContext: initialization completed in 3665 ms
2018-11-30 11:43:32 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 11:43:32 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 11:43:32 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 11:43:32 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 11:43:32 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 11:43:32 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 11:43:32 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 11:43:32 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 11:43:32 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 11:43:32 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 11:43:33 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 11:43:33 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 11:43:33 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 11:43:33 - HHH000206: hibernate.properties not found
2018-11-30 11:43:33 - HHH000021: Bytecode provider name : javassist
2018-11-30 11:43:33 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 11:43:33 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 11:43:34 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 11:43:35 - 

Using default security password: 10878750-157c-4dc7-91fb-70f4f9a8d4da

2018-11-30 11:43:35 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4956b027, org.springframework.security.web.context.SecurityContextPersistenceFilter@353a3a2, org.springframework.security.web.header.HeaderWriterFilter@2ba5effe, org.springframework.security.web.authentication.logout.LogoutFilter@413e4568, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d955160, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d4ed182, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3dc37783, org.springframework.security.web.session.SessionManagementFilter@6fa35185, org.springframework.security.web.access.ExceptionTranslationFilter@682660b4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17d158e0]
2018-11-30 11:43:35 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@2fe64edb, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@241bf97, org.springframework.security.web.context.SecurityContextPersistenceFilter@769c4ad6, org.springframework.security.web.header.HeaderWriterFilter@10ab522c, org.springframework.security.web.authentication.logout.LogoutFilter@799e7440, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4dfc0ece, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49aa8151, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@35a907a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ec56ad0, org.springframework.security.web.session.SessionManagementFilter@134c1315, org.springframework.security.web.access.ExceptionTranslationFilter@73e98c18, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3a00fd12]
2018-11-30 11:43:35 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19e67433: startup date [Fri Nov 30 11:43:28 WAT 2018]; root of context hierarchy
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 11:43:35 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 11:43:35 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 11:43:35 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:43:35 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:43:35 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 11:43:35 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:43:36 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:43:36 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:43:36 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:43:36 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:43:36 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 11:43:36 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:43:36 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:43:36 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 11:43:36 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:43:36 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:43:36 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 11:43:36 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 11:43:36 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 11:43:36 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 11:43:36 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:43:36 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 11:43:36 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:43:36 - LiveReload server is running on port 35729
2018-11-30 11:43:36 - Registering beans for JMX exposure on startup
2018-11-30 11:43:36 - Registering beans for JMX exposure on startup
2018-11-30 11:43:36 - Starting beans in phase 0
2018-11-30 11:43:36 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 11:43:36 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 11:43:36 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 11:43:36 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 11:43:36 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 11:43:36 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 11:43:36 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 11:43:36 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 11:43:36 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 11:43:36 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 11:43:36 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 11:43:36 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 11:43:36 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 11:43:36 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 11:43:36 - Using a shared selector for servlet write/read
2018-11-30 11:43:36 - Tomcat started on port(s): 8094 (http)
2018-11-30 11:43:36 - Started GtbankApiApplication in 9.663 seconds (JVM running for 10.685)
2018-11-30 11:44:51 - Starting GtbankApiApplication on SOLDEV28 with PID 15208 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 11:44:51 - No active profile set, falling back to default profiles: default
2018-11-30 11:44:51 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 11:44:51 WAT 2018]; root of context hierarchy
2018-11-30 11:44:52 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 11:44:53 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 11:44:54 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:44:54 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:44:54 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$e5127689] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:44:54 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 11:44:54 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$407ab18a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:44:55 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 11:44:55 - Starting service Tomcat
2018-11-30 11:44:55 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 11:44:55 - Initializing Spring embedded WebApplicationContext
2018-11-30 11:44:55 - Root WebApplicationContext: initialization completed in 3769 ms
2018-11-30 11:44:55 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 11:44:55 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 11:44:55 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 11:44:55 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 11:44:55 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 11:44:55 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 11:44:55 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 11:44:55 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 11:44:55 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 11:44:55 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 11:44:57 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 11:44:57 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 11:44:57 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 11:44:57 - HHH000206: hibernate.properties not found
2018-11-30 11:44:57 - HHH000021: Bytecode provider name : javassist
2018-11-30 11:44:57 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 11:44:57 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 11:44:58 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 11:44:59 - 

Using default security password: 61dabd88-ef8b-42e2-9842-d779965c7182

2018-11-30 11:44:59 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6563e989, org.springframework.security.web.context.SecurityContextPersistenceFilter@61831e27, org.springframework.security.web.header.HeaderWriterFilter@7da4cf6, org.springframework.security.web.authentication.logout.LogoutFilter@495b549d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3addc615, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@410086bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e75c98, org.springframework.security.web.session.SessionManagementFilter@cccfdc1, org.springframework.security.web.access.ExceptionTranslationFilter@5a241e61, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4dbb29d6]
2018-11-30 11:44:59 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@d2bfb6, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21a7031a, org.springframework.security.web.context.SecurityContextPersistenceFilter@3fca069e, org.springframework.security.web.header.HeaderWriterFilter@2c2fdc56, org.springframework.security.web.authentication.logout.LogoutFilter@68e390b1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@319208ce, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b1f8ee6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@390022bf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@425a0bd0, org.springframework.security.web.session.SessionManagementFilter@b5223e, org.springframework.security.web.access.ExceptionTranslationFilter@7f35768f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@32db8b3e]
2018-11-30 11:44:59 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 11:44:51 WAT 2018]; root of context hierarchy
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 11:44:59 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 11:44:59 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 11:44:59 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:44:59 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:44:59 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 11:44:59 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:45:00 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:45:00 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 11:45:00 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 11:45:00 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:45:00 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 11:45:00 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:45:00 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 11:45:00 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:45:00 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 11:45:00 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:45:00 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 11:45:00 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:45:00 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:45:00 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 11:45:00 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:45:00 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:45:00 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:45:00 - LiveReload server is running on port 35729
2018-11-30 11:45:00 - Registering beans for JMX exposure on startup
2018-11-30 11:45:00 - Registering beans for JMX exposure on startup
2018-11-30 11:45:00 - Starting beans in phase 0
2018-11-30 11:45:00 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 11:45:00 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 11:45:00 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 11:45:00 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 11:45:00 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 11:45:00 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 11:45:00 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 11:45:00 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 11:45:00 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 11:45:00 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 11:45:00 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 11:45:00 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 11:45:00 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 11:45:00 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 11:45:00 - Using a shared selector for servlet write/read
2018-11-30 11:45:00 - Tomcat started on port(s): 8094 (http)
2018-11-30 11:45:00 - Started GtbankApiApplication in 10.26 seconds (JVM running for 11.271)
2018-11-30 11:47:30 - Starting GtbankApiApplication on SOLDEV28 with PID 25304 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 11:47:30 - No active profile set, falling back to default profiles: default
2018-11-30 11:47:30 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3daf06be: startup date [Fri Nov 30 11:47:30 WAT 2018]; root of context hierarchy
2018-11-30 11:47:31 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 11:47:33 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 11:47:33 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:47:33 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:47:33 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$2170eebd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:47:33 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 11:47:33 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7cd929be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:47:34 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 11:47:34 - Starting service Tomcat
2018-11-30 11:47:34 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 11:47:34 - Initializing Spring embedded WebApplicationContext
2018-11-30 11:47:34 - Root WebApplicationContext: initialization completed in 3512 ms
2018-11-30 11:47:34 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 11:47:34 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 11:47:34 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 11:47:34 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 11:47:34 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 11:47:34 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 11:47:34 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 11:47:34 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 11:47:34 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 11:47:34 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 11:47:36 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 11:47:36 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 11:47:36 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 11:47:36 - HHH000206: hibernate.properties not found
2018-11-30 11:47:36 - HHH000021: Bytecode provider name : javassist
2018-11-30 11:47:36 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 11:47:36 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 11:47:37 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 11:47:38 - 

Using default security password: 4144111e-f4cd-4779-918d-39863a8ed850

2018-11-30 11:47:38 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1075a2ba, org.springframework.security.web.context.SecurityContextPersistenceFilter@13be9e4c, org.springframework.security.web.header.HeaderWriterFilter@60196b51, org.springframework.security.web.authentication.logout.LogoutFilter@260b0e6f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5563341d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c41ed48, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1a8fd3e8, org.springframework.security.web.session.SessionManagementFilter@1845d35c, org.springframework.security.web.access.ExceptionTranslationFilter@3a01b95f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70ba8f1f]
2018-11-30 11:47:38 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@75863c5d, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a595645, org.springframework.security.web.context.SecurityContextPersistenceFilter@5b260429, org.springframework.security.web.header.HeaderWriterFilter@49161d39, org.springframework.security.web.authentication.logout.LogoutFilter@5e96053d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7f3604cc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13ae36a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a281e3e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b27d1f3, org.springframework.security.web.session.SessionManagementFilter@620be3b4, org.springframework.security.web.access.ExceptionTranslationFilter@2bcc7183, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@161ccc57]
2018-11-30 11:47:38 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3daf06be: startup date [Fri Nov 30 11:47:30 WAT 2018]; root of context hierarchy
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:47:39 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 11:47:39 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 11:47:39 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:47:39 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:47:39 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 11:47:39 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:47:39 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:47:39 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 11:47:39 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 11:47:39 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:47:39 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:47:39 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 11:47:39 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:47:39 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 11:47:39 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:47:39 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 11:47:39 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:47:39 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 11:47:39 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:47:39 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:47:39 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:47:39 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 11:47:39 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:47:39 - LiveReload server is running on port 35729
2018-11-30 11:47:39 - Registering beans for JMX exposure on startup
2018-11-30 11:47:39 - Registering beans for JMX exposure on startup
2018-11-30 11:47:39 - Starting beans in phase 0
2018-11-30 11:47:39 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 11:47:39 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 11:47:39 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 11:47:39 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 11:47:39 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 11:47:39 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 11:47:39 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 11:47:39 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 11:47:39 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 11:47:40 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 11:47:40 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 11:47:40 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 11:47:40 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 11:47:40 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 11:47:40 - Using a shared selector for servlet write/read
2018-11-30 11:47:40 - Tomcat started on port(s): 8094 (http)
2018-11-30 11:47:40 - Started GtbankApiApplication in 10.131 seconds (JVM running for 11.203)
2018-11-30 11:48:02 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 11:48:02 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 11:48:02 - FrameworkServlet 'dispatcherServlet': initialization completed in 56 ms
2018-11-30 11:48:02 - :::::::::: REQUEST to GT BANK Account OpeningApiAccountOpeningRequest(firstName=Rose, lastName=manda, middleName=null, address=diamond street, email=roseeee@gmail.com, phoneNo=09033333333, dob=06/09/1989, gender=1, motherMaiden=frank, bvn=244444444444, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:48:02 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:48:02 - :::::::::: REQUEST to GT BANK Account OpeningOpenAccountRequest(firstName=Rose, lastName=manda, address=diamond street, email=OCoK7Rje0QFDwsvH9QYkRe+AHfuce79nVZx253x9Cc3kCNNOe6JoBWSr7FKMh6aZjFgBecl6roBvpnj/FNpxL36jRGYtUs83qlvsozl9Z6wZdvTodgMhjH6jrmLPoqfGDyUNHV3cDdo5/QS2amrAog8D1m+7545CWIRnSyCdOT4=, mobileNo=IZGyAnyO4TX5hQTYZwrNaFyQHxUQKU2i5dGvpOr4aKrQ7LnMuqo9slkTTg+KzQH9TRyLEoiKEiGFmpGxzGH99hv1DbHQWygrG4dW9r1E9PbStEr3W9Bi9sEeMXQHX9jMf+wjjX6hfRfBx+/Z6GC2gLSJkmwcMaJ+Dow64eDZc4A=, dob=06/09/1989, gender=1, motherMaiden=frank, bvn=P6qpUE867YVlADrt7UpwjL8Q90vkB/mT1CpVMyfKIu3KAUZfXHiRMcPiauMm7z2r/yrPxMlUP884mcNASLDMtjcdqn5SQ516HsHg5JswOxe19Oebz1uBdLU47RQ1Iuj3Km75IoYix5Uz6d1wQEWTPv+R6SxByeaMR9YWRipE260=, teamNo=000, requestId=G9/cS++C27T9tr/tVyioP5CKlh3fjBpulq26u+nEjQSBUKZx/sXJsLQ6gO6GF4JS8Ayv+i2Kfc4+wt772+4/3zktg0On5Ulooz7DqvbSsSC6RFtJYV9eLlGUdYzQIiDmQFUv8xCTnYoZPQX32VJZ6JgIKhekiIB0eCzxzBlxZQw=, channel=TP-XPAGENT, userId=IXFbRy6vG9iPECu+J0XXc2kBWRnSc2WxrsH8Fq7Z0ysMpJZr7MhNg54TdTTvtY/5PVReF8IdK1+i++S/at2bztMoJwORsc0Nk/tEsl/+/BACc0bYzPQ4Yx8Jljpv7MYlmCMINMQnGKIFxjNGmFCK9IZNv0vNwgHON5BzmwipOsQ=, customerNumber=DeGLG7YIyUPAgjnbCQnc3QRvBaERoGTslH/+T1ZVR3DMxr506Whc472se1HE6iaIj9pL5fga+oihkaqwkFgvBbj1hFk8AYBLeO0As0ohR7lbhODBneInl4iZoLwMRbDH5+o1VOjMoSOTkL8MKfd8Bdtzez8dC967GF40xmpEnYw=, sessionId=ZJk5hUkEg5Al9eW0+8oOMqyjZ+ymGMMYqsxhp9CKpyaKd9SFNjjogRXCEHvyjudmZmnuU7kVgO1xi0+IbA0ckVW/FJevzpOI2w3P7l0kCI0P5gJ7hceheN8uwb0zUA4+imT3wiBhhZcYWkp1+i5HWAorPstIVas1MEHcdrJS460=)
2018-11-30 11:48:02 - :::::::::: JSON REQUEST to GT BANK Account OpeningOpenAccountRequest(firstName=Rose, lastName=manda, address=diamond street, email=OCoK7Rje0QFDwsvH9QYkRe+AHfuce79nVZx253x9Cc3kCNNOe6JoBWSr7FKMh6aZjFgBecl6roBvpnj/FNpxL36jRGYtUs83qlvsozl9Z6wZdvTodgMhjH6jrmLPoqfGDyUNHV3cDdo5/QS2amrAog8D1m+7545CWIRnSyCdOT4=, mobileNo=IZGyAnyO4TX5hQTYZwrNaFyQHxUQKU2i5dGvpOr4aKrQ7LnMuqo9slkTTg+KzQH9TRyLEoiKEiGFmpGxzGH99hv1DbHQWygrG4dW9r1E9PbStEr3W9Bi9sEeMXQHX9jMf+wjjX6hfRfBx+/Z6GC2gLSJkmwcMaJ+Dow64eDZc4A=, dob=06/09/1989, gender=1, motherMaiden=frank, bvn=P6qpUE867YVlADrt7UpwjL8Q90vkB/mT1CpVMyfKIu3KAUZfXHiRMcPiauMm7z2r/yrPxMlUP884mcNASLDMtjcdqn5SQ516HsHg5JswOxe19Oebz1uBdLU47RQ1Iuj3Km75IoYix5Uz6d1wQEWTPv+R6SxByeaMR9YWRipE260=, teamNo=000, requestId=G9/cS++C27T9tr/tVyioP5CKlh3fjBpulq26u+nEjQSBUKZx/sXJsLQ6gO6GF4JS8Ayv+i2Kfc4+wt772+4/3zktg0On5Ulooz7DqvbSsSC6RFtJYV9eLlGUdYzQIiDmQFUv8xCTnYoZPQX32VJZ6JgIKhekiIB0eCzxzBlxZQw=, channel=TP-XPAGENT, userId=IXFbRy6vG9iPECu+J0XXc2kBWRnSc2WxrsH8Fq7Z0ysMpJZr7MhNg54TdTTvtY/5PVReF8IdK1+i++S/at2bztMoJwORsc0Nk/tEsl/+/BACc0bYzPQ4Yx8Jljpv7MYlmCMINMQnGKIFxjNGmFCK9IZNv0vNwgHON5BzmwipOsQ=, customerNumber=DeGLG7YIyUPAgjnbCQnc3QRvBaERoGTslH/+T1ZVR3DMxr506Whc472se1HE6iaIj9pL5fga+oihkaqwkFgvBbj1hFk8AYBLeO0As0ohR7lbhODBneInl4iZoLwMRbDH5+o1VOjMoSOTkL8MKfd8Bdtzez8dC967GF40xmpEnYw=, sessionId=ZJk5hUkEg5Al9eW0+8oOMqyjZ+ymGMMYqsxhp9CKpyaKd9SFNjjogRXCEHvyjudmZmnuU7kVgO1xi0+IbA0ckVW/FJevzpOI2w3P7l0kCI0P5gJ7hceheN8uwb0zUA4+imT3wiBhhZcYWkp1+i5HWAorPstIVas1MEHcdrJS460=)
2018-11-30 11:48:02 - :::::::::: REQUEST OpenAccountRequest(firstName=Rose, lastName=manda, address=diamond street, email=OCoK7Rje0QFDwsvH9QYkRe+AHfuce79nVZx253x9Cc3kCNNOe6JoBWSr7FKMh6aZjFgBecl6roBvpnj/FNpxL36jRGYtUs83qlvsozl9Z6wZdvTodgMhjH6jrmLPoqfGDyUNHV3cDdo5/QS2amrAog8D1m+7545CWIRnSyCdOT4=, mobileNo=IZGyAnyO4TX5hQTYZwrNaFyQHxUQKU2i5dGvpOr4aKrQ7LnMuqo9slkTTg+KzQH9TRyLEoiKEiGFmpGxzGH99hv1DbHQWygrG4dW9r1E9PbStEr3W9Bi9sEeMXQHX9jMf+wjjX6hfRfBx+/Z6GC2gLSJkmwcMaJ+Dow64eDZc4A=, dob=06/09/1989, gender=1, motherMaiden=frank, bvn=P6qpUE867YVlADrt7UpwjL8Q90vkB/mT1CpVMyfKIu3KAUZfXHiRMcPiauMm7z2r/yrPxMlUP884mcNASLDMtjcdqn5SQ516HsHg5JswOxe19Oebz1uBdLU47RQ1Iuj3Km75IoYix5Uz6d1wQEWTPv+R6SxByeaMR9YWRipE260=, teamNo=000, requestId=G9/cS++C27T9tr/tVyioP5CKlh3fjBpulq26u+nEjQSBUKZx/sXJsLQ6gO6GF4JS8Ayv+i2Kfc4+wt772+4/3zktg0On5Ulooz7DqvbSsSC6RFtJYV9eLlGUdYzQIiDmQFUv8xCTnYoZPQX32VJZ6JgIKhekiIB0eCzxzBlxZQw=, channel=TP-XPAGENT, userId=IXFbRy6vG9iPECu+J0XXc2kBWRnSc2WxrsH8Fq7Z0ysMpJZr7MhNg54TdTTvtY/5PVReF8IdK1+i++S/at2bztMoJwORsc0Nk/tEsl/+/BACc0bYzPQ4Yx8Jljpv7MYlmCMINMQnGKIFxjNGmFCK9IZNv0vNwgHON5BzmwipOsQ=, customerNumber=DeGLG7YIyUPAgjnbCQnc3QRvBaERoGTslH/+T1ZVR3DMxr506Whc472se1HE6iaIj9pL5fga+oihkaqwkFgvBbj1hFk8AYBLeO0As0ohR7lbhODBneInl4iZoLwMRbDH5+o1VOjMoSOTkL8MKfd8Bdtzez8dC967GF40xmpEnYw=, sessionId=ZJk5hUkEg5Al9eW0+8oOMqyjZ+ymGMMYqsxhp9CKpyaKd9SFNjjogRXCEHvyjudmZmnuU7kVgO1xi0+IbA0ckVW/FJevzpOI2w3P7l0kCI0P5gJ7hceheN8uwb0zUA4+imT3wiBhhZcYWkp1+i5HWAorPstIVas1MEHcdrJS460=)
2018-11-30 11:48:02 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Rose","lastName":"manda","address":"diamond street","email":"OCoK7Rje0QFDwsvH9QYkRe+AHfuce79nVZx253x9Cc3kCNNOe6JoBWSr7FKMh6aZjFgBecl6roBvpnj/FNpxL36jRGYtUs83qlvsozl9Z6wZdvTodgMhjH6jrmLPoqfGDyUNHV3cDdo5/QS2amrAog8D1m+7545CWIRnSyCdOT4\u003d","mobileNo":"IZGyAnyO4TX5hQTYZwrNaFyQHxUQKU2i5dGvpOr4aKrQ7LnMuqo9slkTTg+KzQH9TRyLEoiKEiGFmpGxzGH99hv1DbHQWygrG4dW9r1E9PbStEr3W9Bi9sEeMXQHX9jMf+wjjX6hfRfBx+/Z6GC2gLSJkmwcMaJ+Dow64eDZc4A\u003d","dob":"06/09/1989","gender":"1","motherMaiden":"frank","bvn":"P6qpUE867YVlADrt7UpwjL8Q90vkB/mT1CpVMyfKIu3KAUZfXHiRMcPiauMm7z2r/yrPxMlUP884mcNASLDMtjcdqn5SQ516HsHg5JswOxe19Oebz1uBdLU47RQ1Iuj3Km75IoYix5Uz6d1wQEWTPv+R6SxByeaMR9YWRipE260\u003d","teamNo":"000","requestId":"G9/cS++C27T9tr/tVyioP5CKlh3fjBpulq26u+nEjQSBUKZx/sXJsLQ6gO6GF4JS8Ayv+i2Kfc4+wt772+4/3zktg0On5Ulooz7DqvbSsSC6RFtJYV9eLlGUdYzQIiDmQFUv8xCTnYoZPQX32VJZ6JgIKhekiIB0eCzxzBlxZQw\u003d","channel":"TP-XPAGENT","userId":"IXFbRy6vG9iPECu+J0XXc2kBWRnSc2WxrsH8Fq7Z0ysMpJZr7MhNg54TdTTvtY/5PVReF8IdK1+i++S/at2bztMoJwORsc0Nk/tEsl/+/BACc0bYzPQ4Yx8Jljpv7MYlmCMINMQnGKIFxjNGmFCK9IZNv0vNwgHON5BzmwipOsQ\u003d","customerNumber":"DeGLG7YIyUPAgjnbCQnc3QRvBaERoGTslH/+T1ZVR3DMxr506Whc472se1HE6iaIj9pL5fga+oihkaqwkFgvBbj1hFk8AYBLeO0As0ohR7lbhODBneInl4iZoLwMRbDH5+o1VOjMoSOTkL8MKfd8Bdtzez8dC967GF40xmpEnYw\u003d","sessionId":"ZJk5hUkEg5Al9eW0+8oOMqyjZ+ymGMMYqsxhp9CKpyaKd9SFNjjogRXCEHvyjudmZmnuU7kVgO1xi0+IbA0ckVW/FJevzpOI2w3P7l0kCI0P5gJ7hceheN8uwb0zUA4+imT3wiBhhZcYWkp1+i5HWAorPstIVas1MEHcdrJS460\u003d"}
2018-11-30 11:48:25 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":"0449143532","password":"123456","userId":"214857813601","requestId":"GTHUB","responseCode":"00","responseDescription":"Success"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:48:30 GMT], Content-Length=[138]}>
2018-11-30 11:54:00 - Starting GtbankApiApplication on SOLDEV28 with PID 23008 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 11:54:00 - No active profile set, falling back to default profiles: default
2018-11-30 11:54:00 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc5e7d1: startup date [Fri Nov 30 11:54:00 WAT 2018]; root of context hierarchy
2018-11-30 11:54:01 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 11:54:02 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 11:54:03 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:54:03 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:54:03 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$2adfaadd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:54:03 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 11:54:03 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8647e5de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:54:03 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 11:54:03 - Starting service Tomcat
2018-11-30 11:54:03 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 11:54:04 - Initializing Spring embedded WebApplicationContext
2018-11-30 11:54:04 - Root WebApplicationContext: initialization completed in 3749 ms
2018-11-30 11:54:04 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 11:54:04 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 11:54:04 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 11:54:04 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 11:54:04 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 11:54:04 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 11:54:04 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 11:54:04 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 11:54:04 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 11:54:04 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 11:54:05 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 11:54:05 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 11:54:05 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 11:54:05 - HHH000206: hibernate.properties not found
2018-11-30 11:54:05 - HHH000021: Bytecode provider name : javassist
2018-11-30 11:54:05 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 11:54:06 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 11:54:06 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 11:54:07 - 

Using default security password: 283c08cb-322a-4aef-a541-e1eeceb8efa1

2018-11-30 11:54:07 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@280e0bc7, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b0321a0, org.springframework.security.web.header.HeaderWriterFilter@5178c7f9, org.springframework.security.web.authentication.logout.LogoutFilter@1d7bc9dc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a44fe8b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12dd856c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e92bf, org.springframework.security.web.session.SessionManagementFilter@1f085675, org.springframework.security.web.access.ExceptionTranslationFilter@54845ae0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@9bea542]
2018-11-30 11:54:07 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@2b7d531b, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@772c766d, org.springframework.security.web.context.SecurityContextPersistenceFilter@45315bdb, org.springframework.security.web.header.HeaderWriterFilter@62f692e5, org.springframework.security.web.authentication.logout.LogoutFilter@52985af5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5ce00db4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51a8d189, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71f00e3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d757bba, org.springframework.security.web.session.SessionManagementFilter@31c79bc2, org.springframework.security.web.access.ExceptionTranslationFilter@2236c76b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@650cfa0e]
2018-11-30 11:54:07 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc5e7d1: startup date [Fri Nov 30 11:54:00 WAT 2018]; root of context hierarchy
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 11:54:08 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 11:54:08 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 11:54:08 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:54:08 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:54:08 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 11:54:08 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:54:08 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:54:08 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 11:54:08 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:54:08 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:54:08 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 11:54:08 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:54:08 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 11:54:08 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 11:54:08 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:54:08 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:54:08 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:54:08 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:54:08 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:54:08 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 11:54:08 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 11:54:08 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:54:08 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 11:54:08 - LiveReload server is running on port 35729
2018-11-30 11:54:08 - Registering beans for JMX exposure on startup
2018-11-30 11:54:08 - Registering beans for JMX exposure on startup
2018-11-30 11:54:08 - Starting beans in phase 0
2018-11-30 11:54:08 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 11:54:08 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 11:54:08 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 11:54:08 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 11:54:08 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 11:54:08 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 11:54:08 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 11:54:08 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 11:54:08 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 11:54:08 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 11:54:08 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 11:54:08 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 11:54:08 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 11:54:08 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 11:54:08 - Using a shared selector for servlet write/read
2018-11-30 11:54:09 - Tomcat started on port(s): 8094 (http)
2018-11-30 11:54:09 - Started GtbankApiApplication in 9.451 seconds (JVM running for 10.445)
2018-11-30 11:55:27 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 11:55:27 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 11:55:27 - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-11-30 11:55:27 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:55:27 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Mal, lastName=mah, middleName=null, address=strange, email=theeee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=tony, bvn=2444455656, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:55:27 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Mal","lastName":"mah","address":"strange","email":"LlhyHwYbKH0piQ24BlVzjIPlMXDie24PX19g7tl/FNFXYzNAG9igOyy2CVDRYB9bizsjFLpbPF9ycA9V13b3+RmsT5JRapunFd1HsKehfqz6untr0z9ndt+d+T6ZCB0qjVAAzb4FfHpNigsIgXCDqXkFqsGWxH5rlGP2L689HDs\u003d","mobileNo":"SXlPW9sNTVPyZFAzWZ39bn77oEJDMdgVamtxfuuGU5+UYINPznmJFAgZcPmfR1FHEDDTbIsRzi+9tM3n0uQ4IHhDY2+JA+HRCKNCbg9lvOTch8Nmxc+5rYq6KaPOHCB8ARRb6E25NdoAtfL1rioiA8NBmYV9Dwj6tEQf8OrB89Y\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"tony","bvn":"P0RXkMEKRkAoxr7665zCOYY0nn3gz+TN3MgzgrDWLkvXNdXgW/zUA3mI5yM7gDiCOka1qAo/crPN0HDqV421UDvpdhCIMvB98DeIitCYXebcRU27cSM3PQxVLTKnSTibmJcyVsyjauLX+KOQf9t7PPs2CLaxI+iWP6sxYZKk7fg\u003d","teamNo":"000","requestId":"WBHQT3qoOg/1c5KU71u/ceyG66f2hoijMzjf9QDSaSlqKqCeuktBQ9XMrP54tYbIBvbU/3+nIuUpKzcKRqabjXADg/wPHPm0SbDJLp9Gd++3q7oQuZvgZHsO+bm4c/l4D8+l38VVskIYian8yurR5cscZOWAAKezngu0V/6ZflY\u003d","channel":"TP-XPAGENT","userId":"IyjNQcpUfn/B6ewyK+ZR6WmAZSFaOsGmjpdN70vQVOYOb+2/L9qwkJxlgIx9bRCR/xtboen6pJBoOMDWtJptt6ib5bQEwhn8uA5775aAJ57XMCQkxvSwUySpRgWZUSlsCFmBENyNNCaNwOFbz74692BlEf2jRZP4gYnRBxfg2rA\u003d","customerNumber":"XpD56XAyQUxTSHNIZK+kn152FJoMfN0YXTtEHfzrr/8cDk0TrSIyT8z4zL26CRWv+S9v3G4ffj3SS8RsYUg/J8FC87+6uSzwDjAf5vJf8h1DbO57Xf4tC5rgWJ3fF9LO8lI+nH1zAyRY9D0nnc7Vt+bekM+Vng52R1zWKZjVCcs\u003d","sessionId":"UO2jtE8S/5dNA5PQZECOQbYjeUuw+H2fS9VerTD0q4H0cDCWhXY/EU2fENfK0Ggt6cOhAop7ujo3cMDicNdoUQoB/Fr07FBQ4rSQuNBMefFbRhRgJwRYwRRJZmLDRw7Yiu3A/RsZvl2fjcEmPspo9vfoJos7eneUAMnramlFvE4\u003d"}
2018-11-30 11:55:27 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:55:33 GMT], Content-Length=[163]}>
2018-11-30 11:55:40 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:55:40 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Mal, lastName=mah, middleName=null, address=strange, email=theeee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=tony, bvn=24444556565, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:55:40 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Mal","lastName":"mah","address":"strange","email":"J+fZgoZkZMly/TK8bpbbS9UQvDGVC2QdFTsJxI/LFczVjevfAg7OlIsHgguGtQ4rTGyB15/RYIgr8Z92uXB/3bWQBiihXYwQ3PJCeZcWCiQBrWbVwRVMa1WXyULgo5Ny5Ip0R+M6TzwonfG+XRZ9GVVTLJ+oeLx026s9/cIU4Pk\u003d","mobileNo":"XjxHGODQm1STCtaNmEujW6dBXAHxQnVgTPI/e6m9g9ARkQ3/ykIC7rSo7OfBIC7uZClssmhYZe/miHCE6O2j90qA5E6Ua6Zy+FEZwB0h2m8JUtHxEkXwM4onAQsgi8cuV+ux0BvQ3XFOJYKrAuHSnJRQB5boEEPTJowJZa1cst8\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"tony","bvn":"O+OJce0ea39x5CeJXcseuFYYMKp8/b9z0OOnNMgBZvcBWPH90Bqp0tPm73WzL9Hw/rO4lQ9naTURFxSIdgWEFJnBvpXVLclOqsCDz4gLvATBmni9OP2vehZgjyGk2A5P5XNgMBoExPYBteyPfH1uChqWLt85kqTL0+mcNaGryJw\u003d","teamNo":"000","requestId":"YC+/QWFe1ScJdYpNIetVKcaquvMhW2Q/goNyy7/gn9DHP9XqsSBU9lfS8fm7NEVzYjaCKTCAIkovoDQfEP3AoN91Evz4xK261Gj1N5Q93u4eC6tZN7sbpP6lZS+ntO5XCv0h3MrXpKcinVmi6kXwhWbArO35bhT8rwJWD9/dhsw\u003d","channel":"TP-XPAGENT","userId":"V4qGQ74bfGqM1QDbR6dsIQCpAKdwbdEDCVmdDtOkSzrvmLiIIchlyqWax9GggPYHdn9pghAfnikjTJp+AZ0mL+Qgy0iNVc8r5RPgndFrYgJNFJEXnJA1K6djB/3r+U1NJwm+fr0l5MHuXNMsBIQgsOKLrcNa2SUhPlrshxhl0PM\u003d","customerNumber":"KBHRvy+zck5WfH00Xf8pRfUxkU18LCm1z0Bzv85EBFlGYJjtHBeXTQmXmWOb7T90OsFUHv63OnuqSB9+JlgvNTghzr73+RuTez0JpVHOptoxsXbo32c0LEiLhCnwiGqksWF1t4BJr3czryROFjRaBBqwuwsODkAfWtCKULDIa4k\u003d","sessionId":"Dw/VVPHT0cvuqiiigsjdEylpLOAUyGD7Q8gxuPcVOThowfW6pdxvX1iL11E8CYlncjLi4oY/0tfSAhWrIusHvvT7mod0OTzoBUM/ayyO0hqvkU0fKDcuI4+14uIjG6ro5+GBDdS4m4U68q6xmF8R4ZjGhDzIdFqFhkMk2mS2GE0\u003d"}
2018-11-30 11:55:41 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:55:47 GMT], Content-Length=[163]}>
2018-11-30 11:55:48 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:55:48 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Mal, lastName=mah, middleName=null, address=strange, email=theeee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=tony, bvn=244445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:55:48 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Mal","lastName":"mah","address":"strange","email":"JT84Vg/KAEZ/fn1Dhu3l2rZrLQL2RjdcIwAGAwUnzivwKgVUcUNBLYvpfYdD3LwsOYN9yx5BJAxzc5VscOESjtc17p2rvFqodpC0IPwcJDMxADFaPNR6wSxkzB8MCii6aXdoic6iIvHpSxi3yimnyyec8DlQcjCbtqRl6FB+nBY\u003d","mobileNo":"CDlrlHkg9AExFZJD3PM/yWj4HIeirn9TnVsIk5/fHn31l0T6fOhIZi+1DSgGdGzhn8T/KKdUOjkOeaPbt4bE31cbplBv/IU4yee4RCas7QvgYOS6aJSyb1KmcjNsU4x2fqxtvWVslEfoKah9KCgZsLI3s4nkJQpLwU5hLePhvy4\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"tony","bvn":"Vz6DWz1RS6Mr8IcetcPBHxlvdHEpLMkEKqo7RrVtfkpU0ufBrAtDI5JcdP8Z92S/N3J12A62AhWAc/ek8YnNeRo89KU0LZg92+wfNUEqdeBkaRtBquyuq2Pfsv1rNS89z2bXkabuEfwcvKPgWyZAHDM2SZw6zcIBc0LtE2YXdbM\u003d","teamNo":"000","requestId":"P6BF6fs12KfmWNx1hWKiqKWtWVwnsCf/Pe9tqr7dTzysXsNn061qcwqCdDh0bQBeG5sUE39sdKvdm/JDvn8U2lrRcd3Tu/HHoUdsbrtnQDOp1pKQ0IVWtimD1EKExC1e4zcwbJ+WG0kKKmOOk1vLBNZmcTG0PyXtrqOmg6LR/cw\u003d","channel":"TP-XPAGENT","userId":"AoUzIR8vnnSOXhtMBXx4/vWrOYUebKh4Pz23B3qA41SEgIOHbl5VhVBgN5yDN+DhS3xWgdSTr/4oHoq3WsCen8Cd9PQ0ZuVL2U5mMi/PetY48MMEr5tWd+Lahy/vlwSURos+4d3fdiQ4uir4RULqj6C1SsCqkWkvDT59kUT22TY\u003d","customerNumber":"Y3k/wLJO726dWBkRCjkYCTGNHwX9yQq2e3JaioKiy517YaX/uXBSzEmGqqVLdL95+sL3fsmjQtlfQnY9MuzEjtO9YF67mDLc2fTbxC7eBqzLAAkGsWYhALFX8sNi2jPdWvP9hx3Pq2P0U6cG7z9wE9EUgCZGxpmW2f+EyvizQho\u003d","sessionId":"QtWOvFa6sxGJyLybQixzr2mWAmQh9lZ9Nu+avmVSv1CE2HOZV6C7i7kh9Psraim2mzby79UJoI2RKimZolAN+0vLdLkFpsSUeEw8OpNpM0TbCZs/Uc4FgcEvvdmSp7PnExBKX/0p6jPitFKRfljRrLzG/z8Y0MMprn5mF64qHkg\u003d"}
2018-11-30 11:55:48 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:55:54 GMT], Content-Length=[163]}>
2018-11-30 11:56:05 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:56:05 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Mal, lastName=mah, middleName=null, address=strange, email=theeee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=tony, bvn=2444455656547, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:56:05 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Mal","lastName":"mah","address":"strange","email":"DRA47xZ7g+8ezEmSAzKIuURTOil1bOZKpOwycjbIdNzM0mi/Q0qZpBJ6QC2AjI6o9LltLVpndux7XZlilyWpocSk7esIkJKQ/37Q1t4hDOQHm6V6lbyrG1YBS6FaI5cLQCmgbfH2Hh1d2g2cJ0PMwwo5t4+HLSoDUKpRmCHu0Hg\u003d","mobileNo":"TdZmKyV0pPFp0NjyhHuBsQgvTG8LpZ+kAUUvTwtY3rdwjfLas9M7w9+hV3h8GIfB+KbZrXlDOUgiljs3tajM9nE1z1K9IaEyVBxXurOPd4V2WbNb0JE/iu/Qx/IPColP2Aovxy57PKuWiPNWljftaaNSZmQt0jXYIrlHQzZbX1c\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"tony","bvn":"XY+7SlLZjy0XLdedG4N+HN6iq3CjHtfGdZhdkvfBCzZPoiOoFz2bOFG+P2lCFRZ7TWczGurt47sDhBze+ci6zh2H41ql2XFG2jiOhkCkFat0eN/9Qdstz1QAek9qKfYC+TU55mwgUA3S42ujFDrw1YvDemtmEopak5LmqswAP80\u003d","teamNo":"000","requestId":"IMTf5aO2hns1VZJgksyaWhl62chsp1A/W5SaFdeFhH3M6FREHDQMWN6PKhJlXaWPoP7tjXo9kz72Q/8iSQTd1wYS4tft6+YqeFkVTGYoJ8FSmHoS3dsSftKYOYwsE1sv1IfrcaMP4hwJSIJ8Pw1pZfSsUkcTPnnwGhPY3c8HaGc\u003d","channel":"TP-XPAGENT","userId":"Sa+gmsLc29wGlS3Eml/gdvS3q9pSXe3+W/+xJWWe1vJHOAdn57uuNw4cHB2i6o82Aj6dSeCFQa+EP3LbL6O+pWVzjggz7dsASU19v1MVgwMCCDpXpFT6I81Eh1Fre/XGdpfEDmZ7sgQVWeTQ0MJzO25f+UnFEl/u2j3pjuhQvkI\u003d","customerNumber":"GFJqM7IkCQqRDwV8B08OlGnl7qzPDtDsOJeFQfuIiKCacVQznecm5Grs6AVswM5QjFDy5ZZDTvQuTuf5Do02fh3rnicyVlLj2ow+NcpkwaM9S0Z8Uwuqa3DfnWGPrKsrfSUpj1kd/vIEg89qbOYYB5mCVxa4sPjwpnTmQGN2ZQ4\u003d","sessionId":"BFwdRuQrPcfwSJMKkfL0cRxswyxhRR8xCM1zyEYzYrIpRdNncOtnJMqZ/CFsQPllvP6sxYm47qoDxw8dL+NQY4hFUszOyvCvFVMTFmkFuR1zSuPb9XV9Flcq0KzQx995bUdQJlLMjVK7pAt5EoAvS8oRal0KY+2TXrcZovQxyks\u003d"}
2018-11-30 11:56:10 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:56:16 GMT], Content-Length=[163]}>
2018-11-30 11:56:17 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:56:17 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Mal, lastName=mah, middleName=null, address=strange, email=theeee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=tony, bvn=244445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:56:17 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Mal","lastName":"mah","address":"strange","email":"XqRFqrY1DPujkAK4CM7DbJh5apEn8R0zvMMQXkIGfVoPPGdhoe8Yk5pnsL+1dbpp8EE2zP71Y38OKc9KXKfUt/KyiLNbjd+pgCMZWkc8wEaoDT1yrbsaiTLodanw85s2ZkUsXaYw+IVAXMuoCdsEOLDDJfbfIVSq76y3o5+jvE0\u003d","mobileNo":"OiqeWDbE8x0bk1EUAIHLjPXEyaCfRa5wYAVeaQeMlb/kmfGmfDsogH43q1Pf402DJjK/81BG1o+eFZ8sMBPsx+bgLD36yqXC1C4rDZV2TCgHxBg+r7Ry7x7fUnSbfXR1zd3SG0wqD8X3obFl1eTSf5hKGEDrMJf0U85vlbMqDaY\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"tony","bvn":"U3WNxWliY+asxlcB6cX5gWQexw6NbCvhsWyobgPQk0QQYDlBNoeVrcqc0K02owCEM6UC3S1k1BdJb3sZemEmcQx259OnQycYCQKSwbOlar2pOLRhFFHj9eSxIePxODEaBJDNfUaxoHwdEa98JTrRpCsooeMNOYHVG0FuI22X4jc\u003d","teamNo":"000","requestId":"ZH3qtrPhie0mGBWJLzXmIqi6jdgTGcTEIyGazAlsjZ4V26cHNtlnhKubu3TOYB6+S0eKEYJBBdeWJytMj9MoyawSDcTLCD5XCqZh4X1cbC1jlWL9633G7rityh4UmqfkPvOIzBoLoGCoOZgOlUfqkoKv2vkI0+A5d78fKma8AGE\u003d","channel":"TP-XPAGENT","userId":"CnJKxvqs0/7IwK+ljrB3DtFeKIS74YH1YHJobxZpeKzlmZzj/eb+jOOP0VIQVt6Th3OqBlJZVKzoNMgkTwibI4Kd6A0urRbctTwrsXzUCtqjRMZfi9FW/i1/b1czl6ixNTWNXQLwirwY69P4s+KysT9L4yEBnJWQhPWZa/TVpY8\u003d","customerNumber":"NkddfFuFDxwCL2zyHSuXcp0ZQvIS0plNoPXU0agOg6i8awwaB7GA6zwZvqFL63FiFVYqKz8vWstESreiIzFA11Ne3q7pnave3/bgtmMI1m1TOsKXODrfW1JHXs8vgIRfFVoKUNGK6PPZjGoVrKdDE8KJDZcWTzsN9VPCORhMSkY\u003d","sessionId":"SK0/rW1l3dsCIIytf//dyfOPfkSEFdHtgepMbRQgxZcfvRNuIv04kP7q0vGYk43zFndHUr/GPnB7cLhllFLkD7QjrkHSHbheCitO9iCFG2PCgPaueQJiuYswTnCUBBWMs0JIOV29QH8tNvJM3KzozpsdzvQ2gU101kS0H4XxOVE\u003d"}
2018-11-30 11:56:17 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:56:23 GMT], Content-Length=[163]}>
2018-11-30 11:56:25 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:56:25 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Mal, lastName=mah, middleName=null, address=strange, email=theeee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=tony, bvn=224445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:56:25 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Mal","lastName":"mah","address":"strange","email":"O+FC4zFci/sHd73/X2iqiTtTxlNMChuGYef/7BzUQuPWuUBf0RqSkZd1UEKntZMQxAlSlrjUYk4wHHcqU5pqiPM+uBhFI5rJRozws4dloRUzBkL3da2JT8J+MUkrPYEBN9X423BuoYWSj42XKGmwMhxCYftvE5XElEMTw3APaEA\u003d","mobileNo":"JkLaP53ZEHc/QzotDRwiLcqVPBJoaj2BN1wTJkSXQXsBF9P92iKoRuDFVUKOfz9x0jQ155OlKa1cMTthHgvTJ17Bghb/8tkYfJuFGdJX8J98ivp83Ijdf8IJFI0sS4X/UJSIcRL2lvwZWa/CXl7nCehYbiy8jAPO9R6SaV/RYyg\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"tony","bvn":"Jf70XrBB806TLoiZ9SPaY/J2TAFDb4Ot8KBFf2f3CJWUgjsCaYFtrz25snbEgvm2afCwqOEM5ciQpmtJmnZQ1ON0X0Vosjcj7hRUamr280oPl5sZeFyJj66OboEuXW90BhQsH+ScmI8QRzj8A083Tx65bBojsDZ3ilrwTL3wM0E\u003d","teamNo":"000","requestId":"QDTR1GD2rc5mInKR4PU84/mExhWT7Jh+EJF6XFNH0++6FOmOtXjezINowVCHkDCHMcI/XhfxzEMRgnlI5L+MXVeJofyI1alBghc/0LgqQa1oPwpvW4pNaMMq0FZ7zwnfp4WoJnrAuX6A1iBGMx0WSTK6ErEFsk27Lluj+Q2/cMo\u003d","channel":"TP-XPAGENT","userId":"aU2pI+cyGn5k68AwPHl2WHMXgufvnTWpXaQUEiga25lIlI5MAdldzT/7FpTvOLJs6CcWt9uI8SQnqYWIwwzpYYEukCpf3V0l/TcJn/cOE3YJSZ+RsR6UsP5Z5+dU3HmpJseTAkkjL5RotEQ7GIC6LxVQP0wEkbWPQ/wJXG94w0g\u003d","customerNumber":"ImrIuN5Nmtjhu+dVFb85uAMC5FiFHGXsgeYItuhCWrIIZgsX9ygbkzpBL1+ycrQuw7VQvuyhG7nCOZ3LcsYfRKdDo/UCbQSkBtJz95oHGJQsFbPQ2kEayVP4uSzD1xMNUwheds2YLZ6tEhY//0AKliCrq+ycgIUPnWpdYA/OAAg\u003d","sessionId":"BZHLbT69F8slCdSlfAygpobwgkwr74i1TBkfBy0kDVENrJg7eNGqPXWE7GAuSRC9hBXrcs5Cw87I30DisHlunSmjYkExjnjQtoNek+sMAuNlgOQd5C+du2u2zwdLg4KXJT9bIi1MPF6C72RD/5aHqOjIL+KHgfRAH8bUieJhfY0\u003d"}
2018-11-30 11:56:25 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:56:31 GMT], Content-Length=[163]}>
2018-11-30 11:56:46 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:56:46 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Mal, lastName=mah, middleName=null, address=strange, email=theeee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=sam, bvn=224445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:56:46 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Mal","lastName":"mah","address":"strange","email":"GnXMz8kT980xBNSCo21hk29otop+AQKZZEgN6+x4vXm2SK2I/hvdYq8/5VHzI8N++qIyOqw2iEooK9v1qkXD7OA+dXe5JWIlx3UlSDi5S1xTWvdPmh0qfzG9Cdwkme5ribumPVOJ2vhGO79HtKKFuvMxTXbYRlXQLKWFzSouIq0\u003d","mobileNo":"LfofEa2KWYOmr8vmnnfqhZ/FBi8oankp3vb8uwxO/G68xYGAAPA5xrW6irTFWHb+Bqi3Nt5dkvCFei1JQld7Stk9IltL2/nx5pMrJduWF2Sa4S5cBEKDnWpRqBi4octxpvRqH4cvi0ZWbAUSzIbVnXHZ9zBjuUp/u6pAP+o1w/4\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"sam","bvn":"MHk4nhgwNy5do4Qy8MRHn/T9c9FuKXkBJHRi4jcv/uqCkBRch8VQ5Ud+qjcPeRL1/MoE13wGvWh8Jgf2vR22kSPZRdXMwK/Pe9kBq0ZoUfSgK7lkA9vjzbZUh3Za3hqE2PVCLFFHUFkOXhU3xOUzootyGYasMhnNt60v/NkaBSs\u003d","teamNo":"000","requestId":"LQxJMwZEBrQfx6g/EPf96rUa5G9ebA6lswvFD+C4Yxp+GrbTfVvIsCSC2EJu8xtniFjwSWu8ZHnmAk3wjHCaokyEihBgJQ5zLfyXpRJwtvdFUzkaj0XecyzlRVNA503ts+eMHgK+pt6hUCc8C/B/PuO7ScnFbVIvmBGFWukaOxo\u003d","channel":"TP-XPAGENT","userId":"SYkELHc7ukHCnN7zWF8kLmbF87YTwi3gEezaAr5GleATgKHPui4iys+eQR6jhXjayO5LHV9V1HaWYqHAmw6QTM2irg5XRLQYUMmwGg7689G4VC1OBzTzVWRsvRMFZe6hRCGe2faa8u8kqgkQ4pP8LwTYvzZGcfSWyMpTzIPeGhI\u003d","customerNumber":"R1xAXfVf7DhiBix2NZLWYjHZ0xfbcw3bZ8vDPSPcgycmx2tTNZPoN9p+H+OUaaUiWeWGbr68Fe6zEvw38klnqt2t8LF0fWyNdkIGAuIVZhy+/T4DzJ8S/uuiEzikZIOVhUe8WQBlZwlJ2EUvRryTS/juVk2viobniNofMVVWFhU\u003d","sessionId":"BGMCrLWICk1aoVHmIkVaH/nsWANcf40QfgpvWNkTq+IyemDJbCoFsoZyg3Vvnp1D4z1wEpMw+80B93JtB5U8qk6Oa/eeL4J5ju0uez/VQqIo4yeBA+oqfSFS+OZZT4eSusM9TojY1uh0MpFgqRtxfs4/NppXSDHol49FPsKaJBg\u003d"}
2018-11-30 11:56:47 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:56:53 GMT], Content-Length=[163]}>
2018-11-30 11:57:03 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:57:03 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Malt, lastName=mahet, middleName=null, address=strange road, email=theeee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=sam, bvn=224445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:57:03 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Malt","lastName":"mahet","address":"strange road","email":"FUIs4vfoNaDIjlBbpwoGjDCefEPj1trvUujrf9Tf1le+BrUJryzJqpzo0Jw19t2XBTHENhHt022uGZxU3bH0130sf+o4ys1tpanlA/aSSGZjnhDabbvBvm3g9qIDyVDWGm/Yo4oXPZRfeh9B0MHiFl3XlsAshdZ0AKCiHdorjTo\u003d","mobileNo":"ZYM7KO0dXA/5AJ05TEMqCpkVpVQotMrOOmt6UjIz2A9TpS5ehTvvJ4v/VTjF0sPZHCC1dP0TI/g+KJAIj42k8HjUglKtIkEBpZVAWNYwIw9T8RmpKTdSISNldDirA6SWNo2WNcbazWvckE/SxtBhKHJOlKHwIc0wPoYuokjC4CM\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"sam","bvn":"DMyNgAuuPjEDXyZ3yucKAdXHMH28Pj/X2AtwtGd7xJz/m85/HqQoiywmrxBbzWpbpfZkNjzs3eBldHHjPzY/xrgMYkkv4H1yL0XkXHNKp4tmSiiWzD6c72X4zwn1p2BdlFsUl73QdNvIp37Yze9TaoK+dvPeLj9kvPU/zNGcenk\u003d","teamNo":"000","requestId":"ZnVA17qwwFTBxvPXp3/4WNTVpyh60yrOVAA9+F0x+Ihw4uuLwHi90V+kqkFj9TtnCRUvsxIHj34S91C48dDhDfo4By3DF/L/8K77CgKU7xCOsjh8sLA3M3sRgpdumiQMm24VWX5iy7gR1q/05u45QBkinMAyfUVyMwsVW+Vcoyg\u003d","channel":"TP-XPAGENT","userId":"CkB5RNFz0RelFmRMWrlge40bQVI0aIrgoWwKVsHq6P5io002Aav3IZ9GfW7ODJSUFK3ZvaeBPisUrf0qXez9cKMDNbpw9HqTnvGDQhLt1MdC84NUNynXPdJXaqrvVuQX+PLwUeVaVhuczhKXtGlYUlht7zth/xM5TUgPL90ksCc\u003d","customerNumber":"I6G3VA00dht5hTc9i+mc0zuvXrznMWsmRxyVLW7EVwndBbfd/NImURR6X4WAf8d08lqZEVo7NJ3G/M2t07AHbvh4mzufddFvuYttUx2E6JfVTzJPMimMY8//nAH8S93v9tQRQECFZF+gkXisHmZN6FljriviWsDpVuV09NDNmB4\u003d","sessionId":"RTP9xQLeT13kx3Ym7ISVY3BXJ+ahtExnC8+74M9Bjjy1y99zGVjoxnbeYYBYje8c/YC7cPP/qnVpE3wYNJCVzM8Ngg+UbB1L5DV1ql8/Tf+5vH9qPw2VR8wKOyiUYzw+ZlEiHMfRSXlkDLhpdSURLE0hDnwFpAQA9H7OyL8D6BE\u003d"}
2018-11-30 11:57:04 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:57:10 GMT], Content-Length=[163]}>
2018-11-30 11:57:11 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:57:11 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Malt, lastName=mahet, middleName=null, address=strange road, email=theee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=sam, bvn=224445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:57:11 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Malt","lastName":"mahet","address":"strange road","email":"VTDnwNfWFc+68dZA3Xkm2WYyr1DQ2FHfv1ivnWEve2mfLXvFpGvVfnfGr8K0m06o0KHzbAKBGwq230OCLiBe1KCWKD3LkeHwWDx8ILI2mVPAJKuM2XkgN7QfjDzxO1sbx8tSyZc5RyLTLvUhBBK/HwuXNGbrr3omsEV24HNGJnI\u003d","mobileNo":"BsCZA91vXvbrw8zmX97YICtjhLwPLE2Afigyb6UewqwyWan0sK607AtKketTogMSVcpY9OIhdAUvM/mrrq+/BOoAQIK0sNaKj7hGRN8Ej1nuPDIt/nTrsMhOIixFExw7cfjiKz3MxL8HZDVooPRW8Ys0hyZ7N4mXuaPpWvB0N5U\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"sam","bvn":"EqWC3g+TJr5G0gUMY6NxEvVHisY5Vh12TbGfAgsYxEYikEOMQbux0OEjuor3Dc5bI9P/EMb3pZVO1ibYi8B8FjtpDnvqnDrp71TishQZlToYQFRSyqdgkO4xoXcyAQKD1aFUYrxTbVkmfPeAmb5QmNasdrr4IU93M6mcE4jsRls\u003d","teamNo":"000","requestId":"Ie9iQ/820V9gqGu0jlDIegAawZDSFCDWA2DE8sRJMFxZ3scKhvaagDDKBn8ZGKshbvgGMGr31lZyJzuFquQQX7DcJYgiCBhLfKpnLCjJfsSS+uLb68SualMSKp9BnljAATwvCy/wP7/MzeN0e4uOPqca+EaGh26U3+OHR3w+0bg\u003d","channel":"TP-XPAGENT","userId":"HZSg+M4oZHs8BSMe+s4kkS6yfT9DvCKsfC5sSeVbeg7MbAOJukxkBQiKpLzkFt86QpF6aEJuPswIBobpzPQ94MZuffD7lnOpb3ppyOUU1e7uXWyjkQI6spDyJEqerMipV7KMK0U5qPuFp2i6CEPL7bCXG6wBQtYiyyPNsAjU2F8\u003d","customerNumber":"GqUwHUeSNL6N10/VkEOnbZxII+T5hPFcTQ05Gsj3n/Dr443BjtXNdgCkUJi6YIlA08DnyuBsuBorNz31JoLs411DRMGJ5U8UL+10Vw3oLXuFfEKUnbtk+ZxWya2uU8zNQdk4F34jxE+BdpPz8ND5SsnMfrETZbHA6BhIebyWRAs\u003d","sessionId":"V8WeUKS5qsC0KJjnT9k1MwTy94CpF2d20WwmLoaDV6npy0naPBWprvdvgN2fJqasCuJYA5rULZtLq4Qa04s2MdIbCBNjxqc4lUxB0zrZVjjQG6o35Gxb9+3v8MY8HFc2w4VP/D52D7EIeClvBc+1esRPKFdILQM4T3z1qJCJN54\u003d"}
2018-11-30 11:57:13 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:57:18 GMT], Content-Length=[163]}>
2018-11-30 11:57:54 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:57:54 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Malt, lastName=mahet, middleName=null, address=strange road, email=theee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=sam, bvn=224445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:57:54 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Malt","lastName":"mahet","address":"strange road","email":"DOVhVf74iIi/FyY2mJaYAVfnqFnCtNY494Hdc+7iPPNKTRZTXRp41VaAEr8JeW6EWc0PTXqdDryQtWLxMRvZgwACFkg4/Nwq9NSV6i2IHO8J+KDwqMbn3FR5D+g63U9RRUNW88UNoCa3EOTpOYJWy5wLc8ihCq3+fD6cFFSHQbE\u003d","mobileNo":"QcG/vAYbUWBQmdcClAG3DAFie/LamQ/IeacgJoFX2Ec0Gxm1253b9KHOus94WiXb/+xmTlTQZXIrlwVqMtdfx1l0USS2AGFU3ZE3LtkLlYVUXnpReyxx3ND/beKD55QkeQkdMuI5OniSrxCE/hJvQBKmFOihmuO0m0gEYgHGhCY\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"sam","bvn":"GH55mP1yd3wY9iLf+IFweZYMWj/Oi5P9AQZAoUwraTz0EY2tQ1SlovekN5+7y5gBAx82ul83ehhZ0i6Bnw0sxmXFU2lhyuwrqwa7AaQowmL8uoc81fYN7ggEbgtiKbXU+Wn5vbTDt3546ARfZDJCDIqzB7QFLfk9AQLqsXwflq8\u003d","teamNo":"000","requestId":"PFXy+vWlZFbkafAL008NJBT0P0pLBZm4rvCPZQVHscRK5XO8c0zZEFSoz3eYOIxLlvbDhrucjyaod4Us1gMepXi89fLzZ10oDK6FW7XlQoKLftmO6K+GKU3Wf4SOGzwWxFkoKW+TdRRlzp86J20MjPeuANt6N9eDhBH0HEHg8K4\u003d","channel":"TP-XPAGENT","userId":"He/mnwbLGKAB4TyywOaDwnb86IUo35pakS+/sR1j2qPPQIA6jyfI21JX/JBgKgpSrYeQsRNWP3H6k00ahD2kZ5n864sHnEz9f9TbOuV8HjY20eTkfxPT+PgsbJdrGMTKJoIzoV/DZ2ymzl/myGjdiMFszb6KY3Us9KZK/cZGG3o\u003d","customerNumber":"BSf/F+xDXmURT3+Hzq/Zv71NsaJZ66Mhxf1FKiZcX2KgAagreAW3CjaWpVgmgWB038PTwtQ+rDkASEPCqJJe5u5q3FGmoL4O/jJOaBmjYBQtV7wo002UFcrXoS9l5/el4CimmvYzdeBgwUCFc4fruBRNXZHQQEktOu993Aae2ao\u003d","sessionId":"VRq4WQ+0pRW++45u7mvpD756/ttKXiBascNfNtSu1KgUh39OfyuDn/OHeL4Dvg+t/+knC8hSike8csSbhMr0ECnbN5dmbbxZa/DVJozcxRufNF3OYe7xO+MUiYIbCKG0ewUctDXW2jR2/0YM6XZTxoF5h70tevEAC11lXixWECk\u003d"}
2018-11-30 11:57:54 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:58:00 GMT], Content-Length=[163]}>
2018-11-30 11:58:58 - Starting GtbankApiApplication on SOLDEV28 with PID 15232 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 11:58:58 - No active profile set, falling back to default profiles: default
2018-11-30 11:58:58 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 11:58:58 WAT 2018]; root of context hierarchy
2018-11-30 11:58:58 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 11:59:00 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 11:59:00 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:59:00 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:59:00 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$37992fe1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:59:00 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 11:59:00 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$93016ae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 11:59:01 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 11:59:01 - Starting service Tomcat
2018-11-30 11:59:01 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 11:59:01 - Initializing Spring embedded WebApplicationContext
2018-11-30 11:59:01 - Root WebApplicationContext: initialization completed in 3362 ms
2018-11-30 11:59:01 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 11:59:01 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 11:59:01 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 11:59:01 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 11:59:01 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 11:59:01 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 11:59:01 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 11:59:01 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 11:59:01 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 11:59:01 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 11:59:03 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 11:59:03 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 11:59:03 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 11:59:03 - HHH000206: hibernate.properties not found
2018-11-30 11:59:03 - HHH000021: Bytecode provider name : javassist
2018-11-30 11:59:03 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 11:59:04 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 11:59:04 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 11:59:05 - 

Using default security password: 9dcc8abf-205c-41b3-8927-75378f47022b

2018-11-30 11:59:05 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@89d5f72, org.springframework.security.web.context.SecurityContextPersistenceFilter@cccfdc1, org.springframework.security.web.header.HeaderWriterFilter@5d485882, org.springframework.security.web.authentication.logout.LogoutFilter@7f4f8b75, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@593e373a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@637f51de, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78733186, org.springframework.security.web.session.SessionManagementFilter@d0fd72d, org.springframework.security.web.access.ExceptionTranslationFilter@374a4f79, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6ff39682]
2018-11-30 11:59:05 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@319208ce, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c0df26c, org.springframework.security.web.context.SecurityContextPersistenceFilter@7f35768f, org.springframework.security.web.header.HeaderWriterFilter@725bddb0, org.springframework.security.web.authentication.logout.LogoutFilter@390022bf, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1cd42ece, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c2fdc56, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b5223e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3821a7b0, org.springframework.security.web.session.SessionManagementFilter@28e2e442, org.springframework.security.web.access.ExceptionTranslationFilter@2c6fe4c3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@43f9a57a]
2018-11-30 11:59:05 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 11:58:58 WAT 2018]; root of context hierarchy
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/singleBVN],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.SingleBVN com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.request.SingleBVNRequest) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/openAccount],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/validate],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/cashOut],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 11:59:05 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 11:59:05 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 11:59:06 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:59:06 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:59:06 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 11:59:06 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 11:59:06 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 11:59:06 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 11:59:06 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:59:06 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:59:06 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:59:06 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:59:06 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 11:59:06 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:59:06 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:59:06 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:59:06 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 11:59:06 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 11:59:06 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:59:06 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 11:59:06 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:59:06 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 11:59:06 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 11:59:06 - LiveReload server is running on port 35729
2018-11-30 11:59:06 - Registering beans for JMX exposure on startup
2018-11-30 11:59:06 - Registering beans for JMX exposure on startup
2018-11-30 11:59:06 - Starting beans in phase 0
2018-11-30 11:59:06 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 11:59:06 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 11:59:06 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 11:59:06 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 11:59:06 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 11:59:06 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 11:59:06 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 11:59:06 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 11:59:06 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 11:59:06 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 11:59:06 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 11:59:06 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 11:59:06 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 11:59:06 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 11:59:06 - Using a shared selector for servlet write/read
2018-11-30 11:59:06 - Tomcat started on port(s): 8094 (http)
2018-11-30 11:59:06 - Started GtbankApiApplication in 9.399 seconds (JVM running for 10.42)
2018-11-30 11:59:16 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 11:59:16 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 11:59:16 - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2018-11-30 11:59:16 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 11:59:16 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Malt, lastName=mahet, middleName=null, address=strange road, email=theee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=2, motherMaiden=sam, bvn=224445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 11:59:16 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Malt","lastName":"mahet","address":"strange road","email":"VIR1r7i8wffIeR2DPSxvAgyou0uaMDaZ0OXg2Xc3IT2snSGX8IfObVM8RPDCkfi/U15XYd9DezBQKHyvlpZXVE6xvStId3rOJTaNJYWGRdIehdd15LgLWxGLoFyU7jffdqIT2uysLaL4GOUt3G+UrU+y9HP5B0/e1nAMVy28CVQ\u003d","mobileNo":"UjxbOpVmgqDoLhrGruvOyX9yBrgQ7VkQAI+SRefMLMamby3PPlzaiVCfeMJfyzOyeHai1v9IVSnEwYF4mBV7rQ7MG6OfsJbucxPl1ZZBoJQSWU1DPOu1xtqE+/q5AlyhkqDzbClHTnW2yI89AGFgc60S2IBxJ8Av1x3r3fgtnL4\u003d","dob":"09/012/1980","gender":"2","motherMaiden":"sam","bvn":"EkgzwGS8Pxi63bS6fg/pNqxoZKSeK63b+6mLcpEICuFWElx+WBycbGqyCrG+/se6rMgrL0LhnWSJVB2HL4OSZpclXzeobveG+N6cUof+2ounnQ5SHvk9in/fJfkBOsbkA88VD+kqzaPuSH46RTykjfbuJgZaaYRIm9k6o8xbnNE\u003d","teamNo":"000","requestId":"Ufl11UOPdDg5sal8K8I2xeVuivYcuOBX3vdSa5jOChALoOOmubKvM/5Z26iMK4NQ45Lnf8UaphkPJay1nu6cWXD4H0N320lmoDWyS9kaiuYItjKaAhILmE783oWS9bo5LGkEQSkFvv0j/dbaPhf8F9WdSSFD0yHCHVJ1SCV4gno\u003d","channel":"TP-XPAGENT","userId":"B5NhnQ2IVV05/mFr91el8Viieg6JivzPskKlc4ZLlIQ6hfTWOS8FcHtCXs+9e7Jdh8Z8Xu8/h9t7ehnEIjNt4fX59T5Cm/7HI2u8NYB/GRpYkiBXiHWtMIB0MJy4ah4er6VaL6K5Zw2nYe7khwCrCPWobMLCYWILfystx0EyTRk\u003d","customerNumber":"RGY893/aJ3gLoNpQ5x1g8yG9FFZRiaJ+Xi/bZORGT6p1SrJUacfXc4ioN6u1oksCuts1sPSlceQL/Ep/FJ6/YjZTtw23Ojrow2WstLGmo/Yun3hPMSZPkkN4f6cTEDwIAInfonjqTT8e5Na9gIoOadGK56G8cAEZ+DokC8M7/Z0\u003d","sessionId":"AwPTL1Srct5hTBVlg0P8Dwo7+HqntGSdAVdlbuy8FGxxYQ4QB8362fU/BwK8tfpIoQec1TAgLMHd+YZG4B/DcVU9QD1VB4RQWz/jOwAR5sp6QzTG8bdWCsMF0r3VxOfdNFnK0aotEHitEKZix34h3pvsHN9jKeTvcRZFTbGy+Q4\u003d"}
2018-11-30 11:59:16 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 10:59:22 GMT], Content-Length=[163]}>
2018-11-30 11:59:50 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 11:59:50 - :::::::::: REQUEST SingleBVNRequest(bvn=22222222226, channel=TP-XPAGENT, userId=xpresspayment)
2018-11-30 11:59:50 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"BLsqfiR73f3B3zwDYY6qGBfAToS5ex1AuLpw+k257+ZurZFRXlpwIsDRDCAPnVDn4o5WpHlcItUnup8n3x13Q7h+M4AA0wVP90Clfir2ckH7xNH6gH/7WgchrINarAUn2QkE4YLWCqwuD4RNI7300D4IB7i2nLGIHlztTh1DsVw\u003d","channel":"TP-XPAGENT","userId":"RqZ8IETOrLk/3eM/x65F07dnuN5P0INompzYxOm5QUd024ENMwSxUPxHaidrn/9ORcaVxHU9iXOeeZMuCFohk4lEAMSsoxay/8xN6raNUyu/s1fetV1K4OQhFAre4hfaIq32lJ9NMdP/Ywkl0chjHPJsNrVa2H3XxDFHe86vrtY\u003d"}
2018-11-30 11:59:54 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791759997777773","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Ranaerbenjamin@teleworm.us","gender":"Female","phoneNumber2":"07020602869","levelOfAccount":"Level 3 - High Level Accounts","lgaOfOrigin":"Esan South-east","lgaOfResidence":"Kanam","maritalStatus":"Widow","nin":"352-923-1835","nameOnCard":"Ranae Benjamin","nationality":"Nigeria","residentialAddress":"425 Chardonnay Drive","stateOfOrigin":"edo state","stateOfResidence":"plateau state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222226","firstName":"Ranae","middleName":"R","lastName":"Benjamin","dateOfBirth":"03-Oct-1993","registrationDate":"20-Dec-2016","enrollmentBank":"068","enrollmentBranch":"NULL","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 11:00:00 GMT], Content-Length=[20300]}>
2018-11-30 12:00:16 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 12:00:16 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Malt, lastName=mahet, middleName=null, address=strange road, email=theee@gmail.com, phoneNo=0709999999, dob=09/012/1980, gender=1, motherMaiden=sam, bvn=224445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 12:00:16 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Malt","lastName":"mahet","address":"strange road","email":"EASTK4mgWpGo+pq0BZKfmN5z6AjSejCFWHLlUC91xmc1ZAoGjUaDVAfI/P6pXIDP7Ip+kRQpqNfczzC9SlEE+JPIDzSYonaLE/7YRd5jfzXShYdxl9qoLV2tMEjsGOq++E46qaW05QQmJsEjcj3OibYs364U1pqh+bGEmst6oQ0\u003d","mobileNo":"PXi/foBsvL378RoWqbTd0GvHuiljRUkBn86htXS2qTWPPlfdQeTlRvyoPtfatgt7jear2C1DKFpxHjTrqrRFa6unFh2qaI0W8uOgjzv4qnUKRMpGemMFvb9k/jvkUzJLQRGIomD9E5YBEgZwjbJeH2S+vZCRympihwBIFaHGDcY\u003d","dob":"09/012/1980","gender":"1","motherMaiden":"sam","bvn":"BoL2h9+l9/z/R/XkOPsvNzaXD+ZEGIpGRmBC0hjHTCmFZ8MjOZOVL+mcqbryUkch+9FCqikrq4L89BsY6ZIQmrr+uvtYDtHO5ytvAjCmM2bjXRoJPnptOdOft2iRBr5/QtCgGw3NieRy8WQty1B60MfUBcXuXkKjDFydSWsO9eg\u003d","teamNo":"000","requestId":"YeHP9ZCev8w7UyffTxQqjQOlNa/VIvkQ73e97uX/NrQrVIGmYBbtcmTJgoeRt+OTown0pxVyTfAipDXJbSIZpDRQjxcvKPCNip/RyvR1JuMV4ZwVOaweaWWolPPylhhOhLieKCj6Gx/RW4x3U8y2jsvEwqFVa1TPXsyEErkLVp4\u003d","channel":"TP-XPAGENT","userId":"H9BJUPLGylss4w96Yttu/J+dsDGIHlpAVlWv9ecT7JSpL8hQatufXw5Z7LzBRKrVTo5ruwH+0Srluoz3qSgsah21PLWCsG1aPuRi4KE1lKb+PMM+7wEzKhzfu9tbLZ7BK03PswL2oLtIKO7+7BVUcwVgzpCFZkkevZWS+2uZsvE\u003d","customerNumber":"Fej7eyfDt+2dv2XJZHHffGjWc9HkyDxOUqN9M2lkvNDzCYfVa9Kg5IgXVF9Z+KbwhlDoScH3RzBs+I/791gsuWI/BlxW8iq+gvtjG6OYJQT2atIoqwxER61eVlds4z82Qb3/yXhCV6fF0CGlqKw0qP0NcPFOqK3pTaGpZGr8SuI\u003d","sessionId":"PmuyYNZhcd7144gI+c3KMSbF4pDfp8NVIGs6bnjYLe2NnC4nzPthFO8aPG7TbbriYW5eXATHXr12er2Errwec22c9cRBdgYUxcRY3WGQbhhjAhBukZLoTnAxXbdcO6m948TxqBqEhM90VniiIUejxwAP/eUwBaoDpxJ9NcWUgoI\u003d"}
2018-11-30 12:00:17 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"96","responseDescription":"Exception Error An error occured while opening account"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 11:00:23 GMT], Content-Length=[163]}>
2018-11-30 12:00:29 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 12:00:30 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Malt, lastName=mahet, middleName=null, address=strange road, email=theee@gmail.com, phoneNo=0709999999, dob=09/12/1980, gender=1, motherMaiden=sam, bvn=224445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 12:00:30 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Malt","lastName":"mahet","address":"strange road","email":"ZWvXGydwRV79mJiKOjC/EKueTFMELZWC5fPxZtneMHEp7jt4l1tDQO8XZM1Q/Qn0K/XKpwbKt6aFZ9q8aiG2e/K0YyHvuCnpLxzS/eFkW9iWzzHiZUcxAEeGfKti06EN6Ocbh9oXsGEu3k7j7Xscw0Sd+gN/GAOERqomjiAWdUE\u003d","mobileNo":"ZCqZsYt1/tIVAIOcWJeiMwcBlwQCXP+Ochs2Cf9xJXMoFRDD5rPYQBcsXztpENeref8cgSmrUxJCheEJWpkMfLD2JpBJh/FS192HT7fiXHQBDEBbzSfTxf2HGGQtawx7DZjTJkPnm80AIWAx7Sln/VxLYEKqJzrlgUNHP0D2thA\u003d","dob":"09/12/1980","gender":"1","motherMaiden":"sam","bvn":"BhiCOkyyt3R3tucPTlXZTVnIEU/SXlWbNV4/dNhAHvmdijQ6pUdtezI2vXEM9vp6iJpGyXY03JalcM8AE/46GR81yNlaeUD290QbYerM3WqoCV7iZ5z+70OUjKbEIPFVXU+x01CzgMY4tsNpl9v56u/a7rt9ejZwmxX2hqsiWzw\u003d","teamNo":"000","requestId":"X6NYBscDH1PPVq+DygAfKlm6fBm04hQr3+2GJy2S5RSXPUZajTZQ3k8cFl5cgKunOevEDRlKGQpoWqGEKVAB3hRFtJrk9dmiaD1rp5WJzep45me5OCmRnhNrYa0CU/eAfvMIwEgxBksfutKhXUPoe8Gc/L56tCxrDbgqQy9KGhQ\u003d","channel":"TP-XPAGENT","userId":"TqHmLIxykd9qxutOeKPyANvFdmJLaf1NPePJqMkd26ktvk9YdqUZqgQfc2+yBeVMHzmhgB6R4G02F7pPYq7VjrTJgjy3c+tiMu15/KrPy1FHci2ShEbufGDtYalu52y9LPVcFBFSJqG18zQk+7Y6AhhdOm9Z7+vRPSY+fhKwhvs\u003d","customerNumber":"ZUiPlW+co2CeKcftCwyLavhCG2Xu6PbE4uagLv/1cxUk0bu+sJgHqn/tuhlm2eF3aE06jPGVDy4Dd2Uvs7A0+Y4oT0pJZ6y8+ECO/vmrZXetx16P0vVw7Oh604zPPNJuAX0zMi2wRn0ikiLRDwmjEjxYxSbFjBVKAPu/IjI0wo8\u003d","sessionId":"ATP4BOmUJ+UHDlt340oJZ21AbQtxfkv0BpMJgYDhB6IaK7bhKIFemGgtf/wLQN5Vi9BNyRBRNLIUcy4uFHUKBT40EI3pTcjAxQ7hL+rF/7gG6lCrO+5WIZWWoCw2xhXXd7mVc47A35gQvVnWcWqRfbck8E52Iuyh8M8cEbymY1U\u003d"}
2018-11-30 12:00:30 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":null,"password":null,"userId":null,"requestId":"GTHUB","responseCode":"01","responseDescription":"Validation Failure Sorry! You have entered an invalid mobile number"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 11:00:36 GMT], Content-Length=[176]}>
2018-11-30 12:00:46 - :::::::::: GETACOUNTOPENING URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBCustomerService/Api/Open-Account
2018-11-30 12:00:46 - :::::::::: REQUEST ApiAccountOpeningRequest(firstName=Malt, lastName=mahet, middleName=null, address=strange road, email=theee@gmail.com, phoneNo=07099999990, dob=09/12/1980, gender=1, motherMaiden=sam, bvn=224445565654, teamNo=000, title=null, city=null, state=null, occupation=null, marital=null, acctType=null, requestType=null)
2018-11-30 12:00:46 - :::::::::: ENCRYPTEDREQUEST {"firstName":"Malt","lastName":"mahet","address":"strange road","email":"DJ2Fpj1/IKzlx7b2wD7ANqpySwJIjQJuuHzykP7gOar4FyLDHudAAtpq7qbJRM11GzK/h/ZeiylkfxZYs0XdmqkgcYg2eGfYjUrlHbL4K7hrtIbzfLSTjU0xLyx9FuAFYgP/FNVkAOTMydLk8y3ZGc+rguDEz+xA8fETUZ9+kpg\u003d","mobileNo":"PitQn09jvvn53TadrhWWvW0f/f9volw0OIwO4aZYN5zjtIB/CAmaARlbI/IeentNKtIlqEjYzbpMW92RYrDD2158SjnVx+oal0KqSdjN5RttMeq2mZ30saedKq6YwdDssSe2NbBzD5xfjD+yU0tSQ2O6GMWEU0MMSTnV5tW6h78\u003d","dob":"09/12/1980","gender":"1","motherMaiden":"sam","bvn":"IV0hOLDwxahURyctT3+wJuRqKvc+wRsbDeoKaofSidFqGG0yDNfeTOAzIaJWJcB2A9d6eHqkPVt8wRWZ+UatifungohOmWDUF+FaGs9XatSbEDO4JD+NNtt4VT35lWeMWFu63wZ88/JdI0kPrtBjjp3mTLFG58wT5GHehSaQ82I\u003d","teamNo":"000","requestId":"ZOwXJS6Hx4fbSaxtzWhsdEEwwSS77IYgQSRNi9S9FcrScfpqqKDpC7/M1koudQ3tKc5nX5CDGYoDw+ytHexxmZD5kvTgApz7Rcw158pEJe0mnVWxh76nbX3uw3TQ+yGIp/1Zn3a6ERQLx/nt2Ux2enM+yS3hefxGi2faZ6P4FxE\u003d","channel":"TP-XPAGENT","userId":"UNIZLFe5szzUWtGpUR5C5yHOPuw0N7bEHKZLM7D6t7fZ8Iq1Z0s3HKGd692u0NjD545e0jcJXcZljlPXXjOUu9aq2cz00pm7JgVxguQNRG6leYfL4G62yG9u+9Jf263uDE03ueF/3AAZrnzZsmTdgkzUaClElePpfdxxK93BtNA\u003d","customerNumber":"L7nIc68CccwKFG2QMlhc0Vfstglzs/Ji/9dM6XwBe+vEKnv7VIo1iPpQFVltXqX5iiHFa4ho1Kl73UBbeW0lX3UUZVnPz75KyYylfUisFrwCKy1sdq9Ap3EzQ9z0xPLXrVn2VxzIvf3+jQyTH61QT0X8yia+fQBTclJ+bQ1TYGQ\u003d","sessionId":"ZVErtyp8P4JHOod6jNmS8U+2yvF1PURSq3ArAAwogMkMx1tQhL1+iJ1oFLjrGBcjY5jL1RGgcF2W2YrYmug0wKIoQh7TBuCkAgsm3MH5JffwtwseQ5Bi4vHeYJI8uhvs0cfvihZWrGDL/OZNXpMos9j5sVoD2lJTzvB9Kkfmmyw\u003d"}
2018-11-30 12:01:00 - :::::::::: ACCOUNT OPENING <200 OK,{"nuban":"0449143556","password":"123456","userId":"214857813801","requestId":"GTHUB","responseCode":"00","responseDescription":"Success"},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 11:01:05 GMT], Content-Length=[138]}>
2018-11-30 17:05:10 - Starting GtbankApiApplication on SOLDEV28 with PID 9964 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 17:05:10 - No active profile set, falling back to default profiles: default
2018-11-30 17:05:10 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2353ebaa: startup date [Fri Nov 30 17:05:10 WAT 2018]; root of context hierarchy
2018-11-30 17:05:10 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 17:05:14 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 17:05:15 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 17:05:15 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 17:05:15 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$c4b3bfd0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 17:05:15 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 17:05:15 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$201bfad1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 17:05:15 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 17:05:15 - Starting service Tomcat
2018-11-30 17:05:15 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 17:05:16 - Initializing Spring embedded WebApplicationContext
2018-11-30 17:05:16 - Root WebApplicationContext: initialization completed in 5740 ms
2018-11-30 17:05:16 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 17:05:16 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 17:05:16 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 17:05:16 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 17:05:16 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 17:05:16 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 17:05:16 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 17:05:16 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 17:05:16 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 17:05:16 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 17:05:17 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 17:05:17 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 17:05:17 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 17:05:17 - HHH000206: hibernate.properties not found
2018-11-30 17:05:17 - HHH000021: Bytecode provider name : javassist
2018-11-30 17:05:17 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 17:05:18 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 17:05:18 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 17:05:19 - 

Using default security password: 867048c1-3f78-49b0-af71-04d528794ec9

2018-11-30 17:05:19 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@60d334ea, org.springframework.security.web.context.SecurityContextPersistenceFilter@4e753c04, org.springframework.security.web.header.HeaderWriterFilter@7319a4d0, org.springframework.security.web.authentication.logout.LogoutFilter@29684859, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79934064, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a4b00d6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@193833d7, org.springframework.security.web.session.SessionManagementFilter@2e51f6b4, org.springframework.security.web.access.ExceptionTranslationFilter@4da3a206, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2a993bde]
2018-11-30 17:05:19 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@24f576b8, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b039c47, org.springframework.security.web.context.SecurityContextPersistenceFilter@640b4b67, org.springframework.security.web.header.HeaderWriterFilter@4b22c4ed, org.springframework.security.web.authentication.logout.LogoutFilter@f145933, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6c0467b6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28150533, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@754db970, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@8286842, org.springframework.security.web.session.SessionManagementFilter@33aeec29, org.springframework.security.web.access.ExceptionTranslationFilter@6914a8d5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@237b6769]
2018-11-30 17:05:19 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2353ebaa: startup date [Fri Nov 30 17:05:10 WAT 2018]; root of context hierarchy
2018-11-30 17:05:19 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiSingleBVNResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 17:05:19 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 17:05:19 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 17:05:20 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 17:05:20 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 17:05:20 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 17:05:20 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 17:05:20 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 17:05:20 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 17:05:20 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:05:20 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:05:20 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:05:20 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:05:20 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:05:20 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 17:05:20 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:05:20 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:05:20 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 17:05:20 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:05:20 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:05:20 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 17:05:20 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 17:05:20 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:05:20 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 17:05:20 - LiveReload server is running on port 35729
2018-11-30 17:05:20 - Registering beans for JMX exposure on startup
2018-11-30 17:05:20 - Registering beans for JMX exposure on startup
2018-11-30 17:05:20 - Starting beans in phase 0
2018-11-30 17:05:20 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 17:05:20 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 17:05:20 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 17:05:20 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 17:05:20 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 17:05:20 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 17:05:20 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 17:05:20 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 17:05:20 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 17:05:20 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 17:05:20 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 17:05:20 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 17:05:20 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 17:05:21 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 17:05:21 - Using a shared selector for servlet write/read
2018-11-30 17:05:21 - Tomcat started on port(s): 8094 (http)
2018-11-30 17:05:21 - Started GtbankApiApplication in 11.726 seconds (JVM running for 12.96)
2018-11-30 17:22:53 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 17:22:53 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 17:22:53 - FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-11-30 17:22:53 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 17:22:53 - :::::::::: REQUEST SingleBVNRequest(bvn=aLPtEoqTtZkeH+D91sAn76JXcKNYxRkFxaC2tw3Yqpbe+8pPDKvyv4E5FXeg9LefhVcsAMNlQCLFfDeQVGFu45h245yVPAV3r2PCTEzIeTYlz0z256mMBicy7xnRy06+5ek1ZTBawNrF2N2kIuNnmtyBt4XPVTya/uuyxzxcz8s=, channel=TP-XPAGENT, userId=C9XwaFQgXoE0DYg6EqXVFQzUjPOwB/W+I4D9BpgzigiL2luwO0ZAYzvZUQEG93XczS1yFIMlHzv3e4vv7w9LkvIZ3N/zmo3cQr1w4UvoSb2Lq1xZ6wMhbUjI6IPzAbYNJ90I3Ri1QpcVUzNC6HW/xRs67kvHGJhnYHc2j/0/K1c=)
2018-11-30 17:22:53 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"aLPtEoqTtZkeH+D91sAn76JXcKNYxRkFxaC2tw3Yqpbe+8pPDKvyv4E5FXeg9LefhVcsAMNlQCLFfDeQVGFu45h245yVPAV3r2PCTEzIeTYlz0z256mMBicy7xnRy06+5ek1ZTBawNrF2N2kIuNnmtyBt4XPVTya/uuyxzxcz8s\u003d","channel":"TP-XPAGENT","userId":"C9XwaFQgXoE0DYg6EqXVFQzUjPOwB/W+I4D9BpgzigiL2luwO0ZAYzvZUQEG93XczS1yFIMlHzv3e4vv7w9LkvIZ3N/zmo3cQr1w4UvoSb2Lq1xZ6wMhbUjI6IPzAbYNJ90I3Ri1QpcVUzNC6HW/xRs67kvHGJhnYHc2j/0/K1c\u003d"}
2018-11-30 17:22:54 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791953809666778","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 16:23:01 GMT], Content-Length=[20340]}>
2018-11-30 17:22:54 - :::: ERROR Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791953809666778","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
2018-11-30 17:22:55 - Error: null
java.lang.NullPointerException: null
	at com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse.toSetData(ApiBvnValidationResponse.java:32)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.GetSingleBVN(AccountOpeningService.java:83)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(AccountOpeningController.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 17:22:55 - Resolved exception caused by Handler execution: java.lang.NullPointerException
2018-11-30 17:34:06 - Starting GtbankApiApplication on SOLDEV28 with PID 11520 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 17:34:06 - No active profile set, falling back to default profiles: default
2018-11-30 17:34:06 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19e67433: startup date [Fri Nov 30 17:34:06 WAT 2018]; root of context hierarchy
2018-11-30 17:34:07 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 17:34:08 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 17:34:08 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 17:34:09 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 17:34:09 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$bd392d7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 17:34:09 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 17:34:09 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$18a1687b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 17:34:09 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 17:34:09 - Starting service Tomcat
2018-11-30 17:34:09 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 17:34:10 - Initializing Spring embedded WebApplicationContext
2018-11-30 17:34:10 - Root WebApplicationContext: initialization completed in 3833 ms
2018-11-30 17:34:10 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 17:34:10 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 17:34:10 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 17:34:10 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 17:34:10 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 17:34:10 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 17:34:10 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 17:34:10 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 17:34:10 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 17:34:10 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 17:34:11 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 17:34:11 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 17:34:11 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 17:34:11 - HHH000206: hibernate.properties not found
2018-11-30 17:34:11 - HHH000021: Bytecode provider name : javassist
2018-11-30 17:34:11 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 17:34:11 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 17:34:12 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 17:34:13 - 

Using default security password: f1e5eee8-3e68-41e5-92b2-1a31bb6d4f6f

2018-11-30 17:34:13 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68314c6a, org.springframework.security.web.context.SecurityContextPersistenceFilter@31197a44, org.springframework.security.web.header.HeaderWriterFilter@353a3a2, org.springframework.security.web.authentication.logout.LogoutFilter@34c216a0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ce2991f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46e55998, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5cec6115, org.springframework.security.web.session.SessionManagementFilter@5ac59a2e, org.springframework.security.web.access.ExceptionTranslationFilter@1d476fe5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@60affa3f]
2018-11-30 17:34:13 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@349c4a2e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@667edd12, org.springframework.security.web.context.SecurityContextPersistenceFilter@2687e26d, org.springframework.security.web.header.HeaderWriterFilter@41eca970, org.springframework.security.web.authentication.logout.LogoutFilter@6e851c25, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@14b8d10e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a00fd12, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e83740b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73debf78, org.springframework.security.web.session.SessionManagementFilter@684789ae, org.springframework.security.web.access.ExceptionTranslationFilter@4b5af82f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ec56ad0]
2018-11-30 17:34:13 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19e67433: startup date [Fri Nov 30 17:34:06 WAT 2018]; root of context hierarchy
2018-11-30 17:34:13 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 17:34:13 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 17:34:13 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 17:34:13 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 17:34:13 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 17:34:13 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 17:34:13 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 17:34:14 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:34:14 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 17:34:14 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:34:14 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 17:34:14 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 17:34:14 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:34:14 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:34:14 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 17:34:14 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:34:14 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:34:14 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:34:14 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 17:34:14 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:34:14 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:34:14 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 17:34:14 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 17:34:14 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 17:34:14 - LiveReload server is running on port 35729
2018-11-30 17:34:14 - Registering beans for JMX exposure on startup
2018-11-30 17:34:14 - Registering beans for JMX exposure on startup
2018-11-30 17:34:14 - Starting beans in phase 0
2018-11-30 17:34:14 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 17:34:14 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 17:34:14 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 17:34:14 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 17:34:14 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 17:34:14 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 17:34:14 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 17:34:14 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 17:34:14 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 17:34:14 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 17:34:14 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 17:34:14 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 17:34:14 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 17:34:14 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 17:34:14 - Using a shared selector for servlet write/read
2018-11-30 17:34:14 - Tomcat started on port(s): 8094 (http)
2018-11-30 17:34:14 - Started GtbankApiApplication in 9.242 seconds (JVM running for 10.221)
2018-11-30 17:34:27 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 17:34:27 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 17:34:27 - FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2018-11-30 17:34:27 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 17:34:27 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222223)
2018-11-30 17:34:27 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"HI/Wvjn+2xnDVhUbVPecE0/Mk563XDhcQvDYXfbgXiv2KCRzixaDirs6doV2EFf7Yth5g8VwgQmX6LiIVwXjcI+aWP/blAa8MHoB8VFwe8V+ZQcq3YCM2kkCPzfEit0hTJCU4WIhIPA7buZxcqYQnQ/N4hkOsxGeUpHqWQaR92w\u003d","channel":"TP-XPAGENT","userId":"IW+4Pb9o0gJNMl1byrN+lxm28AHX3CjsgGTcEo7ioVi5SGH6x/qY6/qOAjCLz5zh+cN9HskkJve50ZXrkXdtsrqhBaWwcb1MzdLGbiRDNSw7ys+NN0YeNMnb1OhcBQIfRRKSmG6Hs6se7cZenTzRAgV+8UBOs7HnOA6aG12gEA4\u003d"}
2018-11-30 17:34:28 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791960746213976","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 16:34:34 GMT], Content-Length=[20340]}>
2018-11-30 17:34:28 - Error: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791960746213976","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791960746213976","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1477)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1455)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:499)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:101)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:276)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.GetSingleBVN(AccountOpeningService.java:75)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(AccountOpeningController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 17:34:28 - Resolved exception caused by Handler execution: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791960746213976","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"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","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
2018-11-30 18:04:28 - Starting GtbankApiApplication on SOLDEV28 with PID 30764 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:04:28 - No active profile set, falling back to default profiles: default
2018-11-30 18:04:28 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183e9805: startup date [Fri Nov 30 18:04:28 WAT 2018]; root of context hierarchy
2018-11-30 18:04:28 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:04:32 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:04:32 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:04:32 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:04:32 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$ad29080f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:04:32 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:04:32 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8914310] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:04:33 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:04:33 - Starting service Tomcat
2018-11-30 18:04:33 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:04:33 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:04:33 - Root WebApplicationContext: initialization completed in 5539 ms
2018-11-30 18:04:34 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:04:34 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:04:34 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:04:34 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:04:34 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:04:34 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:04:34 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:04:34 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:04:34 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:04:34 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:04:35 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:04:35 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:04:35 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:04:35 - HHH000206: hibernate.properties not found
2018-11-30 18:04:35 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:04:35 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:04:35 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:04:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:04:36 - 

Using default security password: d6e6792e-c77e-4db3-bfa1-5118dfac8d4e

2018-11-30 18:04:37 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e4729de, org.springframework.security.web.context.SecurityContextPersistenceFilter@7e5a2ea6, org.springframework.security.web.header.HeaderWriterFilter@59451788, org.springframework.security.web.authentication.logout.LogoutFilter@6aaf8004, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22855821, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@695af4c2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@703bbff5, org.springframework.security.web.session.SessionManagementFilter@21481a7b, org.springframework.security.web.access.ExceptionTranslationFilter@29bf63f8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f62475c]
2018-11-30 18:04:37 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@fc78448, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7b57db3b, org.springframework.security.web.context.SecurityContextPersistenceFilter@b7caed9, org.springframework.security.web.header.HeaderWriterFilter@fc93c79, org.springframework.security.web.authentication.logout.LogoutFilter@131314a8, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5d753231, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@32768faf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@749a476c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35653448, org.springframework.security.web.session.SessionManagementFilter@6d137d3, org.springframework.security.web.access.ExceptionTranslationFilter@67abd31a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@754d11f0]
2018-11-30 18:04:37 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183e9805: startup date [Fri Nov 30 18:04:28 WAT 2018]; root of context hierarchy
2018-11-30 18:04:37 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:04:37 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:04:37 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:04:37 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:04:37 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:04:37 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:04:37 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:04:37 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:04:37 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:04:37 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:04:37 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:04:37 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:04:37 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:04:37 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:04:37 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:04:37 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:04:37 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:04:37 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:04:37 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:04:37 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:04:37 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:04:37 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:04:37 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:04:37 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:04:38 - LiveReload server is running on port 35729
2018-11-30 18:04:38 - Registering beans for JMX exposure on startup
2018-11-30 18:04:38 - Registering beans for JMX exposure on startup
2018-11-30 18:04:38 - Starting beans in phase 0
2018-11-30 18:04:38 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:04:38 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:04:38 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:04:38 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:04:38 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:04:38 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:04:38 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:04:38 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:04:38 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:04:38 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:04:38 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:04:38 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:04:38 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:04:38 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:04:38 - Using a shared selector for servlet write/read
2018-11-30 18:04:38 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:04:38 - Started GtbankApiApplication in 10.572 seconds (JVM running for 11.552)
2018-11-30 18:04:43 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 18:04:43 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 18:04:43 - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2018-11-30 18:04:43 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 18:04:43 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222223)
2018-11-30 18:04:43 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"JdKNPXwKccpOuyGCSAn8KtiPA/GE+Pl8pTGv6G5bcFyEcwjIP410Ao3OpmSkhG6EvDh7fU/PqV3Ia2sRVbdDyWsU5AfgQ/d9jYn6m9o9GWvWcM70R79qVtcqA1Q8XVpad+D09r+2qjzYTvyQGBByWTl6lLlzZBvDMx6pBohE/3Y\u003d","channel":"TP-XPAGENT","userId":"YQ0r7/S9AnhQAL63NVvXNn/GdBbG7N7nHLRimNycg403KV7PSrc+q+CtK8YmzgVF58aZ4lSLMh+ujVlgT+HLZ8+92fVbbuzXmTdwI4Oa/4p0Al1sm3gBUdXq8Nr2Fpjn69IW6pjK7i5PfDTXYNhxEqIo7VdJnWSpPJovqZPyEzk\u003d"}
2018-11-30 18:04:51 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791978925775028","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 17:04:57 GMT], Content-Length=[20340]}>
2018-11-30 18:04:51 - Error: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791978925775028","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791978925775028","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1477)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1455)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:499)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:101)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:276)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.GetSingleBVN(AccountOpeningService.java:75)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(AccountOpeningController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 18:04:51 - Resolved exception caused by Handler execution: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791978925775028","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
2018-11-30 18:05:24 - Starting GtbankApiApplication on SOLDEV28 with PID 30820 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:05:24 - No active profile set, falling back to default profiles: default
2018-11-30 18:05:24 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 18:05:24 WAT 2018]; root of context hierarchy
2018-11-30 18:05:25 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:05:27 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:05:27 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:05:27 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:05:27 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$980ca3af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:05:27 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:05:27 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f374deb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:05:28 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:05:28 - Starting service Tomcat
2018-11-30 18:05:28 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:05:28 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:05:28 - Root WebApplicationContext: initialization completed in 3711 ms
2018-11-30 18:05:28 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:05:28 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:05:28 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:05:28 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:05:28 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:05:28 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:05:28 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:05:28 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:05:28 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:05:28 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:05:29 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:05:29 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:05:30 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:05:30 - HHH000206: hibernate.properties not found
2018-11-30 18:05:30 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:05:30 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:05:30 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:05:30 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:05:31 - 

Using default security password: c161671a-c126-4d57-828b-79c177b16142

2018-11-30 18:05:32 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3fca069e, org.springframework.security.web.context.SecurityContextPersistenceFilter@44b03946, org.springframework.security.web.header.HeaderWriterFilter@410086bd, org.springframework.security.web.authentication.logout.LogoutFilter@44c1926b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7f4f8b75, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6752115f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b1f8ee6, org.springframework.security.web.session.SessionManagementFilter@24941a99, org.springframework.security.web.access.ExceptionTranslationFilter@6bf9f7dc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@41c30826]
2018-11-30 18:05:32 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@3c2cc14c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@161a80a8, org.springframework.security.web.context.SecurityContextPersistenceFilter@3821a7b0, org.springframework.security.web.header.HeaderWriterFilter@319208ce, org.springframework.security.web.authentication.logout.LogoutFilter@6249165b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@428d122b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d2bfb6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21a7031a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@debf29a, org.springframework.security.web.session.SessionManagementFilter@c0df26c, org.springframework.security.web.access.ExceptionTranslationFilter@7769e456, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2c4303b4]
2018-11-30 18:05:32 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 18:05:24 WAT 2018]; root of context hierarchy
2018-11-30 18:05:32 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:05:32 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:05:32 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:05:32 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:05:32 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:05:32 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:05:32 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:05:33 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:05:33 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:05:33 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:05:33 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:05:33 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:05:33 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:05:33 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:05:33 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:05:33 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:05:33 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:05:33 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:05:33 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:05:33 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:05:33 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:05:33 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:05:33 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:05:33 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:05:33 - LiveReload server is running on port 35729
2018-11-30 18:05:33 - Registering beans for JMX exposure on startup
2018-11-30 18:05:33 - Registering beans for JMX exposure on startup
2018-11-30 18:05:33 - Starting beans in phase 0
2018-11-30 18:05:33 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:05:33 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:05:33 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:05:33 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:05:33 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:05:33 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:05:33 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:05:33 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:05:33 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:05:33 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:05:33 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:05:33 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:05:33 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:05:33 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:05:33 - Using a shared selector for servlet write/read
2018-11-30 18:05:33 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:05:34 - Started GtbankApiApplication in 10.129 seconds (JVM running for 11.124)
2018-11-30 18:05:34 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 18:05:34 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 18:05:34 - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2018-11-30 18:05:34 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 18:05:34 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222223)
2018-11-30 18:05:34 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"KBi8FiUAazihzex0U8mmLMZxobgJecnFLb36CxXarovClqn4Bqh1zPvVZe+j6rFOJ4ghQAee9bFWAcPPBuLlCxLKE6w6qhRzPH5B9SBEazqzavsCYd+1AN/41NppHloVeRfApXkopNC1FppQiOmPHKEvHNR3FpGCoViJCE1o+gY\u003d","channel":"TP-XPAGENT","userId":"KeYzh+j49LaLZCKLLusNtb1UtQC0QacyVAwuKMtAXgF05dHCK5EeN7JaGXUSbgZ6a8akj8NeIC/arR30uGuPMrGhPjtpnOAktrcnKIyvk6JUMMMBAI167DyzGJTNkDzbF9dBLe6AKqK2TSCx8sMTNiNUc/l2BcInZ6iBYDBSFLY\u003d"}
2018-11-30 18:05:35 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791979409732745","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 17:05:41 GMT], Content-Length=[20340]}>
2018-11-30 18:05:35 - Error: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVN), not marked as ignorable (3 known properties: "responseObject", "responseDescription", "responseCode"])
 at [Source: {"requestId":"636791979409732745","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 15] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["requestId"])
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVN), not marked as ignorable (3 known properties: "responseObject", "responseDescription", "responseCode"])
 at [Source: {"requestId":"636791979409732745","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 15] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["requestId"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1477)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1455)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.GetSingleBVN(AccountOpeningService.java:75)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(AccountOpeningController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 18:05:35 - Resolved exception caused by Handler execution: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVN), not marked as ignorable (3 known properties: "responseObject", "responseDescription", "responseCode"])
 at [Source: {"requestId":"636791979409732745","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 15] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["requestId"])
2018-11-30 18:07:39 - Starting GtbankApiApplication on SOLDEV28 with PID 30852 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:07:39 - No active profile set, falling back to default profiles: default
2018-11-30 18:07:39 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c4f1052: startup date [Fri Nov 30 18:07:39 WAT 2018]; root of context hierarchy
2018-11-30 18:07:39 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:07:41 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:07:41 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:07:41 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:07:41 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$a76de684] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:07:41 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:07:41 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d62185] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:07:42 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:07:42 - Starting service Tomcat
2018-11-30 18:07:42 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:07:42 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:07:42 - Root WebApplicationContext: initialization completed in 3639 ms
2018-11-30 18:07:43 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:07:43 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:07:43 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:07:43 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:07:43 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:07:43 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:07:43 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:07:43 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:07:43 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:07:43 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:07:44 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:07:44 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:07:44 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:07:44 - HHH000206: hibernate.properties not found
2018-11-30 18:07:44 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:07:44 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:07:45 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:07:45 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:07:46 - 

Using default security password: 915a044d-5392-421e-9d0e-aa82dae33661

2018-11-30 18:07:46 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21544bdd, org.springframework.security.web.context.SecurityContextPersistenceFilter@34a61c9a, org.springframework.security.web.header.HeaderWriterFilter@170bd3ed, org.springframework.security.web.authentication.logout.LogoutFilter@1ea62a42, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c351f4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38e47230, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6db87dfc, org.springframework.security.web.session.SessionManagementFilter@6048adfc, org.springframework.security.web.access.ExceptionTranslationFilter@53076df9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a4d6ff5]
2018-11-30 18:07:46 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@652c41d2, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@61d92758, org.springframework.security.web.context.SecurityContextPersistenceFilter@75b766c2, org.springframework.security.web.header.HeaderWriterFilter@30f7937c, org.springframework.security.web.authentication.logout.LogoutFilter@2f50ae79, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@45282b24, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b1ca9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@cfb03a5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@129f49d, org.springframework.security.web.session.SessionManagementFilter@5a0def4c, org.springframework.security.web.access.ExceptionTranslationFilter@64b22d70, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@58ed4c60]
2018-11-30 18:07:47 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c4f1052: startup date [Fri Nov 30 18:07:39 WAT 2018]; root of context hierarchy
2018-11-30 18:07:47 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:07:47 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:07:47 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:07:47 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:07:47 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:07:47 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:07:47 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:07:47 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:07:47 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:07:47 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:07:47 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:07:47 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:07:47 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:07:47 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:07:47 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:07:47 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:07:47 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:07:47 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:07:47 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:07:47 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:07:47 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:07:47 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:07:47 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:07:47 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:07:48 - LiveReload server is running on port 35729
2018-11-30 18:07:48 - Registering beans for JMX exposure on startup
2018-11-30 18:07:48 - Registering beans for JMX exposure on startup
2018-11-30 18:07:48 - Starting beans in phase 0
2018-11-30 18:07:48 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:07:48 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:07:48 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:07:48 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:07:48 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:07:48 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:07:48 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:07:48 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:07:48 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:07:48 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:07:48 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:07:48 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:07:48 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:07:48 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:07:48 - Using a shared selector for servlet write/read
2018-11-30 18:07:48 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:07:48 - Started GtbankApiApplication in 10.071 seconds (JVM running for 11.093)
2018-11-30 18:07:48 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 18:07:48 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 18:07:48 - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2018-11-30 18:07:48 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 18:07:48 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222223)
2018-11-30 18:07:48 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"S0sCuC94S3TEu4k7gjcKQ14pLhxteE+sKg+2rHxuYAd+nSeV0SIOQa5JG36XPaH9lGco5Bj0FOrVxrfmX70dvIM8rjdecDVAIhPPLqn+uF+Le2Bpx9mHI1lebZF5tVphAeChq1cBBRDPDbMDaEyGR/mukbpi2HBKe190kF+3GLE\u003d","channel":"TP-XPAGENT","userId":"ResTcUe7q6y1VuRNGS3lT0njmYarK7Iw6U4y9cN5HlJHvbVhZbdb2XussX0sykDuxQE4nDhBqsYBBPxfT7wWFCmtl6mnWPP2lK55XP9B3IkmpbmkM2pzAPfEGnIsQGmW7P1onfbqhe5u0RZQN9iuGHrMmw4Qqf06KUhosKVLDFk\u003d"}
2018-11-30 18:07:49 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791980753769708","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 17:07:55 GMT], Content-Length=[20340]}>
2018-11-30 18:07:49 - Error: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791980753769708","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791980753769708","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1477)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1455)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:499)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:101)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:276)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.GetSingleBVN(AccountOpeningService.java:75)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(AccountOpeningController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 18:07:49 - Resolved exception caused by Handler execution: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791980753769708","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
2018-11-30 18:12:18 - Starting GtbankApiApplication on SOLDEV28 with PID 25684 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:12:18 - No active profile set, falling back to default profiles: default
2018-11-30 18:12:18 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2353ebaa: startup date [Fri Nov 30 18:12:18 WAT 2018]; root of context hierarchy
2018-11-30 18:12:19 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:12:20 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:12:21 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:12:21 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:12:21 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$13c099c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:12:21 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:12:21 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f28d4c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:12:21 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:12:21 - Starting service Tomcat
2018-11-30 18:12:21 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:12:22 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:12:22 - Root WebApplicationContext: initialization completed in 3403 ms
2018-11-30 18:12:22 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:12:22 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:12:22 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:12:22 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:12:22 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:12:22 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:12:22 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:12:22 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:12:22 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:12:22 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:12:23 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:12:23 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:12:23 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:12:23 - HHH000206: hibernate.properties not found
2018-11-30 18:12:23 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:12:23 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:12:24 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:12:24 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:12:25 - 

Using default security password: 06798f14-3a82-4961-ac1a-0fb0f87efb5d

2018-11-30 18:12:25 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f145933, org.springframework.security.web.context.SecurityContextPersistenceFilter@29684859, org.springframework.security.web.header.HeaderWriterFilter@63fe0be8, org.springframework.security.web.authentication.logout.LogoutFilter@410bff22, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c6503aa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3b9f105f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@170ae798, org.springframework.security.web.session.SessionManagementFilter@350b6456, org.springframework.security.web.access.ExceptionTranslationFilter@2a4b00d6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f55bfc7]
2018-11-30 18:12:25 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@18d88c8b, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22bb8b04, org.springframework.security.web.context.SecurityContextPersistenceFilter@460ab131, org.springframework.security.web.header.HeaderWriterFilter@8286842, org.springframework.security.web.authentication.logout.LogoutFilter@5c518431, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@22f30559, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@311cfc13, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7abdf80a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a4de798, org.springframework.security.web.session.SessionManagementFilter@49c55e07, org.springframework.security.web.access.ExceptionTranslationFilter@6b039c47, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@541e7c8e]
2018-11-30 18:12:25 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2353ebaa: startup date [Fri Nov 30 18:12:18 WAT 2018]; root of context hierarchy
2018-11-30 18:12:26 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:12:26 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:12:26 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:12:26 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:12:26 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:12:26 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:12:26 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:12:26 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:12:26 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:12:26 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:12:26 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:12:26 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:12:26 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:12:26 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:12:26 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:12:26 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:12:26 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:12:26 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:12:26 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:12:26 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:12:26 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:12:26 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:12:26 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:12:26 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:12:26 - LiveReload server is running on port 35729
2018-11-30 18:12:26 - Registering beans for JMX exposure on startup
2018-11-30 18:12:26 - Registering beans for JMX exposure on startup
2018-11-30 18:12:26 - Starting beans in phase 0
2018-11-30 18:12:26 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:12:26 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:12:26 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:12:26 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:12:26 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:12:27 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:12:27 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:12:27 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:12:27 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:12:27 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:12:27 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:12:27 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:12:27 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:12:27 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:12:27 - Using a shared selector for servlet write/read
2018-11-30 18:12:27 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:12:27 - Started GtbankApiApplication in 9.283 seconds (JVM running for 10.305)
2018-11-30 18:12:31 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 18:12:31 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 18:12:31 - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2018-11-30 18:12:31 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 18:12:32 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222223)
2018-11-30 18:12:32 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"MeBFzXgJ8N+QLvQtkLryY8WcLrLKCyZE5V+V4vxOjgfSGoDKpf/ZxKBBHl93A8RzLN4tB1BknIv1D4gdb8irtvzkFgrzasP+20wWBTwBENk9PTb7rN1b8rr4meGv371ADvM0Dt/5Mi2eJkwff1v/H6A6mWj3TLUTjDjQsXzlyuc\u003d","channel":"TP-XPAGENT","userId":"MNvhSGMQnoaOgJEwNWVFLvHuBIst9tWtDWam7RlFeFCvxRTkHNJJP0rS0/SZZwbH4DscQ5muO9PaF0Mkx40PpgDaC9qjFcp4aBQUw1E+ne4NexZmm+B9O5VKXV8PYaLKb0RrXKgIWkDss6f7js1N1Mz/RhdKXNOCYpb0EJ79Xx8\u003d"}
2018-11-30 18:12:32 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791983588332022","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 17:12:38 GMT], Content-Length=[20340]}>
2018-11-30 18:12:32 - Error: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791983588332022","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791983588332022","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1477)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1455)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:499)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeWithErrorWrapping(BeanDeserializer.java:511)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:396)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:148)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.GetSingleBVN(AccountOpeningService.java:75)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(AccountOpeningController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 18:12:32 - Resolved exception caused by Handler execution: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "requestId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (26 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "base64Image", "stateOfOrigin", "residentialAddress", "levelOfAccount", "nin", "phoneNumber", "title", "nameOnCard", "phoneNumber2", "email", "stateOfResidence", "lastName", "enrollmentBranch", "watchListed", "responseCode", "bvn", "nationality", "firstName", "dateOfBirth", "enrollmentBank"])
 at [Source: {"requestId":"636791983588332022","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20298] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["requestId"])
2018-11-30 18:13:23 - Starting GtbankApiApplication on SOLDEV28 with PID 5780 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:13:23 - No active profile set, falling back to default profiles: default
2018-11-30 18:13:23 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 18:13:23 WAT 2018]; root of context hierarchy
2018-11-30 18:13:24 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:13:25 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:13:26 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:13:26 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:13:26 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$674ed09] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:13:26 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:13:26 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$61dd280a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:13:26 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:13:26 - Starting service Tomcat
2018-11-30 18:13:26 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:13:26 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:13:26 - Root WebApplicationContext: initialization completed in 3257 ms
2018-11-30 18:13:27 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:13:27 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:13:27 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:13:27 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:13:27 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:13:27 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:13:27 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:13:27 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:13:27 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:13:27 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:13:28 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:13:28 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:13:28 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:13:28 - HHH000206: hibernate.properties not found
2018-11-30 18:13:28 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:13:28 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:13:28 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:13:29 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:13:30 - 

Using default security password: 10922db2-3675-4ccb-bc96-a14ffd9d3ab0

2018-11-30 18:13:31 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ffb70c, org.springframework.security.web.context.SecurityContextPersistenceFilter@410086bd, org.springframework.security.web.header.HeaderWriterFilter@7f89e5ca, org.springframework.security.web.authentication.logout.LogoutFilter@17090d12, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@cea5136, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b2284d4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4099c8ca, org.springframework.security.web.session.SessionManagementFilter@637f51de, org.springframework.security.web.access.ExceptionTranslationFilter@59547370, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@89d5f72]
2018-11-30 18:13:31 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@2dacc73c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b44126a, org.springframework.security.web.context.SecurityContextPersistenceFilter@43f9a57a, org.springframework.security.web.header.HeaderWriterFilter@2a220569, org.springframework.security.web.authentication.logout.LogoutFilter@46c01fba, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6979f6fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@618367df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bb03fcb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c4303b4, org.springframework.security.web.session.SessionManagementFilter@37ebdd2e, org.springframework.security.web.access.ExceptionTranslationFilter@504e52c8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@d2bfb6]
2018-11-30 18:13:31 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 18:13:23 WAT 2018]; root of context hierarchy
2018-11-30 18:13:31 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:13:31 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:13:31 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:13:31 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:13:31 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:13:31 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:13:31 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:13:32 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:13:32 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:13:32 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:13:32 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:13:32 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:13:32 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:13:32 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:13:32 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:13:32 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:13:32 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:13:32 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:13:32 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:13:32 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:13:32 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:13:32 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:13:32 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:13:32 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:13:32 - LiveReload server is running on port 35729
2018-11-30 18:13:33 - Registering beans for JMX exposure on startup
2018-11-30 18:13:33 - Registering beans for JMX exposure on startup
2018-11-30 18:13:33 - Starting beans in phase 0
2018-11-30 18:13:33 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:13:33 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:13:33 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:13:33 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:13:33 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:13:33 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:13:33 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:13:33 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:13:33 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:13:33 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:13:33 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:13:33 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:13:33 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:13:33 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:13:33 - Using a shared selector for servlet write/read
2018-11-30 18:13:33 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:13:33 - Started GtbankApiApplication in 10.401 seconds (JVM running for 11.406)
2018-11-30 18:13:41 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 18:13:41 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 18:13:41 - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-11-30 18:13:41 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 18:13:41 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222223)
2018-11-30 18:13:41 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"Ch1Bo3uCZKBhHUW5u9Ynie72bdYgkFPLvgRmoq3q7lkanD3vo+0JDOhjnnmO2JhmS5LitliTTfwu/aL1W05uOqFj+V+tJ8NknTZGhRIwHqwzFbXC6N8eUCbFYsMosOYD35y1aRs+CDLE3J/0EQ62PX4eMVu+PLoIV5MKZz43e5Y\u003d","channel":"TP-XPAGENT","userId":"N0YQLWfm32B0Av7iGBUKR0ABC8v3jRh37Dpxnk2cCccqlGOqLvYm/Bet/tFiWTESqDD5agSPCxpg9lCNuP2VUt+GZiUGBVjTmEQpiLvHm8w8ZR5iiS9e0UltieHi83vNZaHMlWPSK5WLqYbCkuw2Eq2eF0VkXLS/2n5rFJ0bMec\u003d"}
2018-11-30 18:13:42 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791984283031810","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 17:13:48 GMT], Content-Length=[20340]}>
2018-11-30 18:13:42 - Error: Unrecognized field "responseDescription" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (27 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "requestId", "base64Image", "stateOfOrigin", "residentialAddress", "nin", "phoneNumber", "title", "bvn", "firstName", "email", "stateOfResidence", "enrollmentBank", "watchListed", "levelOfAccount", "nameOnCard", "phoneNumber2", "nationality", "lastName", "enrollmentBranch", "responseCode", "dateOfBirth"])
 at [Source: {"requestId":"636791984283031810","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20325] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["responseDescription"])
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "responseDescription" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (27 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "requestId", "base64Image", "stateOfOrigin", "residentialAddress", "nin", "phoneNumber", "title", "bvn", "firstName", "email", "stateOfResidence", "enrollmentBank", "watchListed", "levelOfAccount", "nameOnCard", "phoneNumber2", "nationality", "lastName", "enrollmentBranch", "responseCode", "dateOfBirth"])
 at [Source: {"requestId":"636791984283031810","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20325] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["responseDescription"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1477)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1455)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:499)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeWithErrorWrapping(BeanDeserializer.java:511)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:396)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:148)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.GetSingleBVN(AccountOpeningService.java:75)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(AccountOpeningController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 18:13:42 - Resolved exception caused by Handler execution: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "responseDescription" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (27 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "requestId", "base64Image", "stateOfOrigin", "residentialAddress", "nin", "phoneNumber", "title", "bvn", "firstName", "email", "stateOfResidence", "enrollmentBank", "watchListed", "levelOfAccount", "nameOnCard", "phoneNumber2", "nationality", "lastName", "enrollmentBranch", "responseCode", "dateOfBirth"])
 at [Source: {"requestId":"636791984283031810","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20325] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["responseDescription"])
2018-11-30 18:14:23 - Starting GtbankApiApplication on SOLDEV28 with PID 10708 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:14:23 - No active profile set, falling back to default profiles: default
2018-11-30 18:14:23 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2353ebaa: startup date [Fri Nov 30 18:14:23 WAT 2018]; root of context hierarchy
2018-11-30 18:14:24 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:14:26 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:14:26 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:14:26 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:14:26 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$d445402b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:14:26 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:14:26 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2fad7b2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:14:27 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:14:27 - Starting service Tomcat
2018-11-30 18:14:27 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:14:27 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:14:27 - Root WebApplicationContext: initialization completed in 3670 ms
2018-11-30 18:14:27 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:14:27 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:14:27 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:14:27 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:14:27 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:14:27 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:14:27 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:14:27 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:14:27 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:14:27 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:14:29 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:14:29 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:14:29 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:14:29 - HHH000206: hibernate.properties not found
2018-11-30 18:14:29 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:14:29 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:14:29 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:14:30 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:14:30 - 

Using default security password: c6a72191-4acc-4b10-ab13-c5d4ca5729b3

2018-11-30 18:14:31 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1bcc4a37, org.springframework.security.web.context.SecurityContextPersistenceFilter@4423a1f0, org.springframework.security.web.header.HeaderWriterFilter@4e753c04, org.springframework.security.web.authentication.logout.LogoutFilter@42a00d9d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@323ae522, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@315f44d3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5bec64ca, org.springframework.security.web.session.SessionManagementFilter@5abbc33b, org.springframework.security.web.access.ExceptionTranslationFilter@180e05c3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b20ddcc]
2018-11-30 18:14:31 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@d374d56, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ff60a2c, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c9e0d32, org.springframework.security.web.header.HeaderWriterFilter@75f2f2e7, org.springframework.security.web.authentication.logout.LogoutFilter@3756f44b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@afb0d19, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@237b6769, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@417ccc2b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@fd66def, org.springframework.security.web.session.SessionManagementFilter@3504fde6, org.springframework.security.web.access.ExceptionTranslationFilter@5882e505, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@8286842]
2018-11-30 18:14:31 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2353ebaa: startup date [Fri Nov 30 18:14:23 WAT 2018]; root of context hierarchy
2018-11-30 18:14:31 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:14:31 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:14:31 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:14:31 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:14:31 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:14:31 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:14:31 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:14:31 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:14:31 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:14:31 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:14:31 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:14:31 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:14:31 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:14:31 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:14:31 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:14:31 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:14:31 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:14:31 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:14:31 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:14:31 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:14:31 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:14:31 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:14:31 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:14:31 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:14:32 - LiveReload server is running on port 35729
2018-11-30 18:14:32 - Registering beans for JMX exposure on startup
2018-11-30 18:14:32 - Registering beans for JMX exposure on startup
2018-11-30 18:14:32 - Starting beans in phase 0
2018-11-30 18:14:32 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:14:32 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:14:32 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:14:32 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:14:32 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:14:32 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:14:32 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:14:32 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:14:32 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:14:32 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:14:32 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:14:32 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:14:32 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:14:32 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:14:32 - Using a shared selector for servlet write/read
2018-11-30 18:14:32 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:14:32 - Started GtbankApiApplication in 9.009 seconds (JVM running for 10.049)
2018-11-30 18:14:35 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 18:14:35 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 18:14:35 - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-11-30 18:14:35 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 18:14:36 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222223)
2018-11-30 18:14:36 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"NMAlcAWy5QYiloj3wHNKErw53qYBXyaB8V9kcHaPRsiUQh8Y01v9U6NkNFAR30MxbofAg9zb35a6XFDvKN9PsX9Y8UGTyYlIOW87drY1EEUizkF1Y/ahiiJYnZ8mq9K0qRKe8dyFssMELnGRu6q3pCcJApelhkb20UJtRFbPp+A\u003d","channel":"TP-XPAGENT","userId":"NDDOOsEDpDih4GZBYBjIN9S7QbJ6CHRTe2AWXKkY/tgINzabiah5YMLCqiPQkdibJAGoKVdPsjic6EjP0Laml2S82MnmvOuQhOoAeqAwi2xdzeHUqCMHGS6u+TdP13+WycoXL2HyaSWNfdB65OAbQSXS/1xPy4Chy0jbJpxrCxk\u003d"}
2018-11-30 18:14:36 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791984830663153","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 17:14:43 GMT], Content-Length=[20340]}>
2018-11-30 18:14:37 - Error: Unrecognized field "userId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (28 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "requestId", "base64Image", "stateOfOrigin", "residentialAddress", "nin", "phoneNumber", "title", "bvn", "firstName", "email", "stateOfResidence", "enrollmentBank", "watchListed", "levelOfAccount", "nameOnCard", "responseDescription", "nationality", "lastName", "enrollmentBranch", "responseCode", "dateOfBirth", "phoneNumber2"])
 at [Source: {"requestId":"636791984830663153","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20339] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["userId"])
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "userId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (28 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "requestId", "base64Image", "stateOfOrigin", "residentialAddress", "nin", "phoneNumber", "title", "bvn", "firstName", "email", "stateOfResidence", "enrollmentBank", "watchListed", "levelOfAccount", "nameOnCard", "responseDescription", "nationality", "lastName", "enrollmentBranch", "responseCode", "dateOfBirth", "phoneNumber2"])
 at [Source: {"requestId":"636791984830663153","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20339] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["userId"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1477)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1455)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:499)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeWithErrorWrapping(BeanDeserializer.java:511)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:396)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:148)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)
	at com.xpresspayments.ZenithBank.gtbank.service.AccountOpeningService.GetSingleBVN(AccountOpeningService.java:75)
	at com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(AccountOpeningController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-11-30 18:14:37 - Resolved exception caused by Handler execution: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "userId" (class com.xpresspayments.ZenithBank.model.response.SingleBVNResponse), not marked as ignorable (28 known properties: "middleName", "gender", "lgaOfOrigin", "maritalStatus", "registrationDate", "lgaOfResidence", "requestId", "base64Image", "stateOfOrigin", "residentialAddress", "nin", "phoneNumber", "title", "bvn", "firstName", "email", "stateOfResidence", "enrollmentBank", "watchListed", "levelOfAccount", "nameOnCard", "responseDescription", "nationality", "lastName", "enrollmentBranch", "responseCode", "dateOfBirth", "phoneNumber2"])
 at [Source: {"requestId":"636791984830663153","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"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","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}}; line: 1, column: 20339] (through reference chain: com.xpresspayments.ZenithBank.model.response.SingleBVN["responseObject"]->com.xpresspayments.ZenithBank.model.response.SingleBVNResponse["userId"])
2018-11-30 18:15:19 - Starting GtbankApiApplication on SOLDEV28 with PID 26292 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:15:19 - No active profile set, falling back to default profiles: default
2018-11-30 18:15:19 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 18:15:19 WAT 2018]; root of context hierarchy
2018-11-30 18:15:20 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:15:22 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:15:22 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:15:22 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:15:22 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$24dd626a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:15:22 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:15:22 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$80459d6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:15:23 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:15:23 - Starting service Tomcat
2018-11-30 18:15:23 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:15:23 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:15:23 - Root WebApplicationContext: initialization completed in 4119 ms
2018-11-30 18:15:24 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:15:24 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:15:24 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:15:24 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:15:24 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:15:24 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:15:24 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:15:24 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:15:24 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:15:24 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:15:25 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:15:25 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:15:25 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:15:25 - HHH000206: hibernate.properties not found
2018-11-30 18:15:25 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:15:25 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:15:25 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:15:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:15:27 - 

Using default security password: a3b0cd14-fd4b-42af-abc8-3351a3288c13

2018-11-30 18:15:27 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f1c590a, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c5642e7, org.springframework.security.web.header.HeaderWriterFilter@232716a4, org.springframework.security.web.authentication.logout.LogoutFilter@336dae56, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a4c7ae0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e411371, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68e390b1, org.springframework.security.web.session.SessionManagementFilter@40f4b39b, org.springframework.security.web.access.ExceptionTranslationFilter@40e55640, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5b802c7d]
2018-11-30 18:15:27 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@5366b26a, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@113b776e, org.springframework.security.web.context.SecurityContextPersistenceFilter@7773380c, org.springframework.security.web.header.HeaderWriterFilter@21a7031a, org.springframework.security.web.authentication.logout.LogoutFilter@2df535f7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@161a80a8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6249165b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bef76db, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@431638f1, org.springframework.security.web.session.SessionManagementFilter@425a0bd0, org.springframework.security.web.access.ExceptionTranslationFilter@d2bfb6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7cd51b0e]
2018-11-30 18:15:28 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 18:15:19 WAT 2018]; root of context hierarchy
2018-11-30 18:15:28 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:15:28 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:15:28 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:15:28 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:15:28 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:15:28 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:15:28 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:15:28 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:15:28 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:15:28 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:15:28 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:15:28 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:15:28 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:15:28 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:15:28 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:15:28 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:15:28 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:15:28 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:15:28 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:15:28 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:15:28 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:15:28 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:15:28 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:15:28 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:15:29 - LiveReload server is running on port 35729
2018-11-30 18:15:29 - Registering beans for JMX exposure on startup
2018-11-30 18:15:29 - Registering beans for JMX exposure on startup
2018-11-30 18:15:29 - Starting beans in phase 0
2018-11-30 18:15:29 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:15:29 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:15:29 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:15:29 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:15:29 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:15:29 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:15:29 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:15:29 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:15:29 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:15:29 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:15:29 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:15:29 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:15:29 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:15:29 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:15:29 - Using a shared selector for servlet write/read
2018-11-30 18:15:29 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:15:29 - Started GtbankApiApplication in 10.707 seconds (JVM running for 11.735)
2018-11-30 18:15:30 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 18:15:30 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 18:15:30 - FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-11-30 18:15:30 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 18:15:30 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222223)
2018-11-30 18:15:30 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"CSikSKLSM5hiDLb2JJ2O0ZexDqCEUypjhYQGnOpKzqQ+KvLH9eEjpohgpNqfqVNIdQAv1YSB3cBeMXee61aDHSDo1BaU/yHyEstueUZ/NmVxDEK0mzcT+N4rC0csQmhvloIYu5DSsrRtg0c8PA934mZIFBW8lKyFIP9riRj6Xr0\u003d","channel":"TP-XPAGENT","userId":"RtXO0du8u4fLCRTmusOfAsuKUkT+YMUIO2aenKqnFn2QcQBMpJq2oGbUgn8oltto/QyN3dBPfReHt13sFex9Sdr4i/LNFQqKVyk+fj04bU0yMDNcp8f4vLUxP8ZQhflesYcfdVpMN+ubiYmvq9dwts0aP95h1DjU4B57bBX4rjE\u003d"}
2018-11-30 18:15:31 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791985377854513","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 17:15:38 GMT], Content-Length=[20340]}>
2018-11-30 18:17:36 - Starting GtbankApiApplication on SOLDEV28 with PID 31452 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:17:36 - No active profile set, falling back to default profiles: default
2018-11-30 18:17:36 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@45bb09d6: startup date [Fri Nov 30 18:17:36 WAT 2018]; root of context hierarchy
2018-11-30 18:17:37 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:17:40 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:17:40 - Starting GtbankApiApplication on SOLDEV28 with PID 7748 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:17:40 - No active profile set, falling back to default profiles: default
2018-11-30 18:17:40 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc5e7d1: startup date [Fri Nov 30 18:17:40 WAT 2018]; root of context hierarchy
2018-11-30 18:17:40 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:17:41 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:17:41 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$8e9dc8b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:17:41 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:17:41 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:17:41 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea0603b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:17:44 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:17:44 - Starting service Tomcat
2018-11-30 18:17:44 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:17:44 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:17:44 - Root WebApplicationContext: initialization completed in 7735 ms
2018-11-30 18:17:45 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:17:45 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:17:45 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:17:45 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:17:45 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:17:45 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:17:45 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:17:45 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:17:45 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:17:45 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:17:45 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:17:45 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:17:45 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:17:46 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$45f9380c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:17:46 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:17:46 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a161730d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:17:47 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:17:47 - Starting service Tomcat
2018-11-30 18:17:47 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:17:47 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:17:47 - Root WebApplicationContext: initialization completed in 6616 ms
2018-11-30 18:17:48 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:17:48 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:17:48 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:17:48 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:17:48 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:17:48 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:17:48 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:17:48 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:17:48 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:17:48 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:17:48 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:17:48 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:17:48 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:17:48 - HHH000206: hibernate.properties not found
2018-11-30 18:17:48 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:17:49 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:17:49 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:17:50 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:17:52 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:17:53 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:17:53 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:17:53 - HHH000206: hibernate.properties not found
2018-11-30 18:17:53 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:17:53 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:17:54 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:17:55 - 

Using default security password: 50900bf3-0b9d-4b22-b113-dab8b49008db

2018-11-30 18:17:55 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b3ff693, org.springframework.security.web.context.SecurityContextPersistenceFilter@7a8acb54, org.springframework.security.web.header.HeaderWriterFilter@775c2ab1, org.springframework.security.web.authentication.logout.LogoutFilter@30cb021d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@491d5cf9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@378cf7ca, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42b645e0, org.springframework.security.web.session.SessionManagementFilter@2017d6, org.springframework.security.web.access.ExceptionTranslationFilter@15ec2d71, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5cf6ea6f]
2018-11-30 18:17:55 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@4b2b017f, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6584ecde, org.springframework.security.web.context.SecurityContextPersistenceFilter@1e46f7da, org.springframework.security.web.header.HeaderWriterFilter@23916aab, org.springframework.security.web.authentication.logout.LogoutFilter@4ae574e9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6de87d31, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ade5e48, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62b2b18a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43f5a986, org.springframework.security.web.session.SessionManagementFilter@4afe7aae, org.springframework.security.web.access.ExceptionTranslationFilter@1c7906bc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@28ad9d80]
2018-11-30 18:17:56 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@45bb09d6: startup date [Fri Nov 30 18:17:36 WAT 2018]; root of context hierarchy
2018-11-30 18:17:56 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:17:56 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:17:57 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:17:57 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:17:58 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:17:58 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:17:58 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:17:58 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:18:01 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:18:01 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:01 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:18:01 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:01 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:18:01 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:18:01 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:01 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:01 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:18:01 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:01 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:18:01 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:01 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:18:01 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:01 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:01 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:01 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:02 - 

Using default security password: 5571289a-24f2-4849-ad46-5bb3523d4ec5

2018-11-30 18:18:02 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e893395, org.springframework.security.web.context.SecurityContextPersistenceFilter@4f3d7b3b, org.springframework.security.web.header.HeaderWriterFilter@2b0321a0, org.springframework.security.web.authentication.logout.LogoutFilter@5efe2e24, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7767eea2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29797c17, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62a7c888, org.springframework.security.web.session.SessionManagementFilter@72c69a40, org.springframework.security.web.access.ExceptionTranslationFilter@a506793, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d969567]
2018-11-30 18:18:02 - LiveReload server is running on port 35729
2018-11-30 18:18:02 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@78e3854, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28848759, org.springframework.security.web.context.SecurityContextPersistenceFilter@59f2d4ff, org.springframework.security.web.header.HeaderWriterFilter@71a40610, org.springframework.security.web.authentication.logout.LogoutFilter@2db96100, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1ef63a76, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@650cfa0e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3449e439, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e123b94, org.springframework.security.web.session.SessionManagementFilter@260e4dd1, org.springframework.security.web.access.ExceptionTranslationFilter@61fba728, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d757bba]
2018-11-30 18:18:03 - Registering beans for JMX exposure on startup
2018-11-30 18:18:03 - Registering beans for JMX exposure on startup
2018-11-30 18:18:03 - Starting beans in phase 0
2018-11-30 18:18:03 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:18:03 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:18:03 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:18:03 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:18:03 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc5e7d1: startup date [Fri Nov 30 18:17:40 WAT 2018]; root of context hierarchy
2018-11-30 18:18:03 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:18:03 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:18:03 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:18:03 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:18:03 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:18:04 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:18:04 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:18:04 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:18:04 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:18:04 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:18:04 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:18:04 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:18:04 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:18:04 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:18:04 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:18:04 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:18:04 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:18:04 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:18:04 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:18:04 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:18:04 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:18:04 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:18:04 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:18:04 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:18:04 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:18:04 - Using a shared selector for servlet write/read
2018-11-30 18:18:04 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:18:04 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:18:04 - Started GtbankApiApplication in 28.467 seconds (JVM running for 29.576)
2018-11-30 18:18:04 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:18:04 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 18:18:04 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 18:18:04 - FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
2018-11-30 18:18:05 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 18:18:05 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222223)
2018-11-30 18:18:05 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"CGKoGa39GLvvyQQV90xLh7iOHU+8S8G3R1JsJyjqA2HPZUJ3quTVYyibr1YZCoUU7G07YHe7eMqWKuDCYVCxpuZ+Mm+otvwN3nz5CQvaiZxW8Fsrvtyo4KOL4gAsaERy3YHBxSZY0l4GuCRhmY+jf9CI9kUiF8/Z6ZHXfGkcHwg\u003d","channel":"TP-XPAGENT","userId":"Ci4HzX3ThIDpL2UynDS1cqwuemddr9aFiPxAAXjPQsX6aCzUYmfHUgYKdVJjzKBwrTb8A5V8xNMQdS600DNMvnsfEORd6ayVeX9uNTR1XAZzRUjBUCvF335wnuYjIqE4FIIAwJEKKs+z8sKa7LG7eq5OCfJ9KNWk8tf1ss617cg\u003d"}
2018-11-30 18:18:05 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:18:05 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:05 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:18:05 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:18:05 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:05 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:18:05 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:18:05 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:05 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:05 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:05 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:05 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:05 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:18:05 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:18:05 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:05 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:05 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:18:05 - Unable to start LiveReload server
2018-11-30 18:18:05 - Registering beans for JMX exposure on startup
2018-11-30 18:18:05 - Registering beans for JMX exposure on startup
2018-11-30 18:18:05 - Starting beans in phase 0
2018-11-30 18:18:05 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:18:05 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:18:05 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:18:05 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:18:05 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:18:05 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:18:05 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:18:05 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:18:05 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:18:05 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:18:05 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:18:05 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:18:05 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:18:05 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:18:05 - Failed to start end point associated with ProtocolHandler [http-nio-8094]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:241)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:184)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.xpresspayments.ZenithBank.ZenithbankApiApplication.main(GtbankApiApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2018-11-30 18:18:05 - Failed to start connector [Connector[HTTP/1.1-8094]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8094]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:241)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:184)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.xpresspayments.ZenithBank.ZenithbankApiApplication.main(GtbankApiApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1000)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 18 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993)
	... 19 common frames omitted
2018-11-30 18:18:05 - Pausing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:18:05 - Stopping service Tomcat
2018-11-30 18:18:06 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791986922182928","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Teresarstoker@jourrapide.com","gender":"Female","phoneNumber2":"07018140838","levelOfAccount":"Level 2 - Medium Level Accounts","lgaOfOrigin":"Rijau","lgaOfResidence":"Abakaliki","maritalStatus":"Seperated","nin":"541-232-0670","nameOnCard":"Teresa Stoker","nationality":"Nigeria","residentialAddress":"3894 Brooklyn Street","stateOfOrigin":"niger state","stateOfResidence":"ebonyi state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222223","firstName":"AKPOABO-OWEI","middleName":"OKORO NICHOLAS","lastName":"OSADOLOR OSAIGBOVO","dateOfBirth":"05-Apr-1994","registrationDate":"20-Dec-2016","enrollmentBank":"035","enrollmentBranch":" Hopewel????","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 17:18:12 GMT], Content-Length=[20340]}>
2018-11-30 18:18:06 - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-11-30 18:18:06 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8094 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8094, or configure this application to listen on another port.

2018-11-30 18:18:06 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc5e7d1: startup date [Fri Nov 30 18:17:40 WAT 2018]; root of context hierarchy
2018-11-30 18:18:06 - Stopping beans in phase 0
2018-11-30 18:18:06 - Unregistering JMX-exposed beans on shutdown
2018-11-30 18:18:06 - Unregistering JMX-exposed beans
2018-11-30 18:18:06 - Unregistering JMX-exposed beans on shutdown
2018-11-30 18:18:06 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:19:22 - Starting GtbankApiApplication on SOLDEV28 with PID 29836 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:19:22 - No active profile set, falling back to default profiles: default
2018-11-30 18:19:22 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@357670d7: startup date [Fri Nov 30 18:19:22 WAT 2018]; root of context hierarchy
2018-11-30 18:19:23 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:19:24 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:19:24 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:19:24 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:19:25 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$b48326ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:19:25 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:19:25 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$feb61cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:19:25 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:19:25 - Starting service Tomcat
2018-11-30 18:19:25 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:19:26 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:19:26 - Root WebApplicationContext: initialization completed in 3656 ms
2018-11-30 18:19:26 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:19:26 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:19:26 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:19:26 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:19:26 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:19:26 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:19:26 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:19:26 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:19:26 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:19:26 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:19:27 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:19:27 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:19:27 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:19:27 - HHH000206: hibernate.properties not found
2018-11-30 18:19:27 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:19:27 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:19:28 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:19:28 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:19:30 - 

Using default security password: 9c0ca48a-d135-498c-abe6-268d4f36ef35

2018-11-30 18:19:30 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2976b2c9, org.springframework.security.web.context.SecurityContextPersistenceFilter@121a850f, org.springframework.security.web.header.HeaderWriterFilter@3438abdf, org.springframework.security.web.authentication.logout.LogoutFilter@673df9b5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4f401c39, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d70c4ed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13d23d1e, org.springframework.security.web.session.SessionManagementFilter@76fc3f5c, org.springframework.security.web.access.ExceptionTranslationFilter@29df581a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@40524b39]
2018-11-30 18:19:30 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@18ba8b2f, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6366e861, org.springframework.security.web.context.SecurityContextPersistenceFilter@23a57c6, org.springframework.security.web.header.HeaderWriterFilter@2207dd60, org.springframework.security.web.authentication.logout.LogoutFilter@40b3300f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@69fb71e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77a72783, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b5718ca, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@676dc8c7, org.springframework.security.web.session.SessionManagementFilter@34103810, org.springframework.security.web.access.ExceptionTranslationFilter@37a8580a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26b46406]
2018-11-30 18:19:30 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@357670d7: startup date [Fri Nov 30 18:19:22 WAT 2018]; root of context hierarchy
2018-11-30 18:19:30 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:19:30 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:19:30 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:19:30 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:19:30 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:19:30 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:19:30 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:19:31 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:19:31 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:19:31 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:19:31 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:19:31 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:19:31 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:19:31 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:19:31 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:19:31 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:19:31 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:19:31 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:19:31 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:19:31 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:19:31 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:19:31 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:19:31 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:19:31 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:19:32 - LiveReload server is running on port 35729
2018-11-30 18:19:32 - Registering beans for JMX exposure on startup
2018-11-30 18:19:32 - Registering beans for JMX exposure on startup
2018-11-30 18:19:32 - Starting beans in phase 0
2018-11-30 18:19:32 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:19:32 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:19:32 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:19:32 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:19:32 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:19:32 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:19:32 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:19:32 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:19:32 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:19:32 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:19:32 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:19:32 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:19:32 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:19:32 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:19:32 - Using a shared selector for servlet write/read
2018-11-30 18:19:32 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:19:32 - Started GtbankApiApplication in 11.101 seconds (JVM running for 12.176)
2018-11-30 18:19:41 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 18:19:41 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 18:19:41 - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2018-11-30 18:19:41 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 18:19:41 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222226)
2018-11-30 18:19:41 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"OMfH2bVfp2fp2LugQ9kOgxyZS+61jZHy1L+mbVLYFd1L4AJMZ2oyjQ1OS+qxdRyvKccIKwe7VTig0qHECWbfFaNZ/pYEtSCIEzy1hnfyCZi9T9M4TF4waTrQQZovjKhaMN173mbDoPPZUOf+g7EvdYHBbLDR0kG+jRhwxS/g7xg\u003d","channel":"TP-XPAGENT","userId":"RsaMy+m/AaI+fdpwWrWUBh6X4TE+oAEbd3E1ndBD6AIgcgfxb1tV8CxFIf4LOrWf5J3sEaKs9Zr8AwuBqWCA2w7/+275H9Xc74S8o51rg5vriiUbmIhkAkh67INeTHL3UhnJtJJRmzKsrTUmdy1dky3wDwwxt906ueKLVwCbg/I\u003d"}
2018-11-30 18:19:42 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791987884798068","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Ranaerbenjamin@teleworm.us","gender":"Female","phoneNumber2":"07020602869","levelOfAccount":"Level 3 - High Level Accounts","lgaOfOrigin":"Esan South-east","lgaOfResidence":"Kanam","maritalStatus":"Widow","nin":"352-923-1835","nameOnCard":"Ranae Benjamin","nationality":"Nigeria","residentialAddress":"425 Chardonnay Drive","stateOfOrigin":"edo state","stateOfResidence":"plateau state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222226","firstName":"Ranae","middleName":"R","lastName":"Benjamin","dateOfBirth":"03-Oct-1993","registrationDate":"20-Dec-2016","enrollmentBank":"068","enrollmentBranch":"NULL","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 17:19:48 GMT], Content-Length=[20300]}>
2018-11-30 18:21:33 - Starting GtbankApiApplication on SOLDEV28 with PID 12376 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:21:33 - No active profile set, falling back to default profiles: default
2018-11-30 18:21:33 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 18:21:33 WAT 2018]; root of context hierarchy
2018-11-30 18:21:34 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:21:35 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:21:36 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:21:36 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:21:36 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$ab1e7a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:21:36 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:21:36 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$661a22a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:21:36 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:21:37 - Starting service Tomcat
2018-11-30 18:21:37 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:21:37 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:21:37 - Root WebApplicationContext: initialization completed in 3370 ms
2018-11-30 18:21:37 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:21:37 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:21:37 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:21:37 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:21:37 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:21:37 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:21:37 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:21:37 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:21:37 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:21:37 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:21:38 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:21:38 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:21:38 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:21:38 - HHH000206: hibernate.properties not found
2018-11-30 18:21:38 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:21:38 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:21:39 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:21:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:21:40 - 

Using default security password: 9a60a346-057b-4ef4-a330-39aa01a53090

2018-11-30 18:21:40 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@108d4373, org.springframework.security.web.context.SecurityContextPersistenceFilter@69692c85, org.springframework.security.web.header.HeaderWriterFilter@665751bd, org.springframework.security.web.authentication.logout.LogoutFilter@7bf72989, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@495b549d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@296e27ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f1c590a, org.springframework.security.web.session.SessionManagementFilter@44b03946, org.springframework.security.web.access.ExceptionTranslationFilter@64861a1b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@25b9628]
2018-11-30 18:21:40 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@99a34b4, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5366b26a, org.springframework.security.web.context.SecurityContextPersistenceFilter@425a0bd0, org.springframework.security.web.header.HeaderWriterFilter@d2bfb6, org.springframework.security.web.authentication.logout.LogoutFilter@7240086, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3c2cc14c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7773380c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6249165b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@113b776e, org.springframework.security.web.session.SessionManagementFilter@21a7031a, org.springframework.security.web.access.ExceptionTranslationFilter@3821a7b0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@48bfff0e]
2018-11-30 18:21:40 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c54bdf8: startup date [Fri Nov 30 18:21:33 WAT 2018]; root of context hierarchy
2018-11-30 18:21:41 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:21:41 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:21:41 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:21:41 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:21:41 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:21:41 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:21:41 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:21:41 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:21:41 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:21:41 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:21:41 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:21:41 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:21:41 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:21:41 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:21:41 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:21:41 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:21:41 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:21:41 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:21:41 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:21:41 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:21:41 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:21:41 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:21:41 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:21:41 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:21:41 - LiveReload server is running on port 35729
2018-11-30 18:21:41 - Registering beans for JMX exposure on startup
2018-11-30 18:21:41 - Registering beans for JMX exposure on startup
2018-11-30 18:21:41 - Starting beans in phase 0
2018-11-30 18:21:41 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:21:41 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:21:41 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:21:41 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:21:41 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:21:41 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:21:41 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:21:42 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:21:42 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:21:42 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:21:42 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:21:42 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:21:42 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:21:42 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:21:42 - Using a shared selector for servlet write/read
2018-11-30 18:21:42 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:21:42 - Started GtbankApiApplication in 9.006 seconds (JVM running for 10.626)
2018-11-30 18:22:30 - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests], using SpringBootContextLoader
2018-11-30 18:22:30 - Could not detect default resource locations for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-11-30 18:22:30 - Could not detect default configuration classes for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests]: GtbankApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-11-30 18:22:30 - Found @SpringBootConfiguration com.xpresspayments.ZenithBank.ZenithbankApiApplication for test class com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests
2018-11-30 18:22:30 - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-11-30 18:22:30 - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4d9e68d0, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@42e99e4a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@14dd9eb7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@52e6fdee, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6c80d78a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@62150f9e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1a451d4d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7fa98a66, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@15ff3e9e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5fdcaa40, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6dc17b83, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5e0826e7]
2018-11-30 18:22:30 - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests], using SpringBootContextLoader
2018-11-30 18:22:30 - Could not detect default resource locations for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-11-30 18:22:30 - Could not detect default configuration classes for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests]: GtbankApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-11-30 18:22:30 - Found @SpringBootConfiguration com.xpresspayments.ZenithBank.ZenithbankApiApplication for test class com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests
2018-11-30 18:22:30 - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-11-30 18:22:30 - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d8995e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@130d63be, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@42a48628, org.springframework.test.context.support.DirtiesContextTestExecutionListener@293a5bf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6aeb35e6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1283bb96, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@74f0ea28, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f6efaab, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3c19aaa5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3349e9bb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@409bf450, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@38d8f54a]
2018-11-30 18:22:30 - Starting GtbankApiApplicationTests on SOLDEV28 with PID 10148 (started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:22:30 - No active profile set, falling back to default profiles: default
2018-11-30 18:22:30 - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7ae0a9ec: startup date [Fri Nov 30 18:22:30 WAT 2018]; root of context hierarchy
2018-11-30 18:22:31 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:22:33 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:22:33 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:22:33 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:22:33 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$aa6c6fbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:22:33 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:22:33 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d4aabf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:22:35 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:22:35 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:22:35 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:22:35 - HHH000206: hibernate.properties not found
2018-11-30 18:22:35 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:22:35 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:22:35 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:22:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:22:37 - 

Using default security password: af80b306-7466-4d8e-b2bc-3d3aa499f1d1

2018-11-30 18:22:37 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3cad24ae, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e01796a, org.springframework.security.web.header.HeaderWriterFilter@3a709cc7, org.springframework.security.web.authentication.logout.LogoutFilter@40738846, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e91facf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c41a177, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58021c3c, org.springframework.security.web.session.SessionManagementFilter@6906be0f, org.springframework.security.web.access.ExceptionTranslationFilter@3cead673, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e258d3b]
2018-11-30 18:22:37 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@5788722f, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a730479, org.springframework.security.web.context.SecurityContextPersistenceFilter@15d58530, org.springframework.security.web.header.HeaderWriterFilter@8d810f2, org.springframework.security.web.authentication.logout.LogoutFilter@56299b0e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1bc6c20d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@31f5b923, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79e2606f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e5b33e5, org.springframework.security.web.session.SessionManagementFilter@537b3be1, org.springframework.security.web.access.ExceptionTranslationFilter@114b203, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@351ede23]
2018-11-30 18:22:38 - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7ae0a9ec: startup date [Fri Nov 30 18:22:30 WAT 2018]; root of context hierarchy
2018-11-30 18:22:38 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:22:38 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:22:38 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:22:38 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:22:38 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:22:38 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:22:38 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:22:38 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:22:38 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:22:38 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:22:38 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:22:38 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:22:38 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:22:38 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:22:38 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:22:38 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:22:38 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:22:38 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:22:38 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:22:38 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:22:38 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:22:38 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:22:38 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:22:38 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:22:39 - Started GtbankApiApplicationTests in 8.739 seconds (JVM running for 9.977)
2018-11-30 18:22:39 - Closing org.springframework.web.context.support.GenericWebApplicationContext@7ae0a9ec: startup date [Fri Nov 30 18:22:30 WAT 2018]; root of context hierarchy
2018-11-30 18:22:39 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:33:21 - Starting GtbankApiApplication on SOLDEV28 with PID 31036 (C:\Users\amaechi.ekene\IdeaProjects\gtbank-api\target\classes started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:33:21 - No active profile set, falling back to default profiles: default
2018-11-30 18:33:21 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc5e7d1: startup date [Fri Nov 30 18:33:21 WAT 2018]; root of context hierarchy
2018-11-30 18:33:22 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:33:24 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:33:24 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:33:24 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:33:24 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$34c1a01e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:33:24 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:33:24 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9029db1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:33:25 - Tomcat initialized with port(s): 8094 (http)
2018-11-30 18:33:25 - Starting service Tomcat
2018-11-30 18:33:25 - Starting Servlet Engine: Apache Tomcat/8.5.11
2018-11-30 18:33:25 - Initializing Spring embedded WebApplicationContext
2018-11-30 18:33:25 - Root WebApplicationContext: initialization completed in 3514 ms
2018-11-30 18:33:25 - Mapping filter: 'metricsFilter' to: [/*]
2018-11-30 18:33:25 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-11-30 18:33:25 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-11-30 18:33:25 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-11-30 18:33:25 - Mapping filter: 'requestContextFilter' to: [/*]
2018-11-30 18:33:25 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-11-30 18:33:25 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-11-30 18:33:25 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-11-30 18:33:25 - Mapping servlet: 'dispatcherServlet' to [/]
2018-11-30 18:33:25 - Mapping servlet: 'messageDispatcherServlet' to [/services/*]
2018-11-30 18:33:27 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:33:27 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:33:27 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:33:27 - HHH000206: hibernate.properties not found
2018-11-30 18:33:27 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:33:27 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:33:27 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:33:27 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:33:28 - 

Using default security password: e3238ef3-a557-461a-9fa4-e701c25a0f9e

2018-11-30 18:33:29 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32466ba, org.springframework.security.web.context.SecurityContextPersistenceFilter@4d5c3f30, org.springframework.security.web.header.HeaderWriterFilter@1d1548fa, org.springframework.security.web.authentication.logout.LogoutFilter@11e95668, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@a506793, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a44fe8b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@514ad60e, org.springframework.security.web.session.SessionManagementFilter@451d7ef, org.springframework.security.web.access.ExceptionTranslationFilter@357922b4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2df8b121]
2018-11-30 18:33:29 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@60fd57a4, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f672268, org.springframework.security.web.context.SecurityContextPersistenceFilter@33795a78, org.springframework.security.web.header.HeaderWriterFilter@4e893395, org.springframework.security.web.authentication.logout.LogoutFilter@62f692e5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@59f2d4ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@481919, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7da971e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2db96100, org.springframework.security.web.session.SessionManagementFilter@62a7c888, org.springframework.security.web.access.ExceptionTranslationFilter@73780f49, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@52985af5]
2018-11-30 18:33:29 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc5e7d1: startup date [Fri Nov 30 18:33:21 WAT 2018]; root of context hierarchy
2018-11-30 18:33:29 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:33:29 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:33:29 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:33:29 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:33:29 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:33:29 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:33:29 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:33:29 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:33:29 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:33:29 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:33:29 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:33:29 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:33:29 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:33:29 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:33:29 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:33:29 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:33:29 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:33:29 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:33:29 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:33:29 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:33:29 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:33:29 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:33:29 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:33:29 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:33:29 - LiveReload server is running on port 35729
2018-11-30 18:33:30 - Registering beans for JMX exposure on startup
2018-11-30 18:33:30 - Registering beans for JMX exposure on startup
2018-11-30 18:33:30 - Starting beans in phase 0
2018-11-30 18:33:30 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-11-30 18:33:30 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-11-30 18:33:30 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-11-30 18:33:30 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-11-30 18:33:30 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-11-30 18:33:30 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-11-30 18:33:30 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-11-30 18:33:30 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-11-30 18:33:30 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-11-30 18:33:30 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-11-30 18:33:30 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-11-30 18:33:30 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-11-30 18:33:30 - Initializing ProtocolHandler ["http-nio-8094"]
2018-11-30 18:33:30 - Starting ProtocolHandler [http-nio-8094]
2018-11-30 18:33:30 - Using a shared selector for servlet write/read
2018-11-30 18:33:30 - Tomcat started on port(s): 8094 (http)
2018-11-30 18:33:30 - Started GtbankApiApplication in 9.225 seconds (JVM running for 10.36)
2018-11-30 18:34:27 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-11-30 18:34:27 - FrameworkServlet 'dispatcherServlet': initialization started
2018-11-30 18:34:28 - FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-11-30 18:34:28 - :::::::::: GETBVN URL http://gtweb6.gtbank.com/WEBAPIs/PubEncrypt/GTBRequestService/Api/GetSingleBVN
2018-11-30 18:34:28 - :::::::::: REQUEST ApiBVNValidationRequest(bankId=null, bvn=22222222226)
2018-11-30 18:34:28 - :::::::::: ENCRYPTEDREQUEST  {"bvn":"IwQdMCixyr1nD76YZZdntE3aD31cewMrpzcT9iFyoPFSguUNQTbg2kOB/UJlste8NNRq8RbyQWkoKlICb9WWnzfnNiC3pmVMYFq3pfUmm4edjZkvjQa13oUtBOQ3Q3GFVxwddynMjPOM1yphw5Bo+IR85whxuwBMGGetuaKxxOA\u003d","channel":"TP-XPAGENT","userId":"Ka8TJg25GdiELce2uKiWfJdfWuA9rv5RALq3MR8o8JtdjkH4kV4BUa77Xt3b1NJ8kbRuG2oqMsA0eT8+47apn8x9XDm4nbB9u1KPPdKaJNP0x8GBny+U/U5Hb0X8ypNeSl3YFenywpeoS+C0jNOtgmH0Nzn7sLtVckRQFttorpY\u003d"}
2018-11-30 18:34:29 - :::::::::: GETBVN RESPONSE   <200 OK,{"requestId":"636791996752835921","responseCode":"00","responseDescription":"Success","responseObject":{"phoneNumber":null,"email":"Ranaerbenjamin@teleworm.us","gender":"Female","phoneNumber2":"07020602869","levelOfAccount":"Level 3 - High Level Accounts","lgaOfOrigin":"Esan South-east","lgaOfResidence":"Kanam","maritalStatus":"Widow","nin":"352-923-1835","nameOnCard":"Ranae Benjamin","nationality":"Nigeria","residentialAddress":"425 Chardonnay Drive","stateOfOrigin":"edo state","stateOfResidence":"plateau state","title":"Dr","base64Image":"","responseCode":"00","bvn":"22222222226","firstName":"Ranae","middleName":"R","lastName":"Benjamin","dateOfBirth":"03-Oct-1993","registrationDate":"20-Dec-2016","enrollmentBank":"068","enrollmentBranch":"NULL","watchListed":"NO","requestId":null,"responseDescription":null,"userId":null}},{Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[application/json; charset=utf-8], Expires=[-1], Server=[Microsoft-IIS/8.5], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET], Access-Control-Allow-Origin=[*], Access-Control-Allow-Methods=[POST,GET,PUT,PATCH,DELETE,OPTIONS], Access-Control-Allow-Credentials=[true], Access-Control-Allow-Headers=[Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name], Date=[Fri, 30 Nov 2018 17:34:35 GMT], Content-Length=[20300]}>
2018-11-30 18:34:42 - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests], using SpringBootContextLoader
2018-11-30 18:34:42 - Could not detect default resource locations for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-11-30 18:34:42 - Could not detect default configuration classes for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests]: GtbankApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-11-30 18:34:43 - Found @SpringBootConfiguration com.xpresspayments.ZenithBank.ZenithbankApiApplication for test class com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests
2018-11-30 18:34:43 - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-11-30 18:34:43 - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4d9e68d0, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@42e99e4a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@14dd9eb7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@52e6fdee, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6c80d78a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@62150f9e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1a451d4d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7fa98a66, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@15ff3e9e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5fdcaa40, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6dc17b83, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5e0826e7]
2018-11-30 18:34:43 - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests], using SpringBootContextLoader
2018-11-30 18:34:43 - Could not detect default resource locations for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-11-30 18:34:43 - Could not detect default configuration classes for test class [com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests]: GtbankApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-11-30 18:34:43 - Found @SpringBootConfiguration com.xpresspayments.ZenithBank.ZenithbankApiApplication for test class com.xpresspayments.ZenithBank.ZenithbankApiApplicationTests
2018-11-30 18:34:43 - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-11-30 18:34:43 - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d8995e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@130d63be, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@42a48628, org.springframework.test.context.support.DirtiesContextTestExecutionListener@293a5bf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6aeb35e6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1283bb96, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@74f0ea28, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f6efaab, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3c19aaa5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3349e9bb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@409bf450, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@38d8f54a]
2018-11-30 18:34:43 - Starting GtbankApiApplicationTests on SOLDEV28 with PID 21708 (started by amaechi.ekene in C:\Users\amaechi.ekene\IdeaProjects\gtbank-api)
2018-11-30 18:34:43 - No active profile set, falling back to default profiles: default
2018-11-30 18:34:43 - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7ae0a9ec: startup date [Fri Nov 30 18:34:43 WAT 2018]; root of context hierarchy
2018-11-30 18:34:44 - HV000001: Hibernate Validator 5.3.4.Final
2018-11-30 18:34:45 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-11-30 18:34:45 - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:34:45 - Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:34:45 - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$590fc27a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:34:46 - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2018-11-30 18:34:46 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b477fd7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-11-30 18:34:48 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-11-30 18:34:48 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-30 18:34:48 - HHH000412: Hibernate Core {5.0.11.Final}
2018-11-30 18:34:48 - HHH000206: hibernate.properties not found
2018-11-30 18:34:48 - HHH000021: Bytecode provider name : javassist
2018-11-30 18:34:48 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-11-30 18:34:48 - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2018-11-30 18:34:49 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-30 18:34:50 - 

Using default security password: e98cb4c1-a606-44a2-a041-c5df1a56a470

2018-11-30 18:34:50 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@50785f86, org.springframework.security.web.context.SecurityContextPersistenceFilter@62883f8a, org.springframework.security.web.header.HeaderWriterFilter@67e11bda, org.springframework.security.web.authentication.logout.LogoutFilter@43ab0659, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e49b011, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@16fc5622, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c3c3d67, org.springframework.security.web.session.SessionManagementFilter@4152bd0f, org.springframework.security.web.access.ExceptionTranslationFilter@430d3021, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1c8e8fed]
2018-11-30 18:34:50 - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@283e1759, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2acb1264, org.springframework.security.web.context.SecurityContextPersistenceFilter@404009df, org.springframework.security.web.header.HeaderWriterFilter@4ef8090b, org.springframework.security.web.authentication.logout.LogoutFilter@77e6761f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4a890fdd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75e4fe3c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bda01da, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30a01dd8, org.springframework.security.web.session.SessionManagementFilter@6d31f14, org.springframework.security.web.access.ExceptionTranslationFilter@1b25d695, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@8d810f2]
2018-11-30 18:34:50 - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7ae0a9ec: startup date [Fri Nov 30 18:34:43 WAT 2018]; root of context hierarchy
2018-11-30 18:34:50 - Mapped "{[/bvn/validatebvn],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiBvnValidationResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.GetSingleBVN(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiBVNValidationRequest) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/accountopening],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiAccountOpeningResponse com.xpresspayments.ZenithBank.controller.AccountOpeningController.OpenAccount(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiAccountOpeningRequest) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/otp],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.XPDirect.Model.response.ApiValidationResponse com.xpresspayments.ZenithBank.controller.FacValidationController.validateCustomer(com.xpresspayments.ZenithBank.model.XPDirect.Model.request.ApiValidationRequest) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/cashout],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.CashOutResponse com.xpresspayments.ZenithBank.controller.FacValidationController.cashOut(com.xpresspayments.ZenithBank.model.request.CashOutRequest) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/api/v1/xpresspayment/balances],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiBalanceRetrievalResponse com.xpresspayments.ZenithBank.controller.GapsController.retrieveBalance(com.xpresspayments.ZenithBank.model.request.BalanceRetrievalRequest) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/api/v1/xpresspayment/payments],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makeBulkPayments(com.xpresspayments.ZenithBank.model.request.MakePaymentRequest) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/api/v1/xpresspayment/retailpayments],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.makePayments(com.xpresspayments.ZenithBank.model.request.ApiFundTransferRequest) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/api/v1/xpresspayment/nameenquiry],produces=[application/json]}" onto public com.xpresspayments.ZenithBank.model.response.ApiAccountValidationResponse com.xpresspayments.ZenithBank.controller.GapsController.validateAccount(com.xpresspayments.ZenithBank.model.request.AccountValidationRequest) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/api/v1/xpresspayment/retailpayments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getRetailPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/api/v1/xpresspayment/payments],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.getPayment(java.lang.String) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/api/v1/xpresspayment/accountstatements],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.xpresspayments.ZenithBank.model.response.ZenithBankApiResponse> com.xpresspayments.ZenithBank.controller.GapsController.requestAccountStatement(com.xpresspayments.ZenithBank.model.request.ApiAccountStatementRequest) throws java.lang.Exception
2018-11-30 18:34:50 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-11-30 18:34:50 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-11-30 18:34:50 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:34:50 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:34:50 - Detected @ExceptionHandler methods in errorHandler
2018-11-30 18:34:50 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-11-30 18:34:51 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-11-30 18:34:51 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-11-30 18:34:51 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-11-30 18:34:51 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:34:51 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:34:51 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-11-30 18:34:51 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:34:51 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-11-30 18:34:51 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-11-30 18:34:51 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:34:51 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:34:51 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:34:51 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest)
2018-11-30 18:34:51 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:34:51 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:34:51 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:34:51 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-11-30 18:34:51 - Started GtbankApiApplicationTests in 8.273 seconds (JVM running for 9.43)
2018-11-30 18:34:51 - Closing org.springframework.web.context.support.GenericWebApplicationContext@7ae0a9ec: startup date [Fri Nov 30 18:34:43 WAT 2018]; root of context hierarchy
2018-11-30 18:34:51 - Closing JPA EntityManagerFactory for persistence unit 'default'
